(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["components/modal/index.en-US.md"],{

/***/ "./node_modules/bisheng/lib/loaders/source-loader.js!./components/modal/index.en-US.md":
/*!*********************************************************************************************!*\
  !*** ./node_modules/bisheng/lib/loaders/source-loader.js!./components/modal/index.en-US.md ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = {\n  \"content\": [\n    \"section\",\n    [\n      \"p\",\n      \"Modal dialogs.\"\n    ],\n    [\n      \"h2\",\n      \"When To Use\"\n    ],\n    [\n      \"p\",\n      \"When requiring users to interact with the application, but without jumping to a new page and interrupting the user's workflow, you can use \",\n      [\n        \"code\",\n        \"Modal\"\n      ],\n      \" to create a new floating layer over the current page to get user feedback or display information. Additionally, if you need show a simple confirmation dialog, you can use \",\n      [\n        \"code\",\n        \"antd.Modal.confirm()\"\n      ],\n      \", and so on.\"\n    ]\n  ],\n  \"meta\": {\n    \"type\": \"Feedback\",\n    \"category\": \"Components\",\n    \"title\": \"Modal\",\n    \"cover\": \"https://gw.alipayobjects.com/zos/alicdn/3StSdUlSH/Modal.svg\",\n    \"filename\": \"components/modal/index.en-US.md\"\n  },\n  \"toc\": [\n    \"ul\",\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#When-To-Use\",\n          \"title\": \"When To Use\"\n        },\n        \"When To Use\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#API\",\n          \"title\": \"API\"\n        },\n        \"API\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#FAQ\",\n          \"title\": \"FAQ\"\n        },\n        \"FAQ\"\n      ]\n    ]\n  ],\n  \"api\": [\n    \"section\",\n    [\n      \"h2\",\n      \"API\"\n    ],\n    [\n      \"table\",\n      [\n        \"thead\",\n        [\n          \"tr\",\n          [\n            \"th\",\n            \"Property\"\n          ],\n          [\n            \"th\",\n            \"Description\"\n          ],\n          [\n            \"th\",\n            \"Type\"\n          ],\n          [\n            \"th\",\n            \"Default\"\n          ],\n          [\n            \"th\",\n            \"Version\"\n          ]\n        ]\n      ],\n      [\n        \"tbody\",\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"afterClose\"\n          ],\n          [\n            \"td\",\n            \"Specify a function that will be called when modal is closed completely\"\n          ],\n          [\n            \"td\",\n            \"function\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"bodyStyle\"\n          ],\n          [\n            \"td\",\n            \"Body style for modal body element. Such as height, padding etc\"\n          ],\n          [\n            \"td\",\n            \"CSSProperties\"\n          ],\n          [\n            \"td\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"cancelButtonProps\"\n          ],\n          [\n            \"td\",\n            \"The cancel button props\"\n          ],\n          [\n            \"td\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"/components/button/#API\"\n              },\n              \"ButtonProps\"\n            ]\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"cancelText\"\n          ],\n          [\n            \"td\",\n            \"Text of the Cancel button\"\n          ],\n          [\n            \"td\",\n            \"ReactNode\"\n          ],\n          [\n            \"td\",\n            [\n              \"code\",\n              \"Cancel\"\n            ]\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"centered\"\n          ],\n          [\n            \"td\",\n            \"Centered Modal\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            \"false\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"closable\"\n          ],\n          [\n            \"td\",\n            \"Whether a close (x) button is visible on top right of the modal dialog or not\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            \"true\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"closeIcon\"\n          ],\n          [\n            \"td\",\n            \"Custom close icon\"\n          ],\n          [\n            \"td\",\n            \"ReactNode\"\n          ],\n          [\n            \"td\",\n            \"<\",\n            \"CloseOutlined />\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"confirmLoading\"\n          ],\n          [\n            \"td\",\n            \"Whether to apply loading visual effect for OK button or not\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            \"false\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"destroyOnClose\"\n          ],\n          [\n            \"td\",\n            \"Whether to unmount child components on onClose\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            \"false\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"focusTriggerAfterClose\"\n          ],\n          [\n            \"td\",\n            \"Whether need to focus trigger element after dialog is closed\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            \"true\"\n          ],\n          [\n            \"td\",\n            \"4.9.0\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"footer\"\n          ],\n          [\n            \"td\",\n            \"Footer content, set as \",\n            [\n              \"code\",\n              \"footer={null}\"\n            ],\n            \" when you don't need default buttons\"\n          ],\n          [\n            \"td\",\n            \"ReactNode\"\n          ],\n          [\n            \"td\",\n            \"(OK and Cancel buttons)\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"forceRender\"\n          ],\n          [\n            \"td\",\n            \"Force render Modal\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            \"false\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"getContainer\"\n          ],\n          [\n            \"td\",\n            \"Return the mount node for Modal\"\n          ],\n          [\n            \"td\",\n            \"HTMLElement \",\n            \"|\",\n            \" () => HTMLElement \",\n            \"|\",\n            \" Selectors \",\n            \"|\",\n            \" false\"\n          ],\n          [\n            \"td\",\n            \"document.body\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"keyboard\"\n          ],\n          [\n            \"td\",\n            \"Whether support press esc to close\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            \"true\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"mask\"\n          ],\n          [\n            \"td\",\n            \"Whether show mask or not\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            \"true\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"maskClosable\"\n          ],\n          [\n            \"td\",\n            \"Whether to close the modal dialog when the mask (area outside the modal) is clicked\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            \"true\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"maskStyle\"\n          ],\n          [\n            \"td\",\n            \"Style for modal's mask element\"\n          ],\n          [\n            \"td\",\n            \"CSSProperties\"\n          ],\n          [\n            \"td\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"modalRender\"\n          ],\n          [\n            \"td\",\n            \"Custom modal content render\"\n          ],\n          [\n            \"td\",\n            \"(node: ReactNode) => ReactNode\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\",\n            \"4.7.0\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"okButtonProps\"\n          ],\n          [\n            \"td\",\n            \"The ok button props\"\n          ],\n          [\n            \"td\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"/components/button/#API\"\n              },\n              \"ButtonProps\"\n            ]\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"okText\"\n          ],\n          [\n            \"td\",\n            \"Text of the OK button\"\n          ],\n          [\n            \"td\",\n            \"ReactNode\"\n          ],\n          [\n            \"td\",\n            [\n              \"code\",\n              \"OK\"\n            ]\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"okType\"\n          ],\n          [\n            \"td\",\n            \"Button \",\n            [\n              \"code\",\n              \"type\"\n            ],\n            \" of the OK button\"\n          ],\n          [\n            \"td\",\n            \"string\"\n          ],\n          [\n            \"td\",\n            [\n              \"code\",\n              \"primary\"\n            ]\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"style\"\n          ],\n          [\n            \"td\",\n            \"Style of floating layer, typically used at least for adjusting the position\"\n          ],\n          [\n            \"td\",\n            \"CSSProperties\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"title\"\n          ],\n          [\n            \"td\",\n            \"The modal dialog's title\"\n          ],\n          [\n            \"td\",\n            \"ReactNode\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"visible\"\n          ],\n          [\n            \"td\",\n            \"Whether the modal dialog is visible or not\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            \"false\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"width\"\n          ],\n          [\n            \"td\",\n            \"Width of the modal dialog\"\n          ],\n          [\n            \"td\",\n            \"string \",\n            \"|\",\n            \" number\"\n          ],\n          [\n            \"td\",\n            \"520\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"wrapClassName\"\n          ],\n          [\n            \"td\",\n            \"The class name of the container of the modal dialog\"\n          ],\n          [\n            \"td\",\n            \"string\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"zIndex\"\n          ],\n          [\n            \"td\",\n            \"The \",\n            [\n              \"code\",\n              \"z-index\"\n            ],\n            \" of the Modal\"\n          ],\n          [\n            \"td\",\n            \"number\"\n          ],\n          [\n            \"td\",\n            \"1000\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"onCancel\"\n          ],\n          [\n            \"td\",\n            \"Specify a function that will be called when a user clicks mask, close button on top right or Cancel button\"\n          ],\n          [\n            \"td\",\n            \"function(e)\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"onOk\"\n          ],\n          [\n            \"td\",\n            \"Specify a function that will be called when a user clicks the OK button\"\n          ],\n          [\n            \"td\",\n            \"function(e)\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ]\n      ]\n    ],\n    [\n      \"h4\",\n      \"Note\"\n    ],\n    [\n      \"ul\",\n      [\n        \"li\",\n        [\n          \"p\",\n          \"The state of Modal will be preserved at it's component lifecycle by default, if you wish to open it with a brand new state everytime, set \",\n          [\n            \"code\",\n            \"destroyOnClose\"\n          ],\n          \" on it.\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"There is a situation that using \",\n          [\n            \"code\",\n            \"<Modal />\"\n          ],\n          \" with Form, which won't clear fields value when closing Modal even you have set \",\n          [\n            \"code\",\n            \"destroyOnClose\"\n          ],\n          \". You need \",\n          [\n            \"code\",\n            \"<Form preserve={false} />\"\n          ],\n          \" in this case.\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"code\",\n            \"Modal.method()\"\n          ],\n          \" RTL mode only supports hooks.\"\n        ]\n      ]\n    ],\n    [\n      \"h3\",\n      \"Modal.method()\"\n    ],\n    [\n      \"p\",\n      \"There are five ways to display the information based on the content's nature:\"\n    ],\n    [\n      \"ul\",\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"code\",\n            \"Modal.info\"\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"code\",\n            \"Modal.success\"\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"code\",\n            \"Modal.error\"\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"code\",\n            \"Modal.warning\"\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"code\",\n            \"Modal.confirm\"\n          ]\n        ]\n      ]\n    ],\n    [\n      \"p\",\n      \"The items listed above are all functions, expecting a settings object as parameter. The properties of the object are follows:\"\n    ],\n    [\n      \"table\",\n      [\n        \"thead\",\n        [\n          \"tr\",\n          [\n            \"th\",\n            \"Property\"\n          ],\n          [\n            \"th\",\n            \"Description\"\n          ],\n          [\n            \"th\",\n            \"Type\"\n          ],\n          [\n            \"th\",\n            \"Default\"\n          ],\n          [\n            \"th\",\n            \"Version\"\n          ]\n        ]\n      ],\n      [\n        \"tbody\",\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"afterClose\"\n          ],\n          [\n            \"td\",\n            \"Specify a function that will be called when modal is closed completely\"\n          ],\n          [\n            \"td\",\n            \"function\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\",\n            \"4.9.0\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"autoFocusButton\"\n          ],\n          [\n            \"td\",\n            \"Specify which button to autofocus\"\n          ],\n          [\n            \"td\",\n            \"null \",\n            \"|\",\n            \" \",\n            [\n              \"code\",\n              \"ok\"\n            ],\n            \" \",\n            \"|\",\n            \" \",\n            [\n              \"code\",\n              \"cancel\"\n            ]\n          ],\n          [\n            \"td\",\n            [\n              \"code\",\n              \"ok\"\n            ]\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"bodyStyle\"\n          ],\n          [\n            \"td\",\n            \"Body style for modal body element. Such as height, padding etc\"\n          ],\n          [\n            \"td\",\n            \"CSSProperties\"\n          ],\n          [\n            \"td\"\n          ],\n          [\n            \"td\",\n            \"4.8.0\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"cancelButtonProps\"\n          ],\n          [\n            \"td\",\n            \"The cancel button props\"\n          ],\n          [\n            \"td\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"/components/button/#API\"\n              },\n              \"ButtonProps\"\n            ]\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"cancelText\"\n          ],\n          [\n            \"td\",\n            \"Text of the Cancel button with Modal.confirm\"\n          ],\n          [\n            \"td\",\n            \"string\"\n          ],\n          [\n            \"td\",\n            [\n              \"code\",\n              \"Cancel\"\n            ]\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"centered\"\n          ],\n          [\n            \"td\",\n            \"Centered Modal\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            \"false\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"className\"\n          ],\n          [\n            \"td\",\n            \"The className of container\"\n          ],\n          [\n            \"td\",\n            \"string\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"closable\"\n          ],\n          [\n            \"td\",\n            \"Whether a close (x) button is visible on top right of the confirm dialog or not\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            \"false\"\n          ],\n          [\n            \"td\",\n            \"4.9.0\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"closeIcon\"\n          ],\n          [\n            \"td\",\n            \"Custom close icon\"\n          ],\n          [\n            \"td\",\n            \"ReactNode\"\n          ],\n          [\n            \"td\",\n            \"undefined\"\n          ],\n          [\n            \"td\",\n            \"4.9.0\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"content\"\n          ],\n          [\n            \"td\",\n            \"Content\"\n          ],\n          [\n            \"td\",\n            \"ReactNode\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"getContainer\"\n          ],\n          [\n            \"td\",\n            \"Return the mount node for Modal\"\n          ],\n          [\n            \"td\",\n            \"HTMLElement \",\n            \"|\",\n            \" () => HTMLElement \",\n            \"|\",\n            \" Selectors \",\n            \"|\",\n            \" false\"\n          ],\n          [\n            \"td\",\n            \"document.body\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"icon\"\n          ],\n          [\n            \"td\",\n            \"Custom icon\"\n          ],\n          [\n            \"td\",\n            \"ReactNode\"\n          ],\n          [\n            \"td\",\n            \"<\",\n            \"QuestionCircle />\"\n          ],\n          [\n            \"td\",\n            \"3.12.0\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"keyboard\"\n          ],\n          [\n            \"td\",\n            \"Whether support press esc to close\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            \"true\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"mask\"\n          ],\n          [\n            \"td\",\n            \"Whether show mask or not.\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            \"true\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"maskClosable\"\n          ],\n          [\n            \"td\",\n            \"Whether to close the modal dialog when the mask (area outside the modal) is clicked\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            \"false\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"maskStyle\"\n          ],\n          [\n            \"td\",\n            \"Style for modal's mask element\"\n          ],\n          [\n            \"td\",\n            \"object\"\n          ],\n          [\n            \"td\",\n            \"{}\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"okButtonProps\"\n          ],\n          [\n            \"td\",\n            \"The ok button props\"\n          ],\n          [\n            \"td\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"/components/button/#API\"\n              },\n              \"ButtonProps\"\n            ]\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"okText\"\n          ],\n          [\n            \"td\",\n            \"Text of the OK button\"\n          ],\n          [\n            \"td\",\n            \"string\"\n          ],\n          [\n            \"td\",\n            [\n              \"code\",\n              \"OK\"\n            ]\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"okType\"\n          ],\n          [\n            \"td\",\n            \"Button \",\n            [\n              \"code\",\n              \"type\"\n            ],\n            \" of the OK button\"\n          ],\n          [\n            \"td\",\n            \"string\"\n          ],\n          [\n            \"td\",\n            [\n              \"code\",\n              \"primary\"\n            ]\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"style\"\n          ],\n          [\n            \"td\",\n            \"Style of floating layer, typically used at least for adjusting the position\"\n          ],\n          [\n            \"td\",\n            \"CSSProperties\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"title\"\n          ],\n          [\n            \"td\",\n            \"Title\"\n          ],\n          [\n            \"td\",\n            \"ReactNode\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"width\"\n          ],\n          [\n            \"td\",\n            \"Width of the modal dialog\"\n          ],\n          [\n            \"td\",\n            \"string \",\n            \"|\",\n            \" number\"\n          ],\n          [\n            \"td\",\n            \"416\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"zIndex\"\n          ],\n          [\n            \"td\",\n            \"The \",\n            [\n              \"code\",\n              \"z-index\"\n            ],\n            \" of the Modal\"\n          ],\n          [\n            \"td\",\n            \"number\"\n          ],\n          [\n            \"td\",\n            \"1000\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"onCancel\"\n          ],\n          [\n            \"td\",\n            \"Specify a function that will be called when the user clicks the Cancel button. The parameter of this function is a function whose execution should include closing the dialog. If the function does not take any parameter (\",\n            [\n              \"code\",\n              \"!onCancel.length\"\n            ],\n            \") then modal dialog will be closed unless returned value is \",\n            [\n              \"code\",\n              \"true\"\n            ],\n            \" (\",\n            [\n              \"code\",\n              \"!!onCancel()\"\n            ],\n            \"). You can also just return a promise and when the promise is resolved, the modal dialog will also be closed\"\n          ],\n          [\n            \"td\",\n            \"function(close)\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"onOk\"\n          ],\n          [\n            \"td\",\n            \"Specify a function that will be called when the user clicks the OK button. The parameter of this function is a function whose execution should include closing the dialog. If the function does not take any parameter (\",\n            [\n              \"code\",\n              \"!onOk.length\"\n            ],\n            \") then modal dialog will be closed unless returned value is \",\n            [\n              \"code\",\n              \"true\"\n            ],\n            \" (\",\n            [\n              \"code\",\n              \"!!onOk()\"\n            ],\n            \"). You can also just return a promise and when the promise is resolved, the modal dialog will also be closed\"\n          ],\n          [\n            \"td\",\n            \"function(close)\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ]\n      ]\n    ],\n    [\n      \"p\",\n      \"All the \",\n      [\n        \"code\",\n        \"Modal.method\"\n      ],\n      \"s will return a reference, and then we can update and close the modal dialog by the reference.\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"<span class=\\\"token keyword\\\">const</span> modal <span class=\\\"token operator\\\">=</span> Modal<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">info</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nmodal<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">update</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Updated title'</span><span class=\\\"token punctuation\\\">,</span>\\n  content<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Updated content'</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// on 4.8.0 or above, you can pass a function to update modal</span>\\nmodal<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">update</span><span class=\\\"token punctuation\\\">(</span>prevConfig <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token operator\\\">...</span>prevConfig<span class=\\\"token punctuation\\\">,</span>\\n  title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>prevConfig<span class=\\\"token punctuation\\\">.</span>title<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\"> (New)`</span></span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nmodal<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">destroy</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"const modal = Modal.info();\\n\\nmodal.update({\\n  title: 'Updated title',\\n  content: 'Updated content',\\n});\\n\\n// on 4.8.0 or above, you can pass a function to update modal\\nmodal.update(prevConfig => ({\\n  ...prevConfig,\\n  title: `${prevConfig.title} (New)`,\\n}));\\n\\nmodal.destroy();\"\n      ]\n    ],\n    [\n      \"ul\",\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"code\",\n            \"Modal.destroyAll\"\n          ]\n        ]\n      ]\n    ],\n    [\n      \"p\",\n      [\n        \"code\",\n        \"Modal.destroyAll()\"\n      ],\n      \" could destroy all confirmation modal dialogs(\",\n      [\n        \"code\",\n        \"Modal.confirm|success|info|error|warning\"\n      ],\n      \"). Usually, you can use it in router change event to destroy confirm modal dialog automatically without use modal reference to close( it's too complex to use for all modal dialogs)\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> browserHistory <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-router'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// router change</span>\\nbrowserHistory<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">listen</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  Modal<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">destroyAll</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"import { browserHistory } from 'react-router';\\n\\n// router change\\nbrowserHistory.listen(() => {\\n  Modal.destroyAll();\\n});\"\n      ]\n    ],\n    [\n      \"h3\",\n      \"Modal.useModal()\"\n    ],\n    [\n      \"p\",\n      \"When you need using Context, you can use \",\n      [\n        \"code\",\n        \"contextHolder\"\n      ],\n      \" which created by \",\n      [\n        \"code\",\n        \"Modal.useModal\"\n      ],\n      \" to insert into children. Modal created by hooks will get all the context where \",\n      [\n        \"code\",\n        \"contextHolder\"\n      ],\n      \" are. Created \",\n      [\n        \"code\",\n        \"modal\"\n      ],\n      \" has the same creating function with \",\n      [\n        \"code\",\n        \"Modal.method\"\n      ],\n      \".\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>modal<span class=\\\"token punctuation\\\">,</span> contextHolder<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> Modal<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">useModal</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nReact<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">useEffect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  modal<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">confirm</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// ...</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">{</span>contextHolder<span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"const [modal, contextHolder] = Modal.useModal();\\n\\nReact.useEffect(() => {\\n  modal.confirm({\\n    // ...\\n  });\\n}, []);\\n\\nreturn <div>{contextHolder}</div>;\"\n      ]\n    ],\n    [\n      \"h2\",\n      \"FAQ\"\n    ],\n    [\n      \"h3\",\n      \"Why I can not access context, redux, ConfigProvider \",\n      [\n        \"code\",\n        \"locale/prefixCls\"\n      ],\n      \" in Modal.xxx?\"\n    ],\n    [\n      \"p\",\n      \"antd will dynamic create React instance by \",\n      [\n        \"code\",\n        \"ReactDOM.render\"\n      ],\n      \" when call Modal methods. Whose context is different with origin code located context.\"\n    ],\n    [\n      \"p\",\n      \"When you need context info (like ConfigProvider context), you can use \",\n      [\n        \"code\",\n        \"Modal.useModal\"\n      ],\n      \" to get \",\n      [\n        \"code\",\n        \"modal\"\n      ],\n      \" instance and \",\n      [\n        \"code\",\n        \"contextHolder\"\n      ],\n      \" node. And put it in your children:\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"tsx\",\n        \"highlighted\": \"<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>modal<span class=\\\"token punctuation\\\">,</span> contextHolder<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> Modal<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">useModal</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n<span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">/</span> <span class=\\\"token keyword\\\">then</span> call modal<span class=\\\"token punctuation\\\">.</span>confirm instead of Modal<span class=\\\"token punctuation\\\">.</span>confirm\\n\\nreturn <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token operator\\\">&lt;</span>Context1<span class=\\\"token punctuation\\\">.</span>Provider value<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"Ant\\\"</span><span class=\\\"token operator\\\">></span>\\n    {<span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">*</span> contextHolder is <span class=\\\"token keyword\\\">in</span> Context1<span class=\\\"token punctuation\\\">,</span> which means modal will get context of Context1 <span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">/</span>}\\n    {contextHolder}\\n    <span class=\\\"token operator\\\">&lt;</span>Context2<span class=\\\"token punctuation\\\">.</span>Provider value<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"Design\\\"</span><span class=\\\"token operator\\\">></span>\\n      {<span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">*</span> contextHolder is out of Context2<span class=\\\"token punctuation\\\">,</span> which means modal will <span class=\\\"token operator\\\">not</span> get context of Context2 <span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">/</span>}\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Context2<span class=\\\"token punctuation\\\">.</span>Provider<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Context1<span class=\\\"token punctuation\\\">.</span>Provider<span class=\\\"token operator\\\">></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"const [modal, contextHolder] = Modal.useModal();\\n\\n// then call modal.confirm instead of Modal.confirm\\n\\nreturn (\\n  <Context1.Provider value=\\\"Ant\\\">\\n    {/* contextHolder is in Context1, which means modal will get context of Context1 */}\\n    {contextHolder}\\n    <Context2.Provider value=\\\"Design\\\">\\n      {/* contextHolder is out of Context2, which means modal will not get context of Context2 */}\\n    </Context2.Provider>\\n  </Context1.Provider>\\n);\"\n      ]\n    ],\n    [\n      \"p\",\n      [\n        \"strong\",\n        \"Note:\"\n      ],\n      \" You must insert \",\n      [\n        \"code\",\n        \"contextHolder\"\n      ],\n      \" into your children with hooks. You can use origin method if you do not need context connection.\"\n    ],\n    [\n      \"h3\",\n      \"How to disable motion?\"\n    ],\n    [\n      \"p\",\n      \"You can config \",\n      [\n        \"code\",\n        \"transitionName=\\\"\\\"\"\n      ],\n      \" and \",\n      [\n        \"code\",\n        \"maskTransitionName=\\\"\\\"\"\n      ],\n      \" to remove motion class. But you should note that these prop is internal usage which we don't promise exist in next major version.\"\n    ],\n    [\n      \"h3\",\n      \"How to set static methods prefixCls ？\"\n    ],\n    [\n      \"p\",\n      \"You can config with \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"/components/config-provider/#ConfigProvider.config()-4.13.0+\"\n        },\n        [\n          \"code\",\n          \"ConfigProvider.config\"\n        ]\n      ]\n    ]\n  ]\n};\n\n//# sourceURL=webpack:///./components/modal/index.en-US.md?./node_modules/bisheng/lib/loaders/source-loader.js");

/***/ })

}]);