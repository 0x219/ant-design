(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["components/message/index.zh-CN.md"],{

/***/ "./node_modules/bisheng/lib/loaders/source-loader.js!./components/message/index.zh-CN.md":
/*!***********************************************************************************************!*\
  !*** ./node_modules/bisheng/lib/loaders/source-loader.js!./components/message/index.zh-CN.md ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = {\n  \"content\": [\n    \"section\",\n    [\n      \"p\",\n      \"全局展示操作反馈信息。\"\n    ],\n    [\n      \"h2\",\n      \"何时使用\"\n    ],\n    [\n      \"ul\",\n      [\n        \"li\",\n        [\n          \"p\",\n          \"可提供成功、警告和错误等反馈信息。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"顶部居中显示并自动消失，是一种不打断用户操作的轻量级提示方式。\"\n        ]\n      ]\n    ]\n  ],\n  \"meta\": {\n    \"category\": \"Components\",\n    \"subtitle\": \"全局提示\",\n    \"type\": \"反馈\",\n    \"noinstant\": true,\n    \"title\": \"Message\",\n    \"cover\": \"https://gw.alipayobjects.com/zos/alicdn/hAkKTIW0K/Message.svg\",\n    \"filename\": \"components/message/index.zh-CN.md\"\n  },\n  \"toc\": [\n    \"ul\",\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#何时使用\",\n          \"title\": \"何时使用\"\n        },\n        \"何时使用\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#API\",\n          \"title\": \"API\"\n        },\n        \"API\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#FAQ\",\n          \"title\": \"FAQ\"\n        },\n        \"FAQ\"\n      ]\n    ]\n  ],\n  \"api\": [\n    \"section\",\n    [\n      \"h2\",\n      \"API\"\n    ],\n    [\n      \"p\",\n      \"组件提供了一些静态方法，使用方式和参数如下：\"\n    ],\n    [\n      \"ul\",\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"code\",\n            \"message.success(content, [duration], onClose)\"\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"code\",\n            \"message.error(content, [duration], onClose)\"\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"code\",\n            \"message.info(content, [duration], onClose)\"\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"code\",\n            \"message.warning(content, [duration], onClose)\"\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"code\",\n            \"message.warn(content, [duration], onClose)\"\n          ],\n          \" // alias of warning\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"code\",\n            \"message.loading(content, [duration], onClose)\"\n          ]\n        ]\n      ]\n    ],\n    [\n      \"table\",\n      [\n        \"thead\",\n        [\n          \"tr\",\n          [\n            \"th\",\n            \"参数\"\n          ],\n          [\n            \"th\",\n            \"说明\"\n          ],\n          [\n            \"th\",\n            \"类型\"\n          ],\n          [\n            \"th\",\n            \"默认值\"\n          ]\n        ]\n      ],\n      [\n        \"tbody\",\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"content\"\n          ],\n          [\n            \"td\",\n            \"提示内容\"\n          ],\n          [\n            \"td\",\n            \"ReactNode \",\n            \"|\",\n            \" config\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"duration\"\n          ],\n          [\n            \"td\",\n            \"自动关闭的延时，单位秒。设为 0 时不自动关闭\"\n          ],\n          [\n            \"td\",\n            \"number\"\n          ],\n          [\n            \"td\",\n            \"3\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"onClose\"\n          ],\n          [\n            \"td\",\n            \"关闭时触发的回调函数\"\n          ],\n          [\n            \"td\",\n            \"function\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ]\n        ]\n      ]\n    ],\n    [\n      \"p\",\n      \"组件同时提供 promise 接口。\"\n    ],\n    [\n      \"ul\",\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"code\",\n            \"message[level](content, [duration]).then(afterClose)\"\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"code\",\n            \"message[level](content, [duration], onClose).then(afterClose)\"\n          ]\n        ]\n      ]\n    ],\n    [\n      \"p\",\n      \"其中 \",\n      [\n        \"code\",\n        \"message[level]\"\n      ],\n      \" 是组件已经提供的静态方法。\",\n      [\n        \"code\",\n        \"then\"\n      ],\n      \" 接口返回值是 Promise。\"\n    ],\n    [\n      \"p\",\n      \"也可以对象的形式传递参数：\"\n    ],\n    [\n      \"ul\",\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"code\",\n            \"message.open(config)\"\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"code\",\n            \"message.success(config)\"\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"code\",\n            \"message.error(config)\"\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"code\",\n            \"message.info(config)\"\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"code\",\n            \"message.warning(config)\"\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"code\",\n            \"message.warn(config)\"\n          ],\n          \" // alias of warning\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"code\",\n            \"message.loading(config)\"\n          ]\n        ]\n      ]\n    ],\n    [\n      \"p\",\n      [\n        \"code\",\n        \"config\"\n      ],\n      \" 对象属性如下：\"\n    ],\n    [\n      \"table\",\n      [\n        \"thead\",\n        [\n          \"tr\",\n          [\n            \"th\",\n            \"参数\"\n          ],\n          [\n            \"th\",\n            \"说明\"\n          ],\n          [\n            \"th\",\n            \"类型\"\n          ],\n          [\n            \"th\",\n            \"默认值\"\n          ]\n        ]\n      ],\n      [\n        \"tbody\",\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"className\"\n          ],\n          [\n            \"td\",\n            \"自定义 CSS class\"\n          ],\n          [\n            \"td\",\n            \"string\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"content\"\n          ],\n          [\n            \"td\",\n            \"提示内容\"\n          ],\n          [\n            \"td\",\n            \"ReactNode\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"duration\"\n          ],\n          [\n            \"td\",\n            \"自动关闭的延时，单位秒。设为 0 时不自动关闭\"\n          ],\n          [\n            \"td\",\n            \"number\"\n          ],\n          [\n            \"td\",\n            \"3\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"icon\"\n          ],\n          [\n            \"td\",\n            \"自定义图标\"\n          ],\n          [\n            \"td\",\n            \"ReactNode\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"key\"\n          ],\n          [\n            \"td\",\n            \"当前提示的唯一标志\"\n          ],\n          [\n            \"td\",\n            \"string \",\n            \"|\",\n            \" number\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"style\"\n          ],\n          [\n            \"td\",\n            \"自定义内联样式\"\n          ],\n          [\n            \"td\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"https://github.com/DefinitelyTyped/DefinitelyTyped/blob/e434515761b36830c3e58a970abf5186f005adac/types/react/index.d.ts#L794\"\n              },\n              \"CSSProperties\"\n            ]\n          ],\n          [\n            \"td\",\n            \"-\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"onClick\"\n          ],\n          [\n            \"td\",\n            \"点击 message 时触发的回调函数\"\n          ],\n          [\n            \"td\",\n            \"function\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"onClose\"\n          ],\n          [\n            \"td\",\n            \"关闭时触发的回调函数\"\n          ],\n          [\n            \"td\",\n            \"function\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ]\n        ]\n      ]\n    ],\n    [\n      \"h3\",\n      \"全局方法\"\n    ],\n    [\n      \"p\",\n      \"还提供了全局配置和全局销毁方法：\"\n    ],\n    [\n      \"ul\",\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"code\",\n            \"message.config(options)\"\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"code\",\n            \"message.destroy()\"\n          ]\n        ]\n      ]\n    ],\n    [\n      \"blockquote\",\n      [\n        \"p\",\n        \"也可通过 \",\n        [\n          \"code\",\n          \"message.destroy(key)\"\n        ],\n        \" 来关闭一条消息。\"\n      ]\n    ],\n    [\n      \"h4\",\n      \"message.config\"\n    ],\n    [\n      \"blockquote\",\n      [\n        \"p\",\n        \"当你使用 \",\n        [\n          \"code\",\n          \"ConfigProvider\"\n        ],\n        \" 进行全局化配置时，系统会默认自动开启 RTL 模式。(4.3.0+)\"\n      ],\n      [\n        \"p\",\n        \"当你想单独使用，可通过如下设置开启 RTL 模式。\"\n      ]\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"js\",\n        \"highlighted\": \"message<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">config</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  top<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">,</span>\\n  duration<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span>\\n  maxCount<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">,</span>\\n  rtl<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n  prefixCls<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'my-message'</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"message.config({\\n  top: 100,\\n  duration: 2,\\n  maxCount: 3,\\n  rtl: true,\\n  prefixCls: 'my-message',\\n});\"\n      ]\n    ],\n    [\n      \"table\",\n      [\n        \"thead\",\n        [\n          \"tr\",\n          [\n            \"th\",\n            \"参数\"\n          ],\n          [\n            \"th\",\n            \"说明\"\n          ],\n          [\n            \"th\",\n            \"类型\"\n          ],\n          [\n            \"th\",\n            \"默认值\"\n          ],\n          [\n            \"th\",\n            \"版本\"\n          ]\n        ]\n      ],\n      [\n        \"tbody\",\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"duration\"\n          ],\n          [\n            \"td\",\n            \"默认自动关闭延时，单位秒\"\n          ],\n          [\n            \"td\",\n            \"number\"\n          ],\n          [\n            \"td\",\n            \"3\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"getContainer\"\n          ],\n          [\n            \"td\",\n            \"配置渲染节点的输出位置\"\n          ],\n          [\n            \"td\",\n            \"() => HTMLElement\"\n          ],\n          [\n            \"td\",\n            \"() => document.body\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"maxCount\"\n          ],\n          [\n            \"td\",\n            \"最大显示数, 超过限制时，最早的消息会被自动关闭\"\n          ],\n          [\n            \"td\",\n            \"number\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"prefixCls\"\n          ],\n          [\n            \"td\",\n            \"消息节点的 className 前缀\"\n          ],\n          [\n            \"td\",\n            \"string\"\n          ],\n          [\n            \"td\",\n            [\n              \"code\",\n              \"ant-message\"\n            ]\n          ],\n          [\n            \"td\",\n            \"4.5.0\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"rtl\"\n          ],\n          [\n            \"td\",\n            \"是否开启 RTL 模式\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            \"false\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"top\"\n          ],\n          [\n            \"td\",\n            \"消息距离顶部的位置\"\n          ],\n          [\n            \"td\",\n            \"number\"\n          ],\n          [\n            \"td\",\n            \"8\"\n          ],\n          [\n            \"td\"\n          ]\n        ]\n      ]\n    ],\n    [\n      \"h2\",\n      \"FAQ\"\n    ],\n    [\n      \"h3\",\n      \"为什么 message 不能获取 context、redux 的内容和 ConfigProvider 的 \",\n      [\n        \"code\",\n        \"locale/prefixCls\"\n      ],\n      \" 配置？\"\n    ],\n    [\n      \"p\",\n      \"直接调用 message 方法，antd 会通过 \",\n      [\n        \"code\",\n        \"ReactDOM.render\"\n      ],\n      \" 动态创建新的 React 实体。其 context 与当前代码所在 context 并不相同，因而无法获取 context 信息。\"\n    ],\n    [\n      \"p\",\n      \"当你需要 context 信息（例如 ConfigProvider 配置的内容）时，可以通过 \",\n      [\n        \"code\",\n        \"message.useMessage\"\n      ],\n      \" 方法会返回 \",\n      [\n        \"code\",\n        \"api\"\n      ],\n      \" 实体以及 \",\n      [\n        \"code\",\n        \"contextHolder\"\n      ],\n      \" 节点。将其插入到你需要获取 context 位置即可：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"tsx\",\n        \"highlighted\": \"<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>api<span class=\\\"token punctuation\\\">,</span> contextHolder<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> message<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">useMessage</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\nreturn <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token operator\\\">&lt;</span>Context1<span class=\\\"token punctuation\\\">.</span>Provider value<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"Ant\\\"</span><span class=\\\"token operator\\\">></span>\\n    {<span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">*</span> contextHolder 在 Context1 内，它可以获得 Context1 的 context <span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">/</span>}\\n    {contextHolder}\\n    <span class=\\\"token operator\\\">&lt;</span>Context2<span class=\\\"token punctuation\\\">.</span>Provider value<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"Design\\\"</span><span class=\\\"token operator\\\">></span>\\n      {<span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">*</span> contextHolder 在 Context2 外，因而不会获得 Context2 的 context <span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">/</span>}\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Context2<span class=\\\"token punctuation\\\">.</span>Provider<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Context1<span class=\\\"token punctuation\\\">.</span>Provider<span class=\\\"token operator\\\">></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"const [api, contextHolder] = message.useMessage();\\n\\nreturn (\\n  <Context1.Provider value=\\\"Ant\\\">\\n    {/* contextHolder 在 Context1 内，它可以获得 Context1 的 context */}\\n    {contextHolder}\\n    <Context2.Provider value=\\\"Design\\\">\\n      {/* contextHolder 在 Context2 外，因而不会获得 Context2 的 context */}\\n    </Context2.Provider>\\n  </Context1.Provider>\\n);\"\n      ]\n    ],\n    [\n      \"p\",\n      [\n        \"strong\",\n        \"异同：\"\n      ],\n      \"通过 hooks 创建的 \",\n      [\n        \"code\",\n        \"contextHolder\"\n      ],\n      \" 必须插入到子元素节点中才会生效，当你不需要上下文信息时请直接调用。\"\n    ],\n    [\n      \"h3\",\n      \"静态方法如何设置 prefixCls ？\"\n    ],\n    [\n      \"p\",\n      \"你可以通过 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"/components/config-provider/#ConfigProvider.config()-4.13.0+\"\n        },\n        [\n          \"code\",\n          \"ConfigProvider.config\"\n        ]\n      ],\n      \" 进行设置。\"\n    ]\n  ]\n};\n\n//# sourceURL=webpack:///./components/message/index.zh-CN.md?./node_modules/bisheng/lib/loaders/source-loader.js");

/***/ })

}]);