(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["components/tree/demo"],{

/***/ "./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/basic-controlled.md":
/*!******************************************************************************************************!*\
  !*** ./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/basic-controlled.md ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = {\n  \"content\": {\n    \"zh-CN\": [\n      [\n        \"p\",\n        \"受控操作示例\"\n      ]\n    ],\n    \"en-US\": [\n      [\n        \"p\",\n        \"Controlled mode lets parent nodes reflect the status of child nodes more intelligently.\"\n      ]\n    ]\n  },\n  \"meta\": {\n    \"order\": 1,\n    \"title\": {\n      \"zh-CN\": \"受控操作示例\",\n      \"en-US\": \"Controlled Tree\"\n    },\n    \"filename\": \"components/tree/demo/basic-controlled.md\",\n    \"id\": \"components-tree-demo-basic-controlled\"\n  },\n  \"toc\": [\n    \"ul\",\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#zh-CN\",\n          \"title\": \"zh-CN\"\n        },\n        \"zh-CN\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#en-US\",\n          \"title\": \"en-US\"\n        },\n        \"en-US\"\n      ]\n    ]\n  ],\n  \"highlightedCode\": [\n    \"pre\",\n    {\n      \"lang\": \"tsx\",\n      \"highlighted\": \"import React<span class=\\\"token punctuation\\\">,</span> { useState } from <span class=\\\"token string\\\">'react'</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\nimport { Tree } from <span class=\\\"token string\\\">'antd'</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> treeData <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  {\\n    title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n    key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n    children<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n      {\\n        title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n        children<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n          { title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-0-0'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-0-0'</span> }<span class=\\\"token punctuation\\\">,</span>\\n          { title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-0-1'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-0-1'</span> }<span class=\\\"token punctuation\\\">,</span>\\n          { title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-0-2'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-0-2'</span> }<span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      }<span class=\\\"token punctuation\\\">,</span>\\n      {\\n        title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n        children<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n          { title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-1-0'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-1-0'</span> }<span class=\\\"token punctuation\\\">,</span>\\n          { title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-1-1'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-1-1'</span> }<span class=\\\"token punctuation\\\">,</span>\\n          { title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-1-2'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-1-2'</span> }<span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      }<span class=\\\"token punctuation\\\">,</span>\\n      {\\n        title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-2'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-2'</span><span class=\\\"token punctuation\\\">,</span>\\n      }<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  }<span class=\\\"token punctuation\\\">,</span>\\n  {\\n    title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n    key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n    children<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n      { title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-1-0-0'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-1-0-0'</span> }<span class=\\\"token punctuation\\\">,</span>\\n      { title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-1-0-1'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-1-0-1'</span> }<span class=\\\"token punctuation\\\">,</span>\\n      { title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-1-0-2'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-1-0-2'</span> }<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  }<span class=\\\"token punctuation\\\">,</span>\\n  {\\n    title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-2'</span><span class=\\\"token punctuation\\\">,</span>\\n    key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-2'</span><span class=\\\"token punctuation\\\">,</span>\\n  }<span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> Demo <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> {\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>expandedKeys<span class=\\\"token punctuation\\\">,</span> setExpandedKeys<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> useState<span class=\\\"token operator\\\">&lt;</span>React<span class=\\\"token punctuation\\\">.</span>Key<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'0-0-1'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>checkedKeys<span class=\\\"token punctuation\\\">,</span> setCheckedKeys<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> useState<span class=\\\"token operator\\\">&lt;</span>React<span class=\\\"token punctuation\\\">.</span>Key<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>selectedKeys<span class=\\\"token punctuation\\\">,</span> setSelectedKeys<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> useState<span class=\\\"token operator\\\">&lt;</span>React<span class=\\\"token punctuation\\\">.</span>Key<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>autoExpandParent<span class=\\\"token punctuation\\\">,</span> setAutoExpandParent<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> useState<span class=\\\"token operator\\\">&lt;</span>boolean<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> onExpand <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>expandedKeysValue<span class=\\\"token punctuation\\\">:</span> React<span class=\\\"token punctuation\\\">.</span>Key<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> {\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'onExpand'</span><span class=\\\"token punctuation\\\">,</span> expandedKeysValue<span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n    <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">/</span> <span class=\\\"token keyword\\\">if</span> <span class=\\\"token operator\\\">not</span> set autoExpandParent <span class=\\\"token keyword\\\">to</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">if</span> children expanded<span class=\\\"token punctuation\\\">,</span> parent can <span class=\\\"token operator\\\">not</span> collapse<span class=\\\"token punctuation\\\">.</span>\\n    <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">/</span> <span class=\\\"token operator\\\">or</span><span class=\\\"token punctuation\\\">,</span> you can remove all expanded children keys<span class=\\\"token punctuation\\\">.</span>\\n    <span class=\\\"token function\\\">setExpandedKeys</span><span class=\\\"token punctuation\\\">(</span>expandedKeysValue<span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n    <span class=\\\"token function\\\">setAutoExpandParent</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n  }<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> onCheck <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>checkedKeysValue<span class=\\\"token punctuation\\\">:</span> React<span class=\\\"token punctuation\\\">.</span>Key<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> {\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'onCheck'</span><span class=\\\"token punctuation\\\">,</span> checkedKeysValue<span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n    <span class=\\\"token function\\\">setCheckedKeys</span><span class=\\\"token punctuation\\\">(</span>checkedKeysValue<span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n  }<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> onSelect <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>selectedKeysValue<span class=\\\"token punctuation\\\">:</span> React<span class=\\\"token punctuation\\\">.</span>Key<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> info<span class=\\\"token punctuation\\\">:</span> any<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> {\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'onSelect'</span><span class=\\\"token punctuation\\\">,</span> info<span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n    <span class=\\\"token function\\\">setSelectedKeys</span><span class=\\\"token punctuation\\\">(</span>selectedKeysValue<span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n  }<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n  return <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>Tree\\n      checkable\\n      onExpand<span class=\\\"token operator\\\">=</span>{onExpand}\\n      expandedKeys<span class=\\\"token operator\\\">=</span>{expandedKeys}\\n      autoExpandParent<span class=\\\"token operator\\\">=</span>{autoExpandParent}\\n      onCheck<span class=\\\"token operator\\\">=</span>{onCheck}\\n      checkedKeys<span class=\\\"token operator\\\">=</span>{checkedKeys}\\n      onSelect<span class=\\\"token operator\\\">=</span>{onSelect}\\n      selectedKeys<span class=\\\"token operator\\\">=</span>{selectedKeys}\\n      treeData<span class=\\\"token operator\\\">=</span>{treeData}\\n    <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n}<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">&lt;</span>Demo <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span> mountNode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\"\n    }\n  ],\n  \"highlightedCodes\": {\n    \"tsx\": \"<span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> useState <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Tree <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'antd'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> treeData <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n    key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n    children<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n        children<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n          <span class=\\\"token punctuation\\\">{</span> title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0-0'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0-0'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">{</span> title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0-1'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0-1'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">{</span> title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0-2'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0-2'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n        children<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n          <span class=\\\"token punctuation\\\">{</span> title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-1-0'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-1-0'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">{</span> title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-1-1'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-1-1'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">{</span> title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-1-2'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-1-2'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-2'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-2'</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n    key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n    children<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n      <span class=\\\"token punctuation\\\">{</span> title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-1-0-0'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-1-0-0'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">{</span> title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-1-0-1'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-1-0-1'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">{</span> title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-1-0-2'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-1-0-2'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-2'</span><span class=\\\"token punctuation\\\">,</span>\\n    key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-2'</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">Demo</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>expandedKeys<span class=\\\"token punctuation\\\">,</span> setExpandedKeys<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> useState<span class=\\\"token operator\\\">&lt;</span>React<span class=\\\"token punctuation\\\">.</span>Key<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'0-0-1'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>checkedKeys<span class=\\\"token punctuation\\\">,</span> setCheckedKeys<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> useState<span class=\\\"token operator\\\">&lt;</span>React<span class=\\\"token punctuation\\\">.</span>Key<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>selectedKeys<span class=\\\"token punctuation\\\">,</span> setSelectedKeys<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> useState<span class=\\\"token operator\\\">&lt;</span>React<span class=\\\"token punctuation\\\">.</span>Key<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>autoExpandParent<span class=\\\"token punctuation\\\">,</span> setAutoExpandParent<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> useState<span class=\\\"token operator\\\">&lt;</span>boolean<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">onExpand</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">expandedKeysValue<span class=\\\"token operator\\\">:</span> React<span class=\\\"token punctuation\\\">.</span>Key<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'onExpand'</span><span class=\\\"token punctuation\\\">,</span> expandedKeysValue<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token comment\\\">// if not set autoExpandParent to false, if children expanded, parent can not collapse.</span>\\n    <span class=\\\"token comment\\\">// or, you can remove all expanded children keys.</span>\\n    <span class=\\\"token function\\\">setExpandedKeys</span><span class=\\\"token punctuation\\\">(</span>expandedKeysValue<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">setAutoExpandParent</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">onCheck</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">checkedKeysValue<span class=\\\"token operator\\\">:</span> React<span class=\\\"token punctuation\\\">.</span>Key<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'onCheck'</span><span class=\\\"token punctuation\\\">,</span> checkedKeysValue<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">setCheckedKeys</span><span class=\\\"token punctuation\\\">(</span>checkedKeysValue<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">onSelect</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">selectedKeysValue<span class=\\\"token operator\\\">:</span> React<span class=\\\"token punctuation\\\">.</span>Key<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> info<span class=\\\"token operator\\\">:</span> any</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'onSelect'</span><span class=\\\"token punctuation\\\">,</span> info<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">setSelectedKeys</span><span class=\\\"token punctuation\\\">(</span>selectedKeysValue<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Tree</span></span>\\n      <span class=\\\"token attr-name\\\">checkable</span>\\n      <span class=\\\"token attr-name\\\">onExpand</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onExpand<span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token attr-name\\\">expandedKeys</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>expandedKeys<span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token attr-name\\\">autoExpandParent</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>autoExpandParent<span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token attr-name\\\">onCheck</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onCheck<span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token attr-name\\\">checkedKeys</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>checkedKeys<span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token attr-name\\\">onSelect</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onSelect<span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token attr-name\\\">selectedKeys</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>selectedKeys<span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token attr-name\\\">treeData</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>treeData<span class=\\\"token punctuation\\\">}</span></span>\\n    <span class=\\\"token punctuation\\\">/></span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Demo</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span> mountNode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\",\n    \"jsx\": \"<span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> useState <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Tree <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'antd'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> treeData <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n    key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n    children<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n        children<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n          <span class=\\\"token punctuation\\\">{</span>\\n            title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n            key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">{</span>\\n            title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n            key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">{</span>\\n            title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0-2'</span><span class=\\\"token punctuation\\\">,</span>\\n            key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0-2'</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n        children<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n          <span class=\\\"token punctuation\\\">{</span>\\n            title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-1-0'</span><span class=\\\"token punctuation\\\">,</span>\\n            key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-1-0'</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">{</span>\\n            title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-1-1'</span><span class=\\\"token punctuation\\\">,</span>\\n            key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-1-1'</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">{</span>\\n            title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-1-2'</span><span class=\\\"token punctuation\\\">,</span>\\n            key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-1-2'</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-2'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-2'</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n    key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n    children<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-1-0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-1-0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-1-0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-1-0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-1-0-2'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-1-0-2'</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-2'</span><span class=\\\"token punctuation\\\">,</span>\\n    key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-2'</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">Demo</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>expandedKeys<span class=\\\"token punctuation\\\">,</span> setExpandedKeys<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'0-0-1'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>checkedKeys<span class=\\\"token punctuation\\\">,</span> setCheckedKeys<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>selectedKeys<span class=\\\"token punctuation\\\">,</span> setSelectedKeys<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>autoExpandParent<span class=\\\"token punctuation\\\">,</span> setAutoExpandParent<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">onExpand</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">expandedKeysValue</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'onExpand'</span><span class=\\\"token punctuation\\\">,</span> expandedKeysValue<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// if not set autoExpandParent to false, if children expanded, parent can not collapse.</span>\\n    <span class=\\\"token comment\\\">// or, you can remove all expanded children keys.</span>\\n\\n    <span class=\\\"token function\\\">setExpandedKeys</span><span class=\\\"token punctuation\\\">(</span>expandedKeysValue<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">setAutoExpandParent</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">onCheck</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">checkedKeysValue</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'onCheck'</span><span class=\\\"token punctuation\\\">,</span> checkedKeysValue<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">setCheckedKeys</span><span class=\\\"token punctuation\\\">(</span>checkedKeysValue<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">onSelect</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">selectedKeysValue<span class=\\\"token punctuation\\\">,</span> info</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'onSelect'</span><span class=\\\"token punctuation\\\">,</span> info<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">setSelectedKeys</span><span class=\\\"token punctuation\\\">(</span>selectedKeysValue<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Tree</span></span>\\n      <span class=\\\"token attr-name\\\">checkable</span>\\n      <span class=\\\"token attr-name\\\">onExpand</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onExpand<span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token attr-name\\\">expandedKeys</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>expandedKeys<span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token attr-name\\\">autoExpandParent</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>autoExpandParent<span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token attr-name\\\">onCheck</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onCheck<span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token attr-name\\\">checkedKeys</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>checkedKeys<span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token attr-name\\\">onSelect</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onSelect<span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token attr-name\\\">selectedKeys</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>selectedKeys<span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token attr-name\\\">treeData</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>treeData<span class=\\\"token punctuation\\\">}</span></span>\\n    <span class=\\\"token punctuation\\\">/></span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Demo</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span> mountNode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n  },\n  \"preview\": function bishengPluginReactPreviewer() {\n  var React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n  var ReactDOM = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\n\n  function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n  var _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\n\n  var _antd = __webpack_require__(/*! antd */ \"./site/antd.js\");\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  var treeData = [{\n    title: '0-0',\n    key: '0-0',\n    children: [{\n      title: '0-0-0',\n      key: '0-0-0',\n      children: [{\n        title: '0-0-0-0',\n        key: '0-0-0-0'\n      }, {\n        title: '0-0-0-1',\n        key: '0-0-0-1'\n      }, {\n        title: '0-0-0-2',\n        key: '0-0-0-2'\n      }]\n    }, {\n      title: '0-0-1',\n      key: '0-0-1',\n      children: [{\n        title: '0-0-1-0',\n        key: '0-0-1-0'\n      }, {\n        title: '0-0-1-1',\n        key: '0-0-1-1'\n      }, {\n        title: '0-0-1-2',\n        key: '0-0-1-2'\n      }]\n    }, {\n      title: '0-0-2',\n      key: '0-0-2'\n    }]\n  }, {\n    title: '0-1',\n    key: '0-1',\n    children: [{\n      title: '0-1-0-0',\n      key: '0-1-0-0'\n    }, {\n      title: '0-1-0-1',\n      key: '0-1-0-1'\n    }, {\n      title: '0-1-0-2',\n      key: '0-1-0-2'\n    }]\n  }, {\n    title: '0-2',\n    key: '0-2'\n  }];\n\n  var Demo = function Demo() {\n    var _useState = (0, _react.useState)(['0-0-0', '0-0-1']),\n        _useState2 = _slicedToArray(_useState, 2),\n        expandedKeys = _useState2[0],\n        setExpandedKeys = _useState2[1];\n\n    var _useState3 = (0, _react.useState)(['0-0-0']),\n        _useState4 = _slicedToArray(_useState3, 2),\n        checkedKeys = _useState4[0],\n        setCheckedKeys = _useState4[1];\n\n    var _useState5 = (0, _react.useState)([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        selectedKeys = _useState6[0],\n        setSelectedKeys = _useState6[1];\n\n    var _useState7 = (0, _react.useState)(true),\n        _useState8 = _slicedToArray(_useState7, 2),\n        autoExpandParent = _useState8[0],\n        setAutoExpandParent = _useState8[1];\n\n    var onExpand = function onExpand(expandedKeysValue) {\n      console.log('onExpand', expandedKeysValue); // if not set autoExpandParent to false, if children expanded, parent can not collapse.\n      // or, you can remove all expanded children keys.\n\n      setExpandedKeys(expandedKeysValue);\n      setAutoExpandParent(false);\n    };\n\n    var onCheck = function onCheck(checkedKeysValue) {\n      console.log('onCheck', checkedKeysValue);\n      setCheckedKeys(checkedKeysValue);\n    };\n\n    var onSelect = function onSelect(selectedKeysValue, info) {\n      console.log('onSelect', info);\n      setSelectedKeys(selectedKeysValue);\n    };\n\n    return /*#__PURE__*/_react[\"default\"].createElement(_antd.Tree, {\n      checkable: true,\n      onExpand: onExpand,\n      expandedKeys: expandedKeys,\n      autoExpandParent: autoExpandParent,\n      onCheck: onCheck,\n      checkedKeys: checkedKeys,\n      onSelect: onSelect,\n      selectedKeys: selectedKeys,\n      treeData: treeData\n    });\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(Demo, null);\n}\n};\n\n//# sourceURL=webpack:///./components/tree/demo/basic-controlled.md?./node_modules/bisheng/lib/loaders/source-loader.js");

/***/ }),

/***/ "./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/basic.md":
/*!*******************************************************************************************!*\
  !*** ./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/basic.md ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = {\n  \"content\": {\n    \"zh-CN\": [\n      [\n        \"p\",\n        \"最简单的用法，展示可勾选，可选中，禁用，默认展开等功能。\"\n      ]\n    ],\n    \"en-US\": [\n      [\n        \"p\",\n        \"The most basic usage, tell you how to use checkable, selectable, disabled, defaultExpandKeys, and etc.\"\n      ]\n    ]\n  },\n  \"meta\": {\n    \"order\": 0,\n    \"title\": {\n      \"zh-CN\": \"基本\",\n      \"en-US\": \"Basic\"\n    },\n    \"filename\": \"components/tree/demo/basic.md\",\n    \"id\": \"components-tree-demo-basic\"\n  },\n  \"toc\": [\n    \"ul\",\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#zh-CN\",\n          \"title\": \"zh-CN\"\n        },\n        \"zh-CN\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#en-US\",\n          \"title\": \"en-US\"\n        },\n        \"en-US\"\n      ]\n    ]\n  ],\n  \"highlightedCode\": [\n    \"pre\",\n    {\n      \"lang\": \"tsx\",\n      \"highlighted\": \"import { Tree } from <span class=\\\"token string\\\">'antd'</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> treeData <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  {\\n    title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'parent 1'</span><span class=\\\"token punctuation\\\">,</span>\\n    key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n    children<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n      {\\n        title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'parent 1-0'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n        disabled<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n        children<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n          {\\n            title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span>\\n            key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n            disableCheckbox<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n          }<span class=\\\"token punctuation\\\">,</span>\\n          {\\n            title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span>\\n            key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n          }<span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      }<span class=\\\"token punctuation\\\">,</span>\\n      {\\n        title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'parent 1-1'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n        children<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>{ title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token operator\\\">&lt;</span>span style<span class=\\\"token operator\\\">=</span>{{ color<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'#1890ff'</span> }}<span class=\\\"token operator\\\">></span>sss<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>span<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-1-0'</span> }<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      }<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  }<span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> Demo <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> {\\n  <span class=\\\"token keyword\\\">const</span> onSelect <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>selectedKeys<span class=\\\"token punctuation\\\">:</span> React<span class=\\\"token punctuation\\\">.</span>Key<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> info<span class=\\\"token punctuation\\\">:</span> any<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> {\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'selected'</span><span class=\\\"token punctuation\\\">,</span> selectedKeys<span class=\\\"token punctuation\\\">,</span> info<span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n  }<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> onCheck <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>checkedKeys<span class=\\\"token punctuation\\\">:</span> React<span class=\\\"token punctuation\\\">.</span>Key<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> info<span class=\\\"token punctuation\\\">:</span> any<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> {\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'onCheck'</span><span class=\\\"token punctuation\\\">,</span> checkedKeys<span class=\\\"token punctuation\\\">,</span> info<span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n  }<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n  return <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>Tree\\n      checkable\\n      defaultExpandedKeys<span class=\\\"token operator\\\">=</span>{<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'0-0-1'</span><span class=\\\"token punctuation\\\">]</span>}\\n      defaultSelectedKeys<span class=\\\"token operator\\\">=</span>{<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'0-0-1'</span><span class=\\\"token punctuation\\\">]</span>}\\n      defaultCheckedKeys<span class=\\\"token operator\\\">=</span>{<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'0-0-1'</span><span class=\\\"token punctuation\\\">]</span>}\\n      onSelect<span class=\\\"token operator\\\">=</span>{onSelect}\\n      onCheck<span class=\\\"token operator\\\">=</span>{onCheck}\\n      treeData<span class=\\\"token operator\\\">=</span>{treeData}\\n    <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n}<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">&lt;</span>Demo <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span> mountNode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\"\n    }\n  ],\n  \"highlightedCodes\": {\n    \"tsx\": \"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Tree <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'antd'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> treeData <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'parent 1'</span><span class=\\\"token punctuation\\\">,</span>\\n    key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n    children<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'parent 1-0'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n        disabled<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n        children<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n          <span class=\\\"token punctuation\\\">{</span>\\n            title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span>\\n            key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n            disableCheckbox<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">{</span>\\n            title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span>\\n            key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'parent 1-1'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n        children<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">{</span> title<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>span</span> <span class=\\\"token attr-name\\\">style</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> color<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'#1890ff'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>sss<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>span</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-1-0'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">Demo</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">onSelect</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">selectedKeys<span class=\\\"token operator\\\">:</span> React<span class=\\\"token punctuation\\\">.</span>Key<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> info<span class=\\\"token operator\\\">:</span> any</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'selected'</span><span class=\\\"token punctuation\\\">,</span> selectedKeys<span class=\\\"token punctuation\\\">,</span> info<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">onCheck</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">checkedKeys<span class=\\\"token operator\\\">:</span> React<span class=\\\"token punctuation\\\">.</span>Key<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> info<span class=\\\"token operator\\\">:</span> any</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'onCheck'</span><span class=\\\"token punctuation\\\">,</span> checkedKeys<span class=\\\"token punctuation\\\">,</span> info<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Tree</span></span>\\n      <span class=\\\"token attr-name\\\">checkable</span>\\n      <span class=\\\"token attr-name\\\">defaultExpandedKeys</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'0-0-1'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token attr-name\\\">defaultSelectedKeys</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'0-0-1'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token attr-name\\\">defaultCheckedKeys</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'0-0-1'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token attr-name\\\">onSelect</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onSelect<span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token attr-name\\\">onCheck</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onCheck<span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token attr-name\\\">treeData</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>treeData<span class=\\\"token punctuation\\\">}</span></span>\\n    <span class=\\\"token punctuation\\\">/></span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Demo</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span> mountNode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\",\n    \"jsx\": \"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Tree <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'antd'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> treeData <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'parent 1'</span><span class=\\\"token punctuation\\\">,</span>\\n    key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n    children<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'parent 1-0'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n        disabled<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n        children<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n          <span class=\\\"token punctuation\\\">{</span>\\n            title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span>\\n            key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n            disableCheckbox<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">{</span>\\n            title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span>\\n            key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'parent 1-1'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n        children<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n          <span class=\\\"token punctuation\\\">{</span>\\n            title<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span>\\n              <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>span</span>\\n                <span class=\\\"token attr-name\\\">style</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span>\\n                  color<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'#1890ff'</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span>\\n              <span class=\\\"token punctuation\\\">></span></span>\\n                sss\\n              <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>span</span><span class=\\\"token punctuation\\\">></span></span>\\n            <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n            key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-1-0'</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">Demo</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">onSelect</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">selectedKeys<span class=\\\"token punctuation\\\">,</span> info</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'selected'</span><span class=\\\"token punctuation\\\">,</span> selectedKeys<span class=\\\"token punctuation\\\">,</span> info<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">onCheck</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">checkedKeys<span class=\\\"token punctuation\\\">,</span> info</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'onCheck'</span><span class=\\\"token punctuation\\\">,</span> checkedKeys<span class=\\\"token punctuation\\\">,</span> info<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Tree</span></span>\\n      <span class=\\\"token attr-name\\\">checkable</span>\\n      <span class=\\\"token attr-name\\\">defaultExpandedKeys</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'0-0-1'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token attr-name\\\">defaultSelectedKeys</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'0-0-1'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token attr-name\\\">defaultCheckedKeys</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'0-0-1'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token attr-name\\\">onSelect</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onSelect<span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token attr-name\\\">onCheck</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onCheck<span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token attr-name\\\">treeData</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>treeData<span class=\\\"token punctuation\\\">}</span></span>\\n    <span class=\\\"token punctuation\\\">/></span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Demo</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span> mountNode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n  },\n  \"preview\": function bishengPluginReactPreviewer() {\n  var React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n  var ReactDOM = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\n\n  var _antd = __webpack_require__(/*! antd */ \"./site/antd.js\");\n\n  var treeData = [{\n    title: 'parent 1',\n    key: '0-0',\n    children: [{\n      title: 'parent 1-0',\n      key: '0-0-0',\n      disabled: true,\n      children: [{\n        title: 'leaf',\n        key: '0-0-0-0',\n        disableCheckbox: true\n      }, {\n        title: 'leaf',\n        key: '0-0-0-1'\n      }]\n    }, {\n      title: 'parent 1-1',\n      key: '0-0-1',\n      children: [{\n        title: /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: '#1890ff'\n          }\n        }, \"sss\"),\n        key: '0-0-1-0'\n      }]\n    }]\n  }];\n\n  var Demo = function Demo() {\n    var onSelect = function onSelect(selectedKeys, info) {\n      console.log('selected', selectedKeys, info);\n    };\n\n    var onCheck = function onCheck(checkedKeys, info) {\n      console.log('onCheck', checkedKeys, info);\n    };\n\n    return /*#__PURE__*/React.createElement(_antd.Tree, {\n      checkable: true,\n      defaultExpandedKeys: ['0-0-0', '0-0-1'],\n      defaultSelectedKeys: ['0-0-0', '0-0-1'],\n      defaultCheckedKeys: ['0-0-0', '0-0-1'],\n      onSelect: onSelect,\n      onCheck: onCheck,\n      treeData: treeData\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Demo, null);\n}\n};\n\n//# sourceURL=webpack:///./components/tree/demo/basic.md?./node_modules/bisheng/lib/loaders/source-loader.js");

/***/ }),

/***/ "./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/big-data.md":
/*!**********************************************************************************************!*\
  !*** ./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/big-data.md ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = {\n  \"content\": {\n    \"zh-CN\": [\n      [\n        \"p\",\n        \"大数据展示。\"\n      ]\n    ],\n    \"en-US\": [\n      [\n        \"p\",\n        \"Plenty of tree nodes.\"\n      ]\n    ]\n  },\n  \"meta\": {\n    \"order\": 99,\n    \"title\": {\n      \"zh-CN\": \"大数据\",\n      \"en-US\": \"Big data\"\n    },\n    \"debug\": true,\n    \"filename\": \"components/tree/demo/big-data.md\",\n    \"id\": \"components-tree-demo-big-data\"\n  },\n  \"toc\": [\n    \"ul\",\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#zh-CN\",\n          \"title\": \"zh-CN\"\n        },\n        \"zh-CN\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#en-US\",\n          \"title\": \"en-US\"\n        },\n        \"en-US\"\n      ]\n    ]\n  ],\n  \"highlightedCode\": [\n    \"pre\",\n    {\n      \"lang\": \"jsx\",\n      \"highlighted\": \"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Tree <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'antd'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> treeData <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">+</span><span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> children <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> j <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> j <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">;</span> j <span class=\\\"token operator\\\">+</span><span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    children<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`child </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>i<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">-</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>j<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span>\\n      key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`l-</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>i<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">-</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>j<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  treeData<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n    title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`parent </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>i<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span>\\n    key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`l-</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>i<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span>\\n    children<span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">const</span> Demo <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Tree</span> <span class=\\\"token attr-name\\\">defaultExpandAll</span> <span class=\\\"token attr-name\\\">height</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">400</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">treeData</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>treeData<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Demo</span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span> mountNode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n    }\n  ],\n  \"highlightedCodes\": {\n    \"jsx\": \"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Tree <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'antd'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> treeData <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">+=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> children <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> j <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> j <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">100</span><span class=\\\"token punctuation\\\">;</span> j <span class=\\\"token operator\\\">+=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    children<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      title<span class=\\\"token operator\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">child </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>i<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">-</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>j<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span>\\n      key<span class=\\\"token operator\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">l-</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>i<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">-</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>j<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  treeData<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n    title<span class=\\\"token operator\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">parent </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>i<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span>\\n    key<span class=\\\"token operator\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">l-</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>i<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span>\\n    children<span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">Demo</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Tree</span></span> <span class=\\\"token attr-name\\\">defaultExpandAll</span> <span class=\\\"token attr-name\\\">height</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">400</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">treeData</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>treeData<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Demo</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span> mountNode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n  },\n  \"preview\": function bishengPluginReactPreviewer() {\n  var React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n  var ReactDOM = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\n\n  var _antd = __webpack_require__(/*! antd */ \"./site/antd.js\");\n\n  var treeData = [];\n\n  for (var i = 0; i < 100; i += 1) {\n    var children = [];\n\n    for (var j = 0; j < 100; j += 1) {\n      children.push({\n        title: \"child \".concat(i, \"-\").concat(j),\n        key: \"l-\".concat(i, \"-\").concat(j)\n      });\n    }\n\n    treeData.push({\n      title: \"parent \".concat(i),\n      key: \"l-\".concat(i),\n      children: children\n    });\n  }\n\n  var Demo = function Demo() {\n    return /*#__PURE__*/React.createElement(_antd.Tree, {\n      defaultExpandAll: true,\n      height: 400,\n      treeData: treeData\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Demo, null);\n}\n};\n\n//# sourceURL=webpack:///./components/tree/demo/big-data.md?./node_modules/bisheng/lib/loaders/source-loader.js");

/***/ }),

/***/ "./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/customized-icon.md":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/customized-icon.md ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = {\n  \"content\": {\n    \"zh-CN\": [\n      [\n        \"p\",\n        \"可以针对不同的节点定制图标。\"\n      ]\n    ],\n    \"en-US\": [\n      [\n        \"p\",\n        \"You can customize icons for different nodes.\"\n      ]\n    ]\n  },\n  \"meta\": {\n    \"order\": 6,\n    \"title\": {\n      \"zh-CN\": \"自定义图标\",\n      \"en-US\": \"Customize Icon\"\n    },\n    \"filename\": \"components/tree/demo/customized-icon.md\",\n    \"id\": \"components-tree-demo-customized-icon\"\n  },\n  \"toc\": [\n    \"ul\",\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#zh-CN\",\n          \"title\": \"zh-CN\"\n        },\n        \"zh-CN\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#en-US\",\n          \"title\": \"en-US\"\n        },\n        \"en-US\"\n      ]\n    ]\n  ],\n  \"highlightedCode\": [\n    \"pre\",\n    {\n      \"lang\": \"jsx\",\n      \"highlighted\": \"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Tree <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'antd'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span>\\n  DownOutlined<span class=\\\"token punctuation\\\">,</span>\\n  FrownOutlined<span class=\\\"token punctuation\\\">,</span>\\n  SmileOutlined<span class=\\\"token punctuation\\\">,</span>\\n  MehOutlined<span class=\\\"token punctuation\\\">,</span>\\n  FrownFilled<span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'@ant-design/icons'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> treeData <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'parent 1'</span><span class=\\\"token punctuation\\\">,</span>\\n    key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n    icon<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>SmileOutlined</span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span>\\n    children<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n        icon<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>MehOutlined</span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n        icon<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> selected <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">(</span>selected <span class=\\\"token operator\\\">?</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>FrownFilled</span> <span class=\\\"token punctuation\\\">/></span></span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>FrownOutlined</span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Tree</span>\\n    <span class=\\\"token attr-name\\\">showIcon</span>\\n    <span class=\\\"token attr-name\\\">defaultExpandAll</span>\\n    <span class=\\\"token attr-name\\\">defaultSelectedKeys</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span></span>\\n    <span class=\\\"token attr-name\\\">switcherIcon={&lt;DownOutlined</span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span>\\n    treeData<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>treeData<span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span>\\n  mountNode<span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n    }\n  ],\n  \"highlightedCodes\": {\n    \"jsx\": \"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Tree <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'antd'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span>\\n  DownOutlined<span class=\\\"token punctuation\\\">,</span>\\n  FrownOutlined<span class=\\\"token punctuation\\\">,</span>\\n  SmileOutlined<span class=\\\"token punctuation\\\">,</span>\\n  MehOutlined<span class=\\\"token punctuation\\\">,</span>\\n  FrownFilled<span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'@ant-design/icons'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> treeData <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'parent 1'</span><span class=\\\"token punctuation\\\">,</span>\\n    key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n    icon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">SmileOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span>\\n    children<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n        icon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">MehOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token function-variable function\\\">icon</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> selected <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>selected <span class=\\\"token operator\\\">?</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">FrownFilled</span></span> <span class=\\\"token punctuation\\\">/></span></span> <span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">FrownOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Tree</span></span>\\n    <span class=\\\"token attr-name\\\">showIcon</span>\\n    <span class=\\\"token attr-name\\\">defaultExpandAll</span>\\n    <span class=\\\"token attr-name\\\">defaultSelectedKeys</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span></span>\\n    <span class=\\\"token attr-name\\\">switcherIcon</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">DownOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span></span>\\n    <span class=\\\"token attr-name\\\">treeData</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>treeData<span class=\\\"token punctuation\\\">}</span></span>\\n  <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span>\\n  mountNode<span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n  },\n  \"preview\": function bishengPluginReactPreviewer() {\n  var React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n  var ReactDOM = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\n\n  var _antd = __webpack_require__(/*! antd */ \"./site/antd.js\");\n\n  var _icons = __webpack_require__(/*! @ant-design/icons */ \"./node_modules/@ant-design/icons/es/index.js\");\n\n  var treeData = [{\n    title: 'parent 1',\n    key: '0-0',\n    icon: /*#__PURE__*/React.createElement(_icons.SmileOutlined, null),\n    children: [{\n      title: 'leaf',\n      key: '0-0-0',\n      icon: /*#__PURE__*/React.createElement(_icons.MehOutlined, null)\n    }, {\n      title: 'leaf',\n      key: '0-0-1',\n      icon: function icon(_ref) {\n        var selected = _ref.selected;\n        return selected ? /*#__PURE__*/React.createElement(_icons.FrownFilled, null) : /*#__PURE__*/React.createElement(_icons.FrownOutlined, null);\n      }\n    }]\n  }];\n  return /*#__PURE__*/React.createElement(_antd.Tree, {\n    showIcon: true,\n    defaultExpandAll: true,\n    defaultSelectedKeys: ['0-0-0'],\n    switcherIcon: /*#__PURE__*/React.createElement(_icons.DownOutlined, null),\n    treeData: treeData\n  });\n}\n};\n\n//# sourceURL=webpack:///./components/tree/demo/customized-icon.md?./node_modules/bisheng/lib/loaders/source-loader.js");

/***/ }),

/***/ "./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/directory.md":
/*!***********************************************************************************************!*\
  !*** ./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/directory.md ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = {\n  \"content\": {\n    \"zh-CN\": [\n      [\n        \"p\",\n        \"内置的目录树，\",\n        [\n          \"code\",\n          \"multiple\"\n        ],\n        \" 模式支持 \",\n        [\n          \"code\",\n          \"ctrl(Windows)\"\n        ],\n        \" / \",\n        [\n          \"code\",\n          \"command(Mac)\"\n        ],\n        \" 复选。\"\n      ]\n    ],\n    \"en-US\": [\n      [\n        \"p\",\n        \"Built-in directory tree. \",\n        [\n          \"code\",\n          \"multiple\"\n        ],\n        \" support \",\n        [\n          \"code\",\n          \"ctrl(Windows)\"\n        ],\n        \" / \",\n        [\n          \"code\",\n          \"command(Mac)\"\n        ],\n        \" selection.\"\n      ]\n    ]\n  },\n  \"meta\": {\n    \"order\": 7,\n    \"title\": {\n      \"zh-CN\": \"目录\",\n      \"en-US\": \"directory\"\n    },\n    \"filename\": \"components/tree/demo/directory.md\",\n    \"id\": \"components-tree-demo-directory\"\n  },\n  \"toc\": [\n    \"ul\",\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#zh-CN\",\n          \"title\": \"zh-CN\"\n        },\n        \"zh-CN\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#en-US\",\n          \"title\": \"en-US\"\n        },\n        \"en-US\"\n      ]\n    ]\n  ],\n  \"highlightedCode\": [\n    \"pre\",\n    {\n      \"lang\": \"tsx\",\n      \"highlighted\": \"import { Tree } from <span class=\\\"token string\\\">'antd'</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> { DirectoryTree } <span class=\\\"token operator\\\">=</span> Tree<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> treeData <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  {\\n    title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'parent 0'</span><span class=\\\"token punctuation\\\">,</span>\\n    key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n    children<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n      { title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'leaf 0-0'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">,</span> isLeaf<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> }<span class=\\\"token punctuation\\\">,</span>\\n      { title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'leaf 0-1'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-1'</span><span class=\\\"token punctuation\\\">,</span> isLeaf<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> }<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  }<span class=\\\"token punctuation\\\">,</span>\\n  {\\n    title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'parent 1'</span><span class=\\\"token punctuation\\\">,</span>\\n    key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n    children<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n      { title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'leaf 1-0'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-1-0'</span><span class=\\\"token punctuation\\\">,</span> isLeaf<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> }<span class=\\\"token punctuation\\\">,</span>\\n      { title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'leaf 1-1'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-1-1'</span><span class=\\\"token punctuation\\\">,</span> isLeaf<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> }<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  }<span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> Demo<span class=\\\"token punctuation\\\">:</span> React<span class=\\\"token punctuation\\\">.</span>FC<span class=\\\"token operator\\\">&lt;</span>{}<span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> {\\n  <span class=\\\"token keyword\\\">const</span> onSelect <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>keys<span class=\\\"token punctuation\\\">:</span> React<span class=\\\"token punctuation\\\">.</span>Key<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> info<span class=\\\"token punctuation\\\">:</span> any<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> {\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Trigger Select'</span><span class=\\\"token punctuation\\\">,</span> keys<span class=\\\"token punctuation\\\">,</span> info<span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n  }<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> onExpand <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> {\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Trigger Expand'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n  }<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n  return <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>DirectoryTree\\n      multiple\\n      defaultExpandAll\\n      onSelect<span class=\\\"token operator\\\">=</span>{onSelect}\\n      onExpand<span class=\\\"token operator\\\">=</span>{onExpand}\\n      treeData<span class=\\\"token operator\\\">=</span>{treeData}\\n    <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n}<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">&lt;</span>Demo <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span> mountNode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\"\n    }\n  ],\n  \"highlightedCodes\": {\n    \"tsx\": \"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Tree <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'antd'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> DirectoryTree <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> Tree<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> treeData <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'parent 0'</span><span class=\\\"token punctuation\\\">,</span>\\n    key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n    children<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n      <span class=\\\"token punctuation\\\">{</span> title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'leaf 0-0'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">,</span> isLeaf<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">{</span> title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'leaf 0-1'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-1'</span><span class=\\\"token punctuation\\\">,</span> isLeaf<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'parent 1'</span><span class=\\\"token punctuation\\\">,</span>\\n    key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n    children<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n      <span class=\\\"token punctuation\\\">{</span> title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'leaf 1-0'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-1-0'</span><span class=\\\"token punctuation\\\">,</span> isLeaf<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">{</span> title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'leaf 1-1'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-1-1'</span><span class=\\\"token punctuation\\\">,</span> isLeaf<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> Demo<span class=\\\"token operator\\\">:</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">FC</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">onSelect</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">keys<span class=\\\"token operator\\\">:</span> React<span class=\\\"token punctuation\\\">.</span>Key<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> info<span class=\\\"token operator\\\">:</span> any</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Trigger Select'</span><span class=\\\"token punctuation\\\">,</span> keys<span class=\\\"token punctuation\\\">,</span> info<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">onExpand</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Trigger Expand'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">DirectoryTree</span></span>\\n      <span class=\\\"token attr-name\\\">multiple</span>\\n      <span class=\\\"token attr-name\\\">defaultExpandAll</span>\\n      <span class=\\\"token attr-name\\\">onSelect</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onSelect<span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token attr-name\\\">onExpand</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onExpand<span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token attr-name\\\">treeData</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>treeData<span class=\\\"token punctuation\\\">}</span></span>\\n    <span class=\\\"token punctuation\\\">/></span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Demo</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span> mountNode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\",\n    \"jsx\": \"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Tree <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'antd'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> DirectoryTree <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> Tree<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> treeData <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'parent 0'</span><span class=\\\"token punctuation\\\">,</span>\\n    key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n    children<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'leaf 0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n        isLeaf<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'leaf 0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n        isLeaf<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'parent 1'</span><span class=\\\"token punctuation\\\">,</span>\\n    key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n    children<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'leaf 1-0'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-1-0'</span><span class=\\\"token punctuation\\\">,</span>\\n        isLeaf<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'leaf 1-1'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-1-1'</span><span class=\\\"token punctuation\\\">,</span>\\n        isLeaf<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">Demo</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">onSelect</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">keys<span class=\\\"token punctuation\\\">,</span> info</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Trigger Select'</span><span class=\\\"token punctuation\\\">,</span> keys<span class=\\\"token punctuation\\\">,</span> info<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">onExpand</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Trigger Expand'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">DirectoryTree</span></span>\\n      <span class=\\\"token attr-name\\\">multiple</span>\\n      <span class=\\\"token attr-name\\\">defaultExpandAll</span>\\n      <span class=\\\"token attr-name\\\">onSelect</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onSelect<span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token attr-name\\\">onExpand</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onExpand<span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token attr-name\\\">treeData</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>treeData<span class=\\\"token punctuation\\\">}</span></span>\\n    <span class=\\\"token punctuation\\\">/></span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Demo</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span> mountNode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n  },\n  \"preview\": function bishengPluginReactPreviewer() {\n  var React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n  var ReactDOM = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\n\n  var _antd = __webpack_require__(/*! antd */ \"./site/antd.js\");\n\n  var DirectoryTree = _antd.Tree.DirectoryTree;\n  var treeData = [{\n    title: 'parent 0',\n    key: '0-0',\n    children: [{\n      title: 'leaf 0-0',\n      key: '0-0-0',\n      isLeaf: true\n    }, {\n      title: 'leaf 0-1',\n      key: '0-0-1',\n      isLeaf: true\n    }]\n  }, {\n    title: 'parent 1',\n    key: '0-1',\n    children: [{\n      title: 'leaf 1-0',\n      key: '0-1-0',\n      isLeaf: true\n    }, {\n      title: 'leaf 1-1',\n      key: '0-1-1',\n      isLeaf: true\n    }]\n  }];\n\n  var Demo = function Demo() {\n    var onSelect = function onSelect(keys, info) {\n      console.log('Trigger Select', keys, info);\n    };\n\n    var onExpand = function onExpand() {\n      console.log('Trigger Expand');\n    };\n\n    return /*#__PURE__*/React.createElement(DirectoryTree, {\n      multiple: true,\n      defaultExpandAll: true,\n      onSelect: onSelect,\n      onExpand: onExpand,\n      treeData: treeData\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Demo, null);\n}\n};\n\n//# sourceURL=webpack:///./components/tree/demo/directory.md?./node_modules/bisheng/lib/loaders/source-loader.js");

/***/ }),

/***/ "./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/drag-debug.md":
/*!************************************************************************************************!*\
  !*** ./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/drag-debug.md ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = {\n  \"content\": [\n\n  ],\n  \"meta\": {\n    \"order\": 98,\n    \"title\": {\n      \"zh-CN\": \"Drag Debug\",\n      \"en-US\": \"Drag Debug\"\n    },\n    \"debug\": true,\n    \"filename\": \"components/tree/demo/drag-debug.md\",\n    \"id\": \"components-tree-demo-drag-debug\"\n  },\n  \"toc\": [\n    \"ul\"\n  ],\n  \"highlightedCode\": [\n    \"pre\",\n    {\n      \"lang\": \"jsx\",\n      \"highlighted\": \"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Tree<span class=\\\"token punctuation\\\">,</span> Switch <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'antd'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> CarryOutOutlined <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'@ant-design/icons'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> x <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> y <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> z <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> gData <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> generateData <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>_level<span class=\\\"token punctuation\\\">,</span> _preKey<span class=\\\"token punctuation\\\">,</span> _tns<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> preKey <span class=\\\"token operator\\\">=</span> _preKey <span class=\\\"token operator\\\">||</span> <span class=\\\"token string\\\">'0'</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> tns <span class=\\\"token operator\\\">=</span> _tns <span class=\\\"token operator\\\">||</span> gData<span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> children <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> x<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> key <span class=\\\"token operator\\\">=</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>preKey<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">-</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>i<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n    tns<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> title<span class=\\\"token punctuation\\\">:</span> key<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">,</span> icon<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>CarryOutOutlined</span> <span class=\\\"token punctuation\\\">/></span></span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>i <span class=\\\"token operator\\\">&lt;</span> y<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      children<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>key<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>_level <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> tns<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">const</span> level <span class=\\\"token operator\\\">=</span> _level <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n  children<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>key<span class=\\\"token punctuation\\\">,</span> index<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    tns<span class=\\\"token punctuation\\\">[</span>index<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>children <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">generateData</span><span class=\\\"token punctuation\\\">(</span>level<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">,</span> tns<span class=\\\"token punctuation\\\">[</span>index<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token function\\\">generateData</span><span class=\\\"token punctuation\\\">(</span>z<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Demo</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    gData<span class=\\\"token punctuation\\\">,</span>\\n    expandedKeys<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'0-0'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'0-0-0-0'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    showLine<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n    showIcon<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n    showLeafIcon<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  onDragEnter <span class=\\\"token operator\\\">=</span> info <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>info<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// expandedKeys 需要受控时设置</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// this.setState({</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//   expandedKeys: info.expandedKeys,</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// });</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  onDrop <span class=\\\"token operator\\\">=</span> info <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>info<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> dropKey <span class=\\\"token operator\\\">=</span> info<span class=\\\"token punctuation\\\">.</span>node<span class=\\\"token punctuation\\\">.</span>key<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> dragKey <span class=\\\"token operator\\\">=</span> info<span class=\\\"token punctuation\\\">.</span>dragNode<span class=\\\"token punctuation\\\">.</span>key<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> dropPos <span class=\\\"token operator\\\">=</span> info<span class=\\\"token punctuation\\\">.</span>node<span class=\\\"token punctuation\\\">.</span>pos<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">split</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'-'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> dropPosition <span class=\\\"token operator\\\">=</span> info<span class=\\\"token punctuation\\\">.</span>dropPosition <span class=\\\"token operator\\\">-</span> <span class=\\\"token function\\\">Number</span><span class=\\\"token punctuation\\\">(</span>dropPos<span class=\\\"token punctuation\\\">[</span>dropPos<span class=\\\"token punctuation\\\">.</span>length <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">const</span> loop <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">,</span> callback<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> data<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>key <span class=\\\"token operator\\\">===</span> key<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">callback</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> i<span class=\\\"token punctuation\\\">,</span> data<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token function\\\">loop</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">,</span> callback<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> data <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token operator\\\">...</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>gData<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Find dragObject</span>\\n    <span class=\\\"token keyword\\\">let</span> dragObj<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">loop</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">,</span> dragKey<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span>item<span class=\\\"token punctuation\\\">,</span> index<span class=\\\"token punctuation\\\">,</span> arr<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n      arr<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">splice</span><span class=\\\"token punctuation\\\">(</span>index<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      dragObj <span class=\\\"token operator\\\">=</span> item<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span>info<span class=\\\"token punctuation\\\">.</span>dropToGap<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Drop on the content</span>\\n      <span class=\\\"token function\\\">loop</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">,</span> dropKey<span class=\\\"token punctuation\\\">,</span> item <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n        item<span class=\\\"token punctuation\\\">.</span>children <span class=\\\"token operator\\\">=</span> item<span class=\\\"token punctuation\\\">.</span>children <span class=\\\"token operator\\\">||</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// where to insert 示例添加到尾部，可以是随意位置</span>\\n        item<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>dragObj<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token punctuation\\\">(</span>info<span class=\\\"token punctuation\\\">.</span>node<span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>children <span class=\\\"token operator\\\">||</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>length <span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">0</span> <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Has children</span>\\n      info<span class=\\\"token punctuation\\\">.</span>node<span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>expanded <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Is expanded</span>\\n      dropPosition <span class=\\\"token operator\\\">===</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// On the bottom gap</span>\\n    <span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">loop</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">,</span> dropKey<span class=\\\"token punctuation\\\">,</span> item <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n        item<span class=\\\"token punctuation\\\">.</span>children <span class=\\\"token operator\\\">=</span> item<span class=\\\"token punctuation\\\">.</span>children <span class=\\\"token operator\\\">||</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// where to insert 示例添加到头部，可以是随意位置</span>\\n        item<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">unshift</span><span class=\\\"token punctuation\\\">(</span>dragObj<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">let</span> ar<span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">let</span> i<span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token function\\\">loop</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">,</span> dropKey<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span>item<span class=\\\"token punctuation\\\">,</span> index<span class=\\\"token punctuation\\\">,</span> arr<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n        ar <span class=\\\"token operator\\\">=</span> arr<span class=\\\"token punctuation\\\">;</span>\\n        i <span class=\\\"token operator\\\">=</span> index<span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>dropPosition <span class=\\\"token operator\\\">===</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        ar<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">splice</span><span class=\\\"token punctuation\\\">(</span>i<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> dragObj<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n        ar<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">splice</span><span class=\\\"token punctuation\\\">(</span>i <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> dragObj<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      gData<span class=\\\"token punctuation\\\">:</span> data<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  setShowLine <span class=\\\"token operator\\\">=</span> showLine <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> showLeafIcon <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>showLine<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>showLeafIcon<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n          showLine<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n            showLeafIcon<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n          showLine<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n        showLine<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  setShowIcon <span class=\\\"token operator\\\">=</span> showIcon <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      showIcon<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  setShowLeafIcon <span class=\\\"token operator\\\">=</span> showLeafIcon <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      showLeafIcon<span class=\\\"token punctuation\\\">,</span>\\n      showLine<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> showLeafIcon <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> showLine<span class=\\\"token punctuation\\\">,</span> showIcon<span class=\\\"token punctuation\\\">,</span> showLeafIcon<span class=\\\"token punctuation\\\">,</span> expandedKeys <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> setShowLine<span class=\\\"token punctuation\\\">,</span> setShowIcon<span class=\\\"token punctuation\\\">,</span> setShowLeafIcon <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">style</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> marginBottom<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">16</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>\\n          showLine<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Switch</span> <span class=\\\"token attr-name\\\">checked</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>showLine<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>setShowLine<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>br</span> <span class=\\\"token punctuation\\\">/></span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>br</span> <span class=\\\"token punctuation\\\">/></span></span>\\n          showIcon<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Switch</span> <span class=\\\"token attr-name\\\">checked</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>showIcon<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>setShowIcon<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>br</span> <span class=\\\"token punctuation\\\">/></span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>br</span> <span class=\\\"token punctuation\\\">/></span></span>\\n          showLeafIcon<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Switch</span> <span class=\\\"token attr-name\\\">checked</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>showLeafIcon<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>setShowLeafIcon<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Tree</span>\\n          <span class=\\\"token attr-name\\\">showLine</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>showLine<span class=\\\"token punctuation\\\">}</span></span>\\n          <span class=\\\"token attr-name\\\">showIcon</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>showIcon<span class=\\\"token punctuation\\\">}</span></span>\\n          <span class=\\\"token attr-name\\\">className</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>draggable-tree<span class=\\\"token punctuation\\\">\\\"</span></span>\\n          <span class=\\\"token attr-name\\\">defaultExpandedKeys</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>expandedKeys<span class=\\\"token punctuation\\\">}</span></span>\\n          <span class=\\\"token attr-name\\\">draggable</span>\\n          <span class=\\\"token attr-name\\\">blockNode</span>\\n          <span class=\\\"token attr-name\\\">onDragEnter</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onDragEnter<span class=\\\"token punctuation\\\">}</span></span>\\n          <span class=\\\"token attr-name\\\">onDrop</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onDrop<span class=\\\"token punctuation\\\">}</span></span>\\n          <span class=\\\"token attr-name\\\">treeData</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>gData<span class=\\\"token punctuation\\\">}</span></span>\\n        <span class=\\\"token punctuation\\\">/></span></span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Demo</span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span> mountNode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n    }\n  ],\n  \"highlightedCodes\": {\n    \"jsx\": \"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Tree<span class=\\\"token punctuation\\\">,</span> Switch <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'antd'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> CarryOutOutlined <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'@ant-design/icons'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> x <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> y <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> z <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> gData <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">generateData</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">_level<span class=\\\"token punctuation\\\">,</span> _preKey<span class=\\\"token punctuation\\\">,</span> _tns</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> preKey <span class=\\\"token operator\\\">=</span> _preKey <span class=\\\"token operator\\\">||</span> <span class=\\\"token string\\\">'0'</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> tns <span class=\\\"token operator\\\">=</span> _tns <span class=\\\"token operator\\\">||</span> gData<span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> children <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> x<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> key <span class=\\\"token operator\\\">=</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>preKey<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">-</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>i<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n    tns<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> title<span class=\\\"token operator\\\">:</span> key<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">,</span> icon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">CarryOutOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>i <span class=\\\"token operator\\\">&lt;</span> y<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      children<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>key<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>_level <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> tns<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">const</span> level <span class=\\\"token operator\\\">=</span> _level <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n  children<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">key<span class=\\\"token punctuation\\\">,</span> index</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    tns<span class=\\\"token punctuation\\\">[</span>index<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>children <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">generateData</span><span class=\\\"token punctuation\\\">(</span>level<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">,</span> tns<span class=\\\"token punctuation\\\">[</span>index<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token function\\\">generateData</span><span class=\\\"token punctuation\\\">(</span>z<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Demo</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    gData<span class=\\\"token punctuation\\\">,</span>\\n    expandedKeys<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'0-0'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'0-0-0-0'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    showLine<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n    showIcon<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n    showLeafIcon<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function-variable function\\\">onDragEnter</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token parameter\\\">info</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>info<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token comment\\\">// expandedKeys 需要受控时设置</span>\\n    <span class=\\\"token comment\\\">// this.setState({</span>\\n    <span class=\\\"token comment\\\">//   expandedKeys: info.expandedKeys,</span>\\n    <span class=\\\"token comment\\\">// });</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function-variable function\\\">onDrop</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token parameter\\\">info</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>info<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> dropKey <span class=\\\"token operator\\\">=</span> info<span class=\\\"token punctuation\\\">.</span>node<span class=\\\"token punctuation\\\">.</span>key<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> dragKey <span class=\\\"token operator\\\">=</span> info<span class=\\\"token punctuation\\\">.</span>dragNode<span class=\\\"token punctuation\\\">.</span>key<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> dropPos <span class=\\\"token operator\\\">=</span> info<span class=\\\"token punctuation\\\">.</span>node<span class=\\\"token punctuation\\\">.</span>pos<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">split</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'-'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> dropPosition <span class=\\\"token operator\\\">=</span> info<span class=\\\"token punctuation\\\">.</span>dropPosition <span class=\\\"token operator\\\">-</span> <span class=\\\"token function\\\">Number</span><span class=\\\"token punctuation\\\">(</span>dropPos<span class=\\\"token punctuation\\\">[</span>dropPos<span class=\\\"token punctuation\\\">.</span>length <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">loop</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">data<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">,</span> callback</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> data<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>key <span class=\\\"token operator\\\">===</span> key<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">callback</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> i<span class=\\\"token punctuation\\\">,</span> data<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token function\\\">loop</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">,</span> callback<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> data <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token operator\\\">...</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>gData<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">// Find dragObject</span>\\n    <span class=\\\"token keyword\\\">let</span> dragObj<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">loop</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">,</span> dragKey<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">item<span class=\\\"token punctuation\\\">,</span> index<span class=\\\"token punctuation\\\">,</span> arr</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      arr<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">splice</span><span class=\\\"token punctuation\\\">(</span>index<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      dragObj <span class=\\\"token operator\\\">=</span> item<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span>info<span class=\\\"token punctuation\\\">.</span>dropToGap<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token comment\\\">// Drop on the content</span>\\n      <span class=\\\"token function\\\">loop</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">,</span> dropKey<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token parameter\\\">item</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        item<span class=\\\"token punctuation\\\">.</span>children <span class=\\\"token operator\\\">=</span> item<span class=\\\"token punctuation\\\">.</span>children <span class=\\\"token operator\\\">||</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token comment\\\">// where to insert 示例添加到尾部，可以是随意位置</span>\\n        item<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>dragObj<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token punctuation\\\">(</span>info<span class=\\\"token punctuation\\\">.</span>node<span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>children <span class=\\\"token operator\\\">||</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>length <span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">0</span> <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token comment\\\">// Has children</span>\\n      info<span class=\\\"token punctuation\\\">.</span>node<span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>expanded <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token comment\\\">// Is expanded</span>\\n      dropPosition <span class=\\\"token operator\\\">===</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token comment\\\">// On the bottom gap</span>\\n    <span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">loop</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">,</span> dropKey<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token parameter\\\">item</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        item<span class=\\\"token punctuation\\\">.</span>children <span class=\\\"token operator\\\">=</span> item<span class=\\\"token punctuation\\\">.</span>children <span class=\\\"token operator\\\">||</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token comment\\\">// where to insert 示例添加到头部，可以是随意位置</span>\\n        item<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">unshift</span><span class=\\\"token punctuation\\\">(</span>dragObj<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">let</span> ar<span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">let</span> i<span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token function\\\">loop</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">,</span> dropKey<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">item<span class=\\\"token punctuation\\\">,</span> index<span class=\\\"token punctuation\\\">,</span> arr</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        ar <span class=\\\"token operator\\\">=</span> arr<span class=\\\"token punctuation\\\">;</span>\\n        i <span class=\\\"token operator\\\">=</span> index<span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>dropPosition <span class=\\\"token operator\\\">===</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        ar<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">splice</span><span class=\\\"token punctuation\\\">(</span>i<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> dragObj<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n        ar<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">splice</span><span class=\\\"token punctuation\\\">(</span>i <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> dragObj<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      gData<span class=\\\"token operator\\\">:</span> data<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function-variable function\\\">setShowLine</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token parameter\\\">showLine</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> showLeafIcon <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>showLine<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>showLeafIcon<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n          showLine<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n            showLeafIcon<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n          showLine<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n        showLine<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function-variable function\\\">setShowIcon</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token parameter\\\">showIcon</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      showIcon<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function-variable function\\\">setShowLeafIcon</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token parameter\\\">showLeafIcon</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      showLeafIcon<span class=\\\"token punctuation\\\">,</span>\\n      showLine<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span> showLeafIcon <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> showLine<span class=\\\"token punctuation\\\">,</span> showIcon<span class=\\\"token punctuation\\\">,</span> showLeafIcon<span class=\\\"token punctuation\\\">,</span> expandedKeys <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> setShowLine<span class=\\\"token punctuation\\\">,</span> setShowIcon<span class=\\\"token punctuation\\\">,</span> setShowLeafIcon <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span></span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">style</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> marginBottom<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">16</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>\\n          showLine<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span> <span class=\\\"token attr-name\\\">checked</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>showLine<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>setShowLine<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>br</span> <span class=\\\"token punctuation\\\">/></span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>br</span> <span class=\\\"token punctuation\\\">/></span></span>\\n          showIcon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span> <span class=\\\"token attr-name\\\">checked</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>showIcon<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>setShowIcon<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>br</span> <span class=\\\"token punctuation\\\">/></span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>br</span> <span class=\\\"token punctuation\\\">/></span></span>\\n          showLeafIcon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span> <span class=\\\"token attr-name\\\">checked</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>showLeafIcon<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>setShowLeafIcon<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Tree</span></span>\\n          <span class=\\\"token attr-name\\\">showLine</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>showLine<span class=\\\"token punctuation\\\">}</span></span>\\n          <span class=\\\"token attr-name\\\">showIcon</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>showIcon<span class=\\\"token punctuation\\\">}</span></span>\\n          <span class=\\\"token attr-name\\\">className</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>draggable-tree<span class=\\\"token punctuation\\\">\\\"</span></span>\\n          <span class=\\\"token attr-name\\\">defaultExpandedKeys</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>expandedKeys<span class=\\\"token punctuation\\\">}</span></span>\\n          <span class=\\\"token attr-name\\\">draggable</span>\\n          <span class=\\\"token attr-name\\\">blockNode</span>\\n          <span class=\\\"token attr-name\\\">onDragEnter</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onDragEnter<span class=\\\"token punctuation\\\">}</span></span>\\n          <span class=\\\"token attr-name\\\">onDrop</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onDrop<span class=\\\"token punctuation\\\">}</span></span>\\n          <span class=\\\"token attr-name\\\">treeData</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>gData<span class=\\\"token punctuation\\\">}</span></span>\\n        <span class=\\\"token punctuation\\\">/></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span></span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Demo</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span> mountNode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n  },\n  \"preview\": function bishengPluginReactPreviewer() {\n  var React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n  var ReactDOM = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\n\n  function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n  var _antd = __webpack_require__(/*! antd */ \"./site/antd.js\");\n\n  var _icons = __webpack_require__(/*! @ant-design/icons */ \"./node_modules/@ant-design/icons/es/index.js\");\n\n  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\n  function _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\n  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  var x = 3;\n  var y = 2;\n  var z = 1;\n  var gData = [];\n\n  var generateData = function generateData(_level, _preKey, _tns) {\n    var preKey = _preKey || '0';\n    var tns = _tns || gData;\n    var children = [];\n\n    for (var i = 0; i < x; i++) {\n      var key = \"\".concat(preKey, \"-\").concat(i);\n      tns.push({\n        title: key,\n        key: key,\n        icon: /*#__PURE__*/React.createElement(_icons.CarryOutOutlined, null)\n      });\n\n      if (i < y) {\n        children.push(key);\n      }\n    }\n\n    if (_level < 0) {\n      return tns;\n    }\n\n    var level = _level - 1;\n    children.forEach(function (key, index) {\n      tns[index].children = [];\n      return generateData(level, key, tns[index].children);\n    });\n  };\n\n  generateData(z);\n\n  var Demo = /*#__PURE__*/function (_React$Component) {\n    _inherits(Demo, _React$Component);\n\n    var _super = _createSuper(Demo);\n\n    function Demo() {\n      var _this;\n\n      _classCallCheck(this, Demo);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n\n      _defineProperty(_assertThisInitialized(_this), \"state\", {\n        gData: gData,\n        expandedKeys: ['0-0', '0-0-0', '0-0-0-0'],\n        showLine: true,\n        showIcon: true,\n        showLeafIcon: true\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"onDragEnter\", function (info) {\n        console.log(info); // expandedKeys 需要受控时设置\n        // this.setState({\n        //   expandedKeys: info.expandedKeys,\n        // });\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"onDrop\", function (info) {\n        console.log(info);\n        var dropKey = info.node.key;\n        var dragKey = info.dragNode.key;\n        var dropPos = info.node.pos.split('-');\n        var dropPosition = info.dropPosition - Number(dropPos[dropPos.length - 1]);\n\n        var loop = function loop(data, key, callback) {\n          for (var i = 0; i < data.length; i++) {\n            if (data[i].key === key) {\n              return callback(data[i], i, data);\n            }\n\n            if (data[i].children) {\n              loop(data[i].children, key, callback);\n            }\n          }\n        };\n\n        var data = _toConsumableArray(_this.state.gData); // Find dragObject\n\n\n        var dragObj;\n        loop(data, dragKey, function (item, index, arr) {\n          arr.splice(index, 1);\n          dragObj = item;\n        });\n\n        if (!info.dropToGap) {\n          // Drop on the content\n          loop(data, dropKey, function (item) {\n            item.children = item.children || []; // where to insert 示例添加到尾部，可以是随意位置\n\n            item.children.push(dragObj);\n          });\n        } else if ((info.node.props.children || []).length > 0 && // Has children\n        info.node.props.expanded && // Is expanded\n        dropPosition === 1 // On the bottom gap\n        ) {\n          loop(data, dropKey, function (item) {\n            item.children = item.children || []; // where to insert 示例添加到头部，可以是随意位置\n\n            item.children.unshift(dragObj);\n          });\n        } else {\n          var ar;\n          var i;\n          loop(data, dropKey, function (item, index, arr) {\n            ar = arr;\n            i = index;\n          });\n\n          if (dropPosition === -1) {\n            ar.splice(i, 0, dragObj);\n          } else {\n            ar.splice(i + 1, 0, dragObj);\n          }\n        }\n\n        _this.setState({\n          gData: data\n        });\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"setShowLine\", function (showLine) {\n        var showLeafIcon = _this.state.showLeafIcon;\n\n        if (showLine) {\n          if (showLeafIcon) {\n            _this.setState({\n              showLine: {\n                showLeafIcon: true\n              }\n            });\n          } else {\n            _this.setState({\n              showLine: true\n            });\n          }\n        } else {\n          _this.setState({\n            showLine: false\n          });\n        }\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"setShowIcon\", function (showIcon) {\n        _this.setState({\n          showIcon: showIcon\n        });\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"setShowLeafIcon\", function (showLeafIcon) {\n        _this.setState({\n          showLeafIcon: showLeafIcon,\n          showLine: {\n            showLeafIcon: showLeafIcon\n          }\n        });\n      });\n\n      return _this;\n    }\n\n    _createClass(Demo, [{\n      key: \"render\",\n      value: function render() {\n        var _this$state = this.state,\n            showLine = _this$state.showLine,\n            showIcon = _this$state.showIcon,\n            showLeafIcon = _this$state.showLeafIcon,\n            expandedKeys = _this$state.expandedKeys;\n        var setShowLine = this.setShowLine,\n            setShowIcon = this.setShowIcon,\n            setShowLeafIcon = this.setShowLeafIcon;\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            marginBottom: 16\n          }\n        }, \"showLine: \", /*#__PURE__*/React.createElement(_antd.Switch, {\n          checked: showLine,\n          onChange: setShowLine\n        }), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"br\", null), \"showIcon: \", /*#__PURE__*/React.createElement(_antd.Switch, {\n          checked: showIcon,\n          onChange: setShowIcon\n        }), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"br\", null), \"showLeafIcon: \", /*#__PURE__*/React.createElement(_antd.Switch, {\n          checked: showLeafIcon,\n          onChange: setShowLeafIcon\n        })), /*#__PURE__*/React.createElement(_antd.Tree, {\n          showLine: showLine,\n          showIcon: showIcon,\n          className: \"draggable-tree\",\n          defaultExpandedKeys: expandedKeys,\n          draggable: true,\n          blockNode: true,\n          onDragEnter: this.onDragEnter,\n          onDrop: this.onDrop,\n          treeData: this.state.gData\n        }));\n      }\n    }]);\n\n    return Demo;\n  }(React.Component);\n\n  return /*#__PURE__*/React.createElement(Demo, null);\n}\n};\n\n//# sourceURL=webpack:///./components/tree/demo/drag-debug.md?./node_modules/bisheng/lib/loaders/source-loader.js");

/***/ }),

/***/ "./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/draggable.md":
/*!***********************************************************************************************!*\
  !*** ./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/draggable.md ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = {\n  \"content\": {\n    \"zh-CN\": [\n      [\n        \"p\",\n        \"将节点拖拽到其他节点内部或前后。\"\n      ]\n    ],\n    \"en-US\": [\n      [\n        \"p\",\n        \"Drag treeNode to insert after the other treeNode or insert into the other parent TreeNode.\"\n      ]\n    ]\n  },\n  \"meta\": {\n    \"order\": 2,\n    \"title\": {\n      \"zh-CN\": \"拖动示例\",\n      \"en-US\": \"draggable\"\n    },\n    \"filename\": \"components/tree/demo/draggable.md\",\n    \"id\": \"components-tree-demo-draggable\"\n  },\n  \"toc\": [\n    \"ul\",\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#zh-CN\",\n          \"title\": \"zh-CN\"\n        },\n        \"zh-CN\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#en-US\",\n          \"title\": \"en-US\"\n        },\n        \"en-US\"\n      ]\n    ]\n  ],\n  \"highlightedCode\": [\n    \"pre\",\n    {\n      \"lang\": \"jsx\",\n      \"highlighted\": \"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Tree <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'antd'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> x <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> y <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> z <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> gData <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> generateData <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>_level<span class=\\\"token punctuation\\\">,</span> _preKey<span class=\\\"token punctuation\\\">,</span> _tns<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> preKey <span class=\\\"token operator\\\">=</span> _preKey <span class=\\\"token operator\\\">||</span> <span class=\\\"token string\\\">'0'</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> tns <span class=\\\"token operator\\\">=</span> _tns <span class=\\\"token operator\\\">||</span> gData<span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> children <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> x<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> key <span class=\\\"token operator\\\">=</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>preKey<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">-</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>i<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n    tns<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> title<span class=\\\"token punctuation\\\">:</span> key<span class=\\\"token punctuation\\\">,</span> key <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>i <span class=\\\"token operator\\\">&lt;</span> y<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      children<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>key<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>_level <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> tns<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">const</span> level <span class=\\\"token operator\\\">=</span> _level <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n  children<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>key<span class=\\\"token punctuation\\\">,</span> index<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    tns<span class=\\\"token punctuation\\\">[</span>index<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>children <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">generateData</span><span class=\\\"token punctuation\\\">(</span>level<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">,</span> tns<span class=\\\"token punctuation\\\">[</span>index<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token function\\\">generateData</span><span class=\\\"token punctuation\\\">(</span>z<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Demo</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    gData<span class=\\\"token punctuation\\\">,</span>\\n    expandedKeys<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'0-0'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'0-0-0-0'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  onDragEnter <span class=\\\"token operator\\\">=</span> info <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>info<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// expandedKeys 需要受控时设置</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// this.setState({</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//   expandedKeys: info.expandedKeys,</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// });</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  onDrop <span class=\\\"token operator\\\">=</span> info <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>info<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> dropKey <span class=\\\"token operator\\\">=</span> info<span class=\\\"token punctuation\\\">.</span>node<span class=\\\"token punctuation\\\">.</span>key<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> dragKey <span class=\\\"token operator\\\">=</span> info<span class=\\\"token punctuation\\\">.</span>dragNode<span class=\\\"token punctuation\\\">.</span>key<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> dropPos <span class=\\\"token operator\\\">=</span> info<span class=\\\"token punctuation\\\">.</span>node<span class=\\\"token punctuation\\\">.</span>pos<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">split</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'-'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> dropPosition <span class=\\\"token operator\\\">=</span> info<span class=\\\"token punctuation\\\">.</span>dropPosition <span class=\\\"token operator\\\">-</span> <span class=\\\"token function\\\">Number</span><span class=\\\"token punctuation\\\">(</span>dropPos<span class=\\\"token punctuation\\\">[</span>dropPos<span class=\\\"token punctuation\\\">.</span>length <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">const</span> loop <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">,</span> callback<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> data<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>key <span class=\\\"token operator\\\">===</span> key<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">callback</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> i<span class=\\\"token punctuation\\\">,</span> data<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token function\\\">loop</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">,</span> callback<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> data <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token operator\\\">...</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>gData<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Find dragObject</span>\\n    <span class=\\\"token keyword\\\">let</span> dragObj<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">loop</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">,</span> dragKey<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span>item<span class=\\\"token punctuation\\\">,</span> index<span class=\\\"token punctuation\\\">,</span> arr<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n      arr<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">splice</span><span class=\\\"token punctuation\\\">(</span>index<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      dragObj <span class=\\\"token operator\\\">=</span> item<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span>info<span class=\\\"token punctuation\\\">.</span>dropToGap<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Drop on the content</span>\\n      <span class=\\\"token function\\\">loop</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">,</span> dropKey<span class=\\\"token punctuation\\\">,</span> item <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n        item<span class=\\\"token punctuation\\\">.</span>children <span class=\\\"token operator\\\">=</span> item<span class=\\\"token punctuation\\\">.</span>children <span class=\\\"token operator\\\">||</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// where to insert 示例添加到头部，可以是随意位置</span>\\n        item<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">unshift</span><span class=\\\"token punctuation\\\">(</span>dragObj<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token punctuation\\\">(</span>info<span class=\\\"token punctuation\\\">.</span>node<span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>children <span class=\\\"token operator\\\">||</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>length <span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">0</span> <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Has children</span>\\n      info<span class=\\\"token punctuation\\\">.</span>node<span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>expanded <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Is expanded</span>\\n      dropPosition <span class=\\\"token operator\\\">===</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// On the bottom gap</span>\\n    <span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">loop</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">,</span> dropKey<span class=\\\"token punctuation\\\">,</span> item <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n        item<span class=\\\"token punctuation\\\">.</span>children <span class=\\\"token operator\\\">=</span> item<span class=\\\"token punctuation\\\">.</span>children <span class=\\\"token operator\\\">||</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// where to insert 示例添加到头部，可以是随意位置</span>\\n        item<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">unshift</span><span class=\\\"token punctuation\\\">(</span>dragObj<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// in previous version, we use item.children.push(dragObj) to insert the</span>\\n        <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// item to the tail of the children</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">let</span> ar<span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">let</span> i<span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token function\\\">loop</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">,</span> dropKey<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span>item<span class=\\\"token punctuation\\\">,</span> index<span class=\\\"token punctuation\\\">,</span> arr<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n        ar <span class=\\\"token operator\\\">=</span> arr<span class=\\\"token punctuation\\\">;</span>\\n        i <span class=\\\"token operator\\\">=</span> index<span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>dropPosition <span class=\\\"token operator\\\">===</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        ar<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">splice</span><span class=\\\"token punctuation\\\">(</span>i<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> dragObj<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n        ar<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">splice</span><span class=\\\"token punctuation\\\">(</span>i <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> dragObj<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      gData<span class=\\\"token punctuation\\\">:</span> data<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Tree</span>\\n        <span class=\\\"token attr-name\\\">className</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>draggable-tree<span class=\\\"token punctuation\\\">\\\"</span></span>\\n        <span class=\\\"token attr-name\\\">defaultExpandedKeys</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>expandedKeys<span class=\\\"token punctuation\\\">}</span></span>\\n        <span class=\\\"token attr-name\\\">draggable</span>\\n        <span class=\\\"token attr-name\\\">blockNode</span>\\n        <span class=\\\"token attr-name\\\">onDragEnter</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onDragEnter<span class=\\\"token punctuation\\\">}</span></span>\\n        <span class=\\\"token attr-name\\\">onDrop</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onDrop<span class=\\\"token punctuation\\\">}</span></span>\\n        <span class=\\\"token attr-name\\\">treeData</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>gData<span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token punctuation\\\">/></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Demo</span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span> mountNode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n    }\n  ],\n  \"highlightedCodes\": {\n    \"jsx\": \"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Tree <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'antd'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> x <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> y <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> z <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> gData <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">generateData</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">_level<span class=\\\"token punctuation\\\">,</span> _preKey<span class=\\\"token punctuation\\\">,</span> _tns</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> preKey <span class=\\\"token operator\\\">=</span> _preKey <span class=\\\"token operator\\\">||</span> <span class=\\\"token string\\\">'0'</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> tns <span class=\\\"token operator\\\">=</span> _tns <span class=\\\"token operator\\\">||</span> gData<span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> children <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> x<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> key <span class=\\\"token operator\\\">=</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>preKey<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">-</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>i<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n    tns<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> title<span class=\\\"token operator\\\">:</span> key<span class=\\\"token punctuation\\\">,</span> key <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>i <span class=\\\"token operator\\\">&lt;</span> y<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      children<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>key<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>_level <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> tns<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">const</span> level <span class=\\\"token operator\\\">=</span> _level <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n  children<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">key<span class=\\\"token punctuation\\\">,</span> index</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    tns<span class=\\\"token punctuation\\\">[</span>index<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>children <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">generateData</span><span class=\\\"token punctuation\\\">(</span>level<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">,</span> tns<span class=\\\"token punctuation\\\">[</span>index<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token function\\\">generateData</span><span class=\\\"token punctuation\\\">(</span>z<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Demo</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    gData<span class=\\\"token punctuation\\\">,</span>\\n    expandedKeys<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'0-0'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'0-0-0-0'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function-variable function\\\">onDragEnter</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token parameter\\\">info</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>info<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token comment\\\">// expandedKeys 需要受控时设置</span>\\n    <span class=\\\"token comment\\\">// this.setState({</span>\\n    <span class=\\\"token comment\\\">//   expandedKeys: info.expandedKeys,</span>\\n    <span class=\\\"token comment\\\">// });</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function-variable function\\\">onDrop</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token parameter\\\">info</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>info<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> dropKey <span class=\\\"token operator\\\">=</span> info<span class=\\\"token punctuation\\\">.</span>node<span class=\\\"token punctuation\\\">.</span>key<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> dragKey <span class=\\\"token operator\\\">=</span> info<span class=\\\"token punctuation\\\">.</span>dragNode<span class=\\\"token punctuation\\\">.</span>key<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> dropPos <span class=\\\"token operator\\\">=</span> info<span class=\\\"token punctuation\\\">.</span>node<span class=\\\"token punctuation\\\">.</span>pos<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">split</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'-'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> dropPosition <span class=\\\"token operator\\\">=</span> info<span class=\\\"token punctuation\\\">.</span>dropPosition <span class=\\\"token operator\\\">-</span> <span class=\\\"token function\\\">Number</span><span class=\\\"token punctuation\\\">(</span>dropPos<span class=\\\"token punctuation\\\">[</span>dropPos<span class=\\\"token punctuation\\\">.</span>length <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">loop</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">data<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">,</span> callback</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> data<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>key <span class=\\\"token operator\\\">===</span> key<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">callback</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> i<span class=\\\"token punctuation\\\">,</span> data<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token function\\\">loop</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">,</span> callback<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> data <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token operator\\\">...</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>gData<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">// Find dragObject</span>\\n    <span class=\\\"token keyword\\\">let</span> dragObj<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">loop</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">,</span> dragKey<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">item<span class=\\\"token punctuation\\\">,</span> index<span class=\\\"token punctuation\\\">,</span> arr</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      arr<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">splice</span><span class=\\\"token punctuation\\\">(</span>index<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      dragObj <span class=\\\"token operator\\\">=</span> item<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span>info<span class=\\\"token punctuation\\\">.</span>dropToGap<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token comment\\\">// Drop on the content</span>\\n      <span class=\\\"token function\\\">loop</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">,</span> dropKey<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token parameter\\\">item</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        item<span class=\\\"token punctuation\\\">.</span>children <span class=\\\"token operator\\\">=</span> item<span class=\\\"token punctuation\\\">.</span>children <span class=\\\"token operator\\\">||</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token comment\\\">// where to insert 示例添加到头部，可以是随意位置</span>\\n        item<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">unshift</span><span class=\\\"token punctuation\\\">(</span>dragObj<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token punctuation\\\">(</span>info<span class=\\\"token punctuation\\\">.</span>node<span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>children <span class=\\\"token operator\\\">||</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>length <span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">0</span> <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token comment\\\">// Has children</span>\\n      info<span class=\\\"token punctuation\\\">.</span>node<span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>expanded <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token comment\\\">// Is expanded</span>\\n      dropPosition <span class=\\\"token operator\\\">===</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token comment\\\">// On the bottom gap</span>\\n    <span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">loop</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">,</span> dropKey<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token parameter\\\">item</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        item<span class=\\\"token punctuation\\\">.</span>children <span class=\\\"token operator\\\">=</span> item<span class=\\\"token punctuation\\\">.</span>children <span class=\\\"token operator\\\">||</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token comment\\\">// where to insert 示例添加到头部，可以是随意位置</span>\\n        item<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">unshift</span><span class=\\\"token punctuation\\\">(</span>dragObj<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token comment\\\">// in previous version, we use item.children.push(dragObj) to insert the</span>\\n        <span class=\\\"token comment\\\">// item to the tail of the children</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">let</span> ar<span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">let</span> i<span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token function\\\">loop</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">,</span> dropKey<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">item<span class=\\\"token punctuation\\\">,</span> index<span class=\\\"token punctuation\\\">,</span> arr</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        ar <span class=\\\"token operator\\\">=</span> arr<span class=\\\"token punctuation\\\">;</span>\\n        i <span class=\\\"token operator\\\">=</span> index<span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>dropPosition <span class=\\\"token operator\\\">===</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        ar<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">splice</span><span class=\\\"token punctuation\\\">(</span>i<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> dragObj<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n        ar<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">splice</span><span class=\\\"token punctuation\\\">(</span>i <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> dragObj<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      gData<span class=\\\"token operator\\\">:</span> data<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Tree</span></span>\\n        <span class=\\\"token attr-name\\\">className</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>draggable-tree<span class=\\\"token punctuation\\\">\\\"</span></span>\\n        <span class=\\\"token attr-name\\\">defaultExpandedKeys</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>expandedKeys<span class=\\\"token punctuation\\\">}</span></span>\\n        <span class=\\\"token attr-name\\\">draggable</span>\\n        <span class=\\\"token attr-name\\\">blockNode</span>\\n        <span class=\\\"token attr-name\\\">onDragEnter</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onDragEnter<span class=\\\"token punctuation\\\">}</span></span>\\n        <span class=\\\"token attr-name\\\">onDrop</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onDrop<span class=\\\"token punctuation\\\">}</span></span>\\n        <span class=\\\"token attr-name\\\">treeData</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>gData<span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token punctuation\\\">/></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Demo</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span> mountNode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n  },\n  \"preview\": function bishengPluginReactPreviewer() {\n  var React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n  var ReactDOM = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\n\n  function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n  var _antd = __webpack_require__(/*! antd */ \"./site/antd.js\");\n\n  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\n  function _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\n  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  var x = 3;\n  var y = 2;\n  var z = 1;\n  var gData = [];\n\n  var generateData = function generateData(_level, _preKey, _tns) {\n    var preKey = _preKey || '0';\n    var tns = _tns || gData;\n    var children = [];\n\n    for (var i = 0; i < x; i++) {\n      var key = \"\".concat(preKey, \"-\").concat(i);\n      tns.push({\n        title: key,\n        key: key\n      });\n\n      if (i < y) {\n        children.push(key);\n      }\n    }\n\n    if (_level < 0) {\n      return tns;\n    }\n\n    var level = _level - 1;\n    children.forEach(function (key, index) {\n      tns[index].children = [];\n      return generateData(level, key, tns[index].children);\n    });\n  };\n\n  generateData(z);\n\n  var Demo = /*#__PURE__*/function (_React$Component) {\n    _inherits(Demo, _React$Component);\n\n    var _super = _createSuper(Demo);\n\n    function Demo() {\n      var _this;\n\n      _classCallCheck(this, Demo);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n\n      _defineProperty(_assertThisInitialized(_this), \"state\", {\n        gData: gData,\n        expandedKeys: ['0-0', '0-0-0', '0-0-0-0']\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"onDragEnter\", function (info) {\n        console.log(info); // expandedKeys 需要受控时设置\n        // this.setState({\n        //   expandedKeys: info.expandedKeys,\n        // });\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"onDrop\", function (info) {\n        console.log(info);\n        var dropKey = info.node.key;\n        var dragKey = info.dragNode.key;\n        var dropPos = info.node.pos.split('-');\n        var dropPosition = info.dropPosition - Number(dropPos[dropPos.length - 1]);\n\n        var loop = function loop(data, key, callback) {\n          for (var i = 0; i < data.length; i++) {\n            if (data[i].key === key) {\n              return callback(data[i], i, data);\n            }\n\n            if (data[i].children) {\n              loop(data[i].children, key, callback);\n            }\n          }\n        };\n\n        var data = _toConsumableArray(_this.state.gData); // Find dragObject\n\n\n        var dragObj;\n        loop(data, dragKey, function (item, index, arr) {\n          arr.splice(index, 1);\n          dragObj = item;\n        });\n\n        if (!info.dropToGap) {\n          // Drop on the content\n          loop(data, dropKey, function (item) {\n            item.children = item.children || []; // where to insert 示例添加到头部，可以是随意位置\n\n            item.children.unshift(dragObj);\n          });\n        } else if ((info.node.props.children || []).length > 0 && // Has children\n        info.node.props.expanded && // Is expanded\n        dropPosition === 1 // On the bottom gap\n        ) {\n          loop(data, dropKey, function (item) {\n            item.children = item.children || []; // where to insert 示例添加到头部，可以是随意位置\n\n            item.children.unshift(dragObj); // in previous version, we use item.children.push(dragObj) to insert the\n            // item to the tail of the children\n          });\n        } else {\n          var ar;\n          var i;\n          loop(data, dropKey, function (item, index, arr) {\n            ar = arr;\n            i = index;\n          });\n\n          if (dropPosition === -1) {\n            ar.splice(i, 0, dragObj);\n          } else {\n            ar.splice(i + 1, 0, dragObj);\n          }\n        }\n\n        _this.setState({\n          gData: data\n        });\n      });\n\n      return _this;\n    }\n\n    _createClass(Demo, [{\n      key: \"render\",\n      value: function render() {\n        return /*#__PURE__*/React.createElement(_antd.Tree, {\n          className: \"draggable-tree\",\n          defaultExpandedKeys: this.state.expandedKeys,\n          draggable: true,\n          blockNode: true,\n          onDragEnter: this.onDragEnter,\n          onDrop: this.onDrop,\n          treeData: this.state.gData\n        });\n      }\n    }]);\n\n    return Demo;\n  }(React.Component);\n\n  return /*#__PURE__*/React.createElement(Demo, null);\n}\n};\n\n//# sourceURL=webpack:///./components/tree/demo/draggable.md?./node_modules/bisheng/lib/loaders/source-loader.js");

/***/ }),

/***/ "./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/dynamic.md":
/*!*********************************************************************************************!*\
  !*** ./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/dynamic.md ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = {\n  \"content\": {\n    \"zh-CN\": [\n      [\n        \"p\",\n        \"点击展开节点，动态加载数据。\"\n      ]\n    ],\n    \"en-US\": [\n      [\n        \"p\",\n        \"To load data asynchronously when click to expand a treeNode.\"\n      ]\n    ]\n  },\n  \"meta\": {\n    \"order\": 3,\n    \"title\": {\n      \"zh-CN\": \"异步数据加载\",\n      \"en-US\": \"load data asynchronously\"\n    },\n    \"filename\": \"components/tree/demo/dynamic.md\",\n    \"id\": \"components-tree-demo-dynamic\"\n  },\n  \"toc\": [\n    \"ul\",\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#zh-CN\",\n          \"title\": \"zh-CN\"\n        },\n        \"zh-CN\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#en-US\",\n          \"title\": \"en-US\"\n        },\n        \"en-US\"\n      ]\n    ]\n  ],\n  \"highlightedCode\": [\n    \"pre\",\n    {\n      \"lang\": \"tsx\",\n      \"highlighted\": \"import React<span class=\\\"token punctuation\\\">,</span> { useState } from <span class=\\\"token string\\\">'react'</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\nimport { Tree } from <span class=\\\"token string\\\">'antd'</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\ninterface DataNode {\\n  title<span class=\\\"token punctuation\\\">:</span> string<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n  key<span class=\\\"token punctuation\\\">:</span> string<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n  isLeaf<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> boolean<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n  children<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> DataNode<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n}\\n\\n<span class=\\\"token keyword\\\">const</span> initTreeData<span class=\\\"token punctuation\\\">:</span> DataNode<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  { title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Expand to load'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0'</span> }<span class=\\\"token punctuation\\\">,</span>\\n  { title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Expand to load'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'1'</span> }<span class=\\\"token punctuation\\\">,</span>\\n  { title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Tree Node'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'2'</span><span class=\\\"token punctuation\\\">,</span> isLeaf<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> }<span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n<span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">/</span> It's just a simple demo<span class=\\\"token punctuation\\\">.</span> You can use tree map <span class=\\\"token keyword\\\">to</span> optimize update perf<span class=\\\"token punctuation\\\">.</span>\\nfunction <span class=\\\"token function\\\">updateTreeData</span><span class=\\\"token punctuation\\\">(</span>list<span class=\\\"token punctuation\\\">:</span> DataNode<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">:</span> React<span class=\\\"token punctuation\\\">.</span>Key<span class=\\\"token punctuation\\\">,</span> children<span class=\\\"token punctuation\\\">:</span> DataNode<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span> DataNode<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> {\\n  return list<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span>node <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> {\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>node<span class=\\\"token punctuation\\\">.</span>key <span class=\\\"token operator\\\">==</span><span class=\\\"token operator\\\">=</span> key<span class=\\\"token punctuation\\\">)</span> {\\n      return {\\n        <span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span>node<span class=\\\"token punctuation\\\">,</span>\\n        children<span class=\\\"token punctuation\\\">,</span>\\n      }<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n    }\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>node<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">)</span> {\\n      return {\\n        <span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span>node<span class=\\\"token punctuation\\\">,</span>\\n        children<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">updateTreeData</span><span class=\\\"token punctuation\\\">(</span>node<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">,</span> children<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n      }<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n    }\\n    return node<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n  }<span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n}\\n\\n<span class=\\\"token keyword\\\">const</span> Demo<span class=\\\"token punctuation\\\">:</span> React<span class=\\\"token punctuation\\\">.</span>FC<span class=\\\"token operator\\\">&lt;</span>{}<span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> {\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>treeData<span class=\\\"token punctuation\\\">,</span> setTreeData<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span>initTreeData<span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> onLoadData <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>{ key<span class=\\\"token punctuation\\\">,</span> children }<span class=\\\"token punctuation\\\">:</span> any<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span>\\n    new Promise<span class=\\\"token operator\\\">&lt;</span>void<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span>resolve <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> {\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>children<span class=\\\"token punctuation\\\">)</span> {\\n        <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n        return<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n      }\\n      <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> {\\n        <span class=\\\"token function\\\">setTreeData</span><span class=\\\"token punctuation\\\">(</span>origin <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span>\\n          <span class=\\\"token function\\\">updateTreeData</span><span class=\\\"token punctuation\\\">(</span>origin<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span>\\n            { title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Child Node'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">:</span> `${key}<span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">0</span>` }<span class=\\\"token punctuation\\\">,</span>\\n            { title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Child Node'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">:</span> `${key}<span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">1</span>` }<span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n        <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n      }<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n    }<span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n  return <span class=\\\"token operator\\\">&lt;</span>Tree loadData<span class=\\\"token operator\\\">=</span>{onLoadData} treeData<span class=\\\"token operator\\\">=</span>{treeData} <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n}<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">&lt;</span>Demo <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span> mountNode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\"\n    }\n  ],\n  \"highlightedCodes\": {\n    \"tsx\": \"<span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> useState <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Tree <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'antd'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">DataNode</span> <span class=\\\"token punctuation\\\">{</span>\\n  title<span class=\\\"token operator\\\">:</span> string<span class=\\\"token punctuation\\\">;</span>\\n  key<span class=\\\"token operator\\\">:</span> string<span class=\\\"token punctuation\\\">;</span>\\n  isLeaf<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> boolean<span class=\\\"token punctuation\\\">;</span>\\n  children<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> DataNode<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">const</span> initTreeData<span class=\\\"token operator\\\">:</span> DataNode<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span> title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'Expand to load'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'Expand to load'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'1'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span> title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'Tree Node'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'2'</span><span class=\\\"token punctuation\\\">,</span> isLeaf<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// It's just a simple demo. You can use tree map to optimize update perf.</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">updateTreeData</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">list<span class=\\\"token operator\\\">:</span> DataNode<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token operator\\\">:</span> React<span class=\\\"token punctuation\\\">.</span>Key<span class=\\\"token punctuation\\\">,</span> children<span class=\\\"token operator\\\">:</span> DataNode<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">:</span> DataNode<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> list<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">node</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>node<span class=\\\"token punctuation\\\">.</span>key <span class=\\\"token operator\\\">===</span> key<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token operator\\\">...</span>node<span class=\\\"token punctuation\\\">,</span>\\n        children<span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>node<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token operator\\\">...</span>node<span class=\\\"token punctuation\\\">,</span>\\n        children<span class=\\\"token operator\\\">:</span> <span class=\\\"token function\\\">updateTreeData</span><span class=\\\"token punctuation\\\">(</span>node<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">,</span> children<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token keyword\\\">return</span> node<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">const</span> Demo<span class=\\\"token operator\\\">:</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">FC</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>treeData<span class=\\\"token punctuation\\\">,</span> setTreeData<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span>initTreeData<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">onLoadData</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> key<span class=\\\"token punctuation\\\">,</span> children <span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">:</span> any</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span>\\n    <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">void</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">resolve</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>children<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">return</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function\\\">setTreeData</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">origin</span> <span class=\\\"token operator\\\">=></span>\\n          <span class=\\\"token function\\\">updateTreeData</span><span class=\\\"token punctuation\\\">(</span>origin<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span>\\n            <span class=\\\"token punctuation\\\">{</span> title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'Child Node'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token operator\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>key<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">-0</span><span class=\\\"token template-punctuation string\\\">`</span></span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token punctuation\\\">{</span> title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'Child Node'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token operator\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>key<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">-1</span><span class=\\\"token template-punctuation string\\\">`</span></span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n        <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Tree</span></span> <span class=\\\"token attr-name\\\">loadData</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onLoadData<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">treeData</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>treeData<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Demo</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span> mountNode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\",\n    \"jsx\": \"<span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> useState <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Tree <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'antd'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> initTreeData <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'Expand to load'</span><span class=\\\"token punctuation\\\">,</span>\\n    key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0'</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'Expand to load'</span><span class=\\\"token punctuation\\\">,</span>\\n    key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'1'</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'Tree Node'</span><span class=\\\"token punctuation\\\">,</span>\\n    key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'2'</span><span class=\\\"token punctuation\\\">,</span>\\n    isLeaf<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// It's just a simple demo. You can use tree map to optimize update perf.</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">updateTreeData</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">list<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">,</span> children</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> list<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">node</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>node<span class=\\\"token punctuation\\\">.</span>key <span class=\\\"token operator\\\">===</span> key<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>node<span class=\\\"token punctuation\\\">,</span> children <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>node<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>node<span class=\\\"token punctuation\\\">,</span> children<span class=\\\"token operator\\\">:</span> <span class=\\\"token function\\\">updateTreeData</span><span class=\\\"token punctuation\\\">(</span>node<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">,</span> children<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">return</span> node<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">Demo</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>treeData<span class=\\\"token punctuation\\\">,</span> setTreeData<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span>initTreeData<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">onLoadData</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> key<span class=\\\"token punctuation\\\">,</span> children <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span>\\n    <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">resolve</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>children<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">return</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n\\n      <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function\\\">setTreeData</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">origin</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span>\\n          <span class=\\\"token function\\\">updateTreeData</span><span class=\\\"token punctuation\\\">(</span>origin<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span>\\n            <span class=\\\"token punctuation\\\">{</span>\\n              title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'Child Node'</span><span class=\\\"token punctuation\\\">,</span>\\n              key<span class=\\\"token operator\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>key<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">-0</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token punctuation\\\">{</span>\\n              title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'Child Node'</span><span class=\\\"token punctuation\\\">,</span>\\n              key<span class=\\\"token operator\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>key<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">-1</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Tree</span></span> <span class=\\\"token attr-name\\\">loadData</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onLoadData<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">treeData</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>treeData<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Demo</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span> mountNode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n  },\n  \"preview\": function bishengPluginReactPreviewer() {\n  var React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n  var ReactDOM = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\n\n  function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n  var _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\n\n  var _antd = __webpack_require__(/*! antd */ \"./site/antd.js\");\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  var initTreeData = [{\n    title: 'Expand to load',\n    key: '0'\n  }, {\n    title: 'Expand to load',\n    key: '1'\n  }, {\n    title: 'Tree Node',\n    key: '2',\n    isLeaf: true\n  }]; // It's just a simple demo. You can use tree map to optimize update perf.\n\n  function updateTreeData(list, key, children) {\n    return list.map(function (node) {\n      if (node.key === key) {\n        return _objectSpread(_objectSpread({}, node), {}, {\n          children: children\n        });\n      }\n\n      if (node.children) {\n        return _objectSpread(_objectSpread({}, node), {}, {\n          children: updateTreeData(node.children, key, children)\n        });\n      }\n\n      return node;\n    });\n  }\n\n  var Demo = function Demo() {\n    var _useState = (0, _react.useState)(initTreeData),\n        _useState2 = _slicedToArray(_useState, 2),\n        treeData = _useState2[0],\n        setTreeData = _useState2[1];\n\n    var onLoadData = function onLoadData(_ref) {\n      var key = _ref.key,\n          children = _ref.children;\n      return new Promise(function (resolve) {\n        if (children) {\n          resolve();\n          return;\n        }\n\n        setTimeout(function () {\n          setTreeData(function (origin) {\n            return updateTreeData(origin, key, [{\n              title: 'Child Node',\n              key: \"\".concat(key, \"-0\")\n            }, {\n              title: 'Child Node',\n              key: \"\".concat(key, \"-1\")\n            }]);\n          });\n          resolve();\n        }, 1000);\n      });\n    };\n\n    return /*#__PURE__*/_react[\"default\"].createElement(_antd.Tree, {\n      loadData: onLoadData,\n      treeData: treeData\n    });\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(Demo, null);\n}\n};\n\n//# sourceURL=webpack:///./components/tree/demo/dynamic.md?./node_modules/bisheng/lib/loaders/source-loader.js");

/***/ }),

/***/ "./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/line.md":
/*!******************************************************************************************!*\
  !*** ./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/line.md ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = {\n  \"content\": {\n    \"zh-CN\": [\n      [\n        \"p\",\n        \"节点之间带连接线的树，常用于文件目录结构展示。使用 \",\n        [\n          \"code\",\n          \"showLine\"\n        ],\n        \" 开启，可以用 \",\n        [\n          \"code\",\n          \"switcherIcon\"\n        ],\n        \" 修改默认图标。\"\n      ]\n    ],\n    \"en-US\": [\n      [\n        \"p\",\n        \"Tree with connected line between nodes, turn on by \",\n        [\n          \"code\",\n          \"showLine\"\n        ],\n        \", customize the preseted icon by \",\n        [\n          \"code\",\n          \"switcherIcon\"\n        ],\n        \".\"\n      ]\n    ]\n  },\n  \"meta\": {\n    \"order\": 5,\n    \"title\": {\n      \"zh-CN\": \"连接线\",\n      \"en-US\": \"Tree with line\"\n    },\n    \"filename\": \"components/tree/demo/line.md\",\n    \"id\": \"components-tree-demo-line\"\n  },\n  \"toc\": [\n    \"ul\",\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#zh-CN\",\n          \"title\": \"zh-CN\"\n        },\n        \"zh-CN\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#en-US\",\n          \"title\": \"en-US\"\n        },\n        \"en-US\"\n      ]\n    ]\n  ],\n  \"highlightedCode\": [\n    \"pre\",\n    {\n      \"lang\": \"tsx\",\n      \"highlighted\": \"import React<span class=\\\"token punctuation\\\">,</span> { useState } from <span class=\\\"token string\\\">'react'</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\nimport { Tree<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">Switch</span> } from <span class=\\\"token string\\\">'antd'</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\nimport { CarryOutOutlined<span class=\\\"token punctuation\\\">,</span> FormOutlined } from <span class=\\\"token string\\\">'@ant-design/icons'</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> treeData <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  {\\n    title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'parent 1'</span><span class=\\\"token punctuation\\\">,</span>\\n    key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n    icon<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token operator\\\">&lt;</span>CarryOutOutlined <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span>\\n    children<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n      {\\n        title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'parent 1-0'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n        icon<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token operator\\\">&lt;</span>CarryOutOutlined <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span>\\n        children<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n          { title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-0-0'</span><span class=\\\"token punctuation\\\">,</span> icon<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token operator\\\">&lt;</span>CarryOutOutlined <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span> }<span class=\\\"token punctuation\\\">,</span>\\n          {\\n            title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span>\\n              <span class=\\\"token operator\\\">&lt;></span>\\n                <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>multiple line title<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n                <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>multiple line title<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n              <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n            <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n            key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n            icon<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token operator\\\">&lt;</span>CarryOutOutlined <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span>\\n          }<span class=\\\"token punctuation\\\">,</span>\\n          { title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-0-2'</span><span class=\\\"token punctuation\\\">,</span> icon<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token operator\\\">&lt;</span>CarryOutOutlined <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span> }<span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      }<span class=\\\"token punctuation\\\">,</span>\\n      {\\n        title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'parent 1-1'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n        icon<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token operator\\\">&lt;</span>CarryOutOutlined <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span>\\n        children<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>{ title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-1-0'</span><span class=\\\"token punctuation\\\">,</span> icon<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token operator\\\">&lt;</span>CarryOutOutlined <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span> }<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      }<span class=\\\"token punctuation\\\">,</span>\\n      {\\n        title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'parent 1-2'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-2'</span><span class=\\\"token punctuation\\\">,</span>\\n        icon<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token operator\\\">&lt;</span>CarryOutOutlined <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span>\\n        children<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n          { title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-2-0'</span><span class=\\\"token punctuation\\\">,</span> icon<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token operator\\\">&lt;</span>CarryOutOutlined <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span> }<span class=\\\"token punctuation\\\">,</span>\\n          {\\n            title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span>\\n            key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-2-1'</span><span class=\\\"token punctuation\\\">,</span>\\n            icon<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token operator\\\">&lt;</span>CarryOutOutlined <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span>\\n            switcherIcon<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token operator\\\">&lt;</span>FormOutlined <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span>\\n          }<span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      }<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  }<span class=\\\"token punctuation\\\">,</span>\\n  {\\n    title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'parent 2'</span><span class=\\\"token punctuation\\\">,</span>\\n    key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n    icon<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token operator\\\">&lt;</span>CarryOutOutlined <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span>\\n    children<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n      {\\n        title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'parent 2-0'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-1-0'</span><span class=\\\"token punctuation\\\">,</span>\\n        icon<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token operator\\\">&lt;</span>CarryOutOutlined <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span>\\n        children<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n          { title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-1-0-0'</span><span class=\\\"token punctuation\\\">,</span> icon<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token operator\\\">&lt;</span>CarryOutOutlined <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span> }<span class=\\\"token punctuation\\\">,</span>\\n          { title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-1-0-1'</span><span class=\\\"token punctuation\\\">,</span> icon<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token operator\\\">&lt;</span>CarryOutOutlined <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span> }<span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      }<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  }<span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> Demo<span class=\\\"token punctuation\\\">:</span> React<span class=\\\"token punctuation\\\">.</span>FC<span class=\\\"token operator\\\">&lt;</span>{}<span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> {\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>showLine<span class=\\\"token punctuation\\\">,</span> setShowLine<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> useState<span class=\\\"token operator\\\">&lt;</span>boolean | { showLeafIcon<span class=\\\"token punctuation\\\">:</span> boolean }<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>showIcon<span class=\\\"token punctuation\\\">,</span> setShowIcon<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> useState<span class=\\\"token operator\\\">&lt;</span>boolean<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>showLeafIcon<span class=\\\"token punctuation\\\">,</span> setShowLeafIcon<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> useState<span class=\\\"token operator\\\">&lt;</span>boolean<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> onSelect <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>selectedKeys<span class=\\\"token punctuation\\\">:</span> React<span class=\\\"token punctuation\\\">.</span>Key<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> info<span class=\\\"token punctuation\\\">:</span> any<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> {\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'selected'</span><span class=\\\"token punctuation\\\">,</span> selectedKeys<span class=\\\"token punctuation\\\">,</span> info<span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n  }<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> onSetLeafIcon <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>checked<span class=\\\"token punctuation\\\">:</span> boolean<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> {\\n    <span class=\\\"token function\\\">setShowLeafIcon</span><span class=\\\"token punctuation\\\">(</span>checked<span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n    <span class=\\\"token function\\\">setShowLine</span><span class=\\\"token punctuation\\\">(</span>{ showLeafIcon<span class=\\\"token punctuation\\\">:</span> checked }<span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n  }<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> onSetShowLine <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>checked<span class=\\\"token punctuation\\\">:</span> boolean<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> {\\n    <span class=\\\"token function\\\">setShowLine</span><span class=\\\"token punctuation\\\">(</span>checked <span class=\\\"token operator\\\">?</span> { showLeafIcon } <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n  }<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n  return <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>div style<span class=\\\"token operator\\\">=</span>{{ marginBottom<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">16</span> }}<span class=\\\"token operator\\\">></span>\\n        showLine<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">Switch</span> checked<span class=\\\"token operator\\\">=</span>{!!showLine} onChange<span class=\\\"token operator\\\">=</span>{onSetShowLine} <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>br <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>br <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n        showIcon<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">Switch</span> checked<span class=\\\"token operator\\\">=</span>{showIcon} onChange<span class=\\\"token operator\\\">=</span>{setShowIcon} <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>br <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>br <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n        showLeafIcon<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">Switch</span> checked<span class=\\\"token operator\\\">=</span>{showLeafIcon} onChange<span class=\\\"token operator\\\">=</span>{onSetLeafIcon} <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>Tree\\n        showLine<span class=\\\"token operator\\\">=</span>{showLine}\\n        showIcon<span class=\\\"token operator\\\">=</span>{showIcon}\\n        defaultExpandedKeys<span class=\\\"token operator\\\">=</span>{<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">]</span>}\\n        onSelect<span class=\\\"token operator\\\">=</span>{onSelect}\\n        treeData<span class=\\\"token operator\\\">=</span>{treeData}\\n      <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n}<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">&lt;</span>Demo <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span> mountNode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\"\n    }\n  ],\n  \"highlightedCodes\": {\n    \"tsx\": \"<span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> useState <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Tree<span class=\\\"token punctuation\\\">,</span> Switch <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'antd'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> CarryOutOutlined<span class=\\\"token punctuation\\\">,</span> FormOutlined <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'@ant-design/icons'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> treeData <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'parent 1'</span><span class=\\\"token punctuation\\\">,</span>\\n    key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n    icon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">CarryOutOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span>\\n    children<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'parent 1-0'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n        icon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">CarryOutOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span>\\n        children<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n          <span class=\\\"token punctuation\\\">{</span> title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0-0'</span><span class=\\\"token punctuation\\\">,</span> icon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">CarryOutOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">{</span>\\n            title<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span>\\n              <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span></span><span class=\\\"token punctuation\\\">></span></span>\\n                <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>multiple line title<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n                <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>multiple line title<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n              <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span></span><span class=\\\"token punctuation\\\">></span></span>\\n            <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n            key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n            icon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">CarryOutOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">{</span> title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0-2'</span><span class=\\\"token punctuation\\\">,</span> icon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">CarryOutOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'parent 1-1'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n        icon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">CarryOutOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span>\\n        children<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">{</span> title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-1-0'</span><span class=\\\"token punctuation\\\">,</span> icon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">CarryOutOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'parent 1-2'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-2'</span><span class=\\\"token punctuation\\\">,</span>\\n        icon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">CarryOutOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span>\\n        children<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n          <span class=\\\"token punctuation\\\">{</span> title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-2-0'</span><span class=\\\"token punctuation\\\">,</span> icon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">CarryOutOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">{</span>\\n            title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span>\\n            key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-2-1'</span><span class=\\\"token punctuation\\\">,</span>\\n            icon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">CarryOutOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span>\\n            switcherIcon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">FormOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'parent 2'</span><span class=\\\"token punctuation\\\">,</span>\\n    key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n    icon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">CarryOutOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span>\\n    children<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'parent 2-0'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-1-0'</span><span class=\\\"token punctuation\\\">,</span>\\n        icon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">CarryOutOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span>\\n        children<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n          <span class=\\\"token punctuation\\\">{</span> title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-1-0-0'</span><span class=\\\"token punctuation\\\">,</span> icon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">CarryOutOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">{</span> title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-1-0-1'</span><span class=\\\"token punctuation\\\">,</span> icon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">CarryOutOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> Demo<span class=\\\"token operator\\\">:</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">FC</span><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>showLine<span class=\\\"token punctuation\\\">,</span> setShowLine<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> useState<span class=\\\"token operator\\\">&lt;</span>boolean <span class=\\\"token operator\\\">|</span> <span class=\\\"token punctuation\\\">{</span> showLeafIcon<span class=\\\"token operator\\\">:</span> boolean <span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>showIcon<span class=\\\"token punctuation\\\">,</span> setShowIcon<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> useState<span class=\\\"token operator\\\">&lt;</span>boolean<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>showLeafIcon<span class=\\\"token punctuation\\\">,</span> setShowLeafIcon<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> useState<span class=\\\"token operator\\\">&lt;</span>boolean<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">onSelect</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">selectedKeys<span class=\\\"token operator\\\">:</span> React<span class=\\\"token punctuation\\\">.</span>Key<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> info<span class=\\\"token operator\\\">:</span> any</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'selected'</span><span class=\\\"token punctuation\\\">,</span> selectedKeys<span class=\\\"token punctuation\\\">,</span> info<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">onSetLeafIcon</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">checked<span class=\\\"token operator\\\">:</span> boolean</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">setShowLeafIcon</span><span class=\\\"token punctuation\\\">(</span>checked<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">setShowLine</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> showLeafIcon<span class=\\\"token operator\\\">:</span> checked <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">onSetShowLine</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">checked<span class=\\\"token operator\\\">:</span> boolean</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">setShowLine</span><span class=\\\"token punctuation\\\">(</span>checked <span class=\\\"token operator\\\">?</span> <span class=\\\"token punctuation\\\">{</span> showLeafIcon <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">style</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> marginBottom<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">16</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>\\n        showLine<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span> <span class=\\\"token attr-name\\\">checked</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token operator\\\">!</span><span class=\\\"token operator\\\">!</span>showLine<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onSetShowLine<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>br</span> <span class=\\\"token punctuation\\\">/></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>br</span> <span class=\\\"token punctuation\\\">/></span></span>\\n        showIcon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span> <span class=\\\"token attr-name\\\">checked</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>showIcon<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>setShowIcon<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>br</span> <span class=\\\"token punctuation\\\">/></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>br</span> <span class=\\\"token punctuation\\\">/></span></span>\\n        showLeafIcon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span> <span class=\\\"token attr-name\\\">checked</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>showLeafIcon<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onSetLeafIcon<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Tree</span></span>\\n        <span class=\\\"token attr-name\\\">showLine</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>showLine<span class=\\\"token punctuation\\\">}</span></span>\\n        <span class=\\\"token attr-name\\\">showIcon</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>showIcon<span class=\\\"token punctuation\\\">}</span></span>\\n        <span class=\\\"token attr-name\\\">defaultExpandedKeys</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span></span>\\n        <span class=\\\"token attr-name\\\">onSelect</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onSelect<span class=\\\"token punctuation\\\">}</span></span>\\n        <span class=\\\"token attr-name\\\">treeData</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>treeData<span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token punctuation\\\">/></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Demo</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span> mountNode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\",\n    \"jsx\": \"<span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> useState <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Tree<span class=\\\"token punctuation\\\">,</span> Switch <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'antd'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> CarryOutOutlined<span class=\\\"token punctuation\\\">,</span> FormOutlined <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'@ant-design/icons'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> treeData <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'parent 1'</span><span class=\\\"token punctuation\\\">,</span>\\n    key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n    icon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">CarryOutOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span>\\n    children<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'parent 1-0'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n        icon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">CarryOutOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span>\\n        children<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n          <span class=\\\"token punctuation\\\">{</span>\\n            title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span>\\n            key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n            icon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">CarryOutOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">{</span>\\n            title<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span>\\n              <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span></span><span class=\\\"token punctuation\\\">></span></span>\\n                <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>multiple line title<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n                <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>multiple line title<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n              <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span></span><span class=\\\"token punctuation\\\">></span></span>\\n            <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n            key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n            icon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">CarryOutOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">{</span>\\n            title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span>\\n            key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0-2'</span><span class=\\\"token punctuation\\\">,</span>\\n            icon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">CarryOutOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'parent 1-1'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n        icon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">CarryOutOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span>\\n        children<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n          <span class=\\\"token punctuation\\\">{</span>\\n            title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span>\\n            key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-1-0'</span><span class=\\\"token punctuation\\\">,</span>\\n            icon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">CarryOutOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'parent 1-2'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-2'</span><span class=\\\"token punctuation\\\">,</span>\\n        icon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">CarryOutOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span>\\n        children<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n          <span class=\\\"token punctuation\\\">{</span>\\n            title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span>\\n            key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-2-0'</span><span class=\\\"token punctuation\\\">,</span>\\n            icon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">CarryOutOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">{</span>\\n            title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span>\\n            key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-2-1'</span><span class=\\\"token punctuation\\\">,</span>\\n            icon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">CarryOutOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span>\\n            switcherIcon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">FormOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'parent 2'</span><span class=\\\"token punctuation\\\">,</span>\\n    key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n    icon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">CarryOutOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span>\\n    children<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'parent 2-0'</span><span class=\\\"token punctuation\\\">,</span>\\n        key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-1-0'</span><span class=\\\"token punctuation\\\">,</span>\\n        icon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">CarryOutOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span>\\n        children<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n          <span class=\\\"token punctuation\\\">{</span>\\n            title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span>\\n            key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-1-0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n            icon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">CarryOutOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">{</span>\\n            title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span>\\n            key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-1-0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n            icon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">CarryOutOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">Demo</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>showLine<span class=\\\"token punctuation\\\">,</span> setShowLine<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>showIcon<span class=\\\"token punctuation\\\">,</span> setShowIcon<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>showLeafIcon<span class=\\\"token punctuation\\\">,</span> setShowLeafIcon<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">onSelect</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">selectedKeys<span class=\\\"token punctuation\\\">,</span> info</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'selected'</span><span class=\\\"token punctuation\\\">,</span> selectedKeys<span class=\\\"token punctuation\\\">,</span> info<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">onSetLeafIcon</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">checked</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">setShowLeafIcon</span><span class=\\\"token punctuation\\\">(</span>checked<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">setShowLine</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      showLeafIcon<span class=\\\"token operator\\\">:</span> checked<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">onSetShowLine</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">checked</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">setShowLine</span><span class=\\\"token punctuation\\\">(</span>\\n      checked\\n        <span class=\\\"token operator\\\">?</span> <span class=\\\"token punctuation\\\">{</span>\\n            showLeafIcon<span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span>\\n        <span class=\\\"token attr-name\\\">style</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span>\\n          marginBottom<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">16</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token punctuation\\\">></span></span>\\n        showLine<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span> <span class=\\\"token attr-name\\\">checked</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token operator\\\">!</span><span class=\\\"token operator\\\">!</span>showLine<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onSetShowLine<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>br</span> <span class=\\\"token punctuation\\\">/></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>br</span> <span class=\\\"token punctuation\\\">/></span></span>\\n        showIcon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span> <span class=\\\"token attr-name\\\">checked</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>showIcon<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>setShowIcon<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>br</span> <span class=\\\"token punctuation\\\">/></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>br</span> <span class=\\\"token punctuation\\\">/></span></span>\\n        showLeafIcon<span class=\\\"token operator\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span> <span class=\\\"token attr-name\\\">checked</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>showLeafIcon<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onSetLeafIcon<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Tree</span></span>\\n        <span class=\\\"token attr-name\\\">showLine</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>showLine<span class=\\\"token punctuation\\\">}</span></span>\\n        <span class=\\\"token attr-name\\\">showIcon</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>showIcon<span class=\\\"token punctuation\\\">}</span></span>\\n        <span class=\\\"token attr-name\\\">defaultExpandedKeys</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span></span>\\n        <span class=\\\"token attr-name\\\">onSelect</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onSelect<span class=\\\"token punctuation\\\">}</span></span>\\n        <span class=\\\"token attr-name\\\">treeData</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>treeData<span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token punctuation\\\">/></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Demo</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span> mountNode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n  },\n  \"preview\": function bishengPluginReactPreviewer() {\n  var React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n  var ReactDOM = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\n\n  function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n  var _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\n\n  var _antd = __webpack_require__(/*! antd */ \"./site/antd.js\");\n\n  var _icons = __webpack_require__(/*! @ant-design/icons */ \"./node_modules/@ant-design/icons/es/index.js\");\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  var treeData = [{\n    title: 'parent 1',\n    key: '0-0',\n    icon: /*#__PURE__*/_react[\"default\"].createElement(_icons.CarryOutOutlined, null),\n    children: [{\n      title: 'parent 1-0',\n      key: '0-0-0',\n      icon: /*#__PURE__*/_react[\"default\"].createElement(_icons.CarryOutOutlined, null),\n      children: [{\n        title: 'leaf',\n        key: '0-0-0-0',\n        icon: /*#__PURE__*/_react[\"default\"].createElement(_icons.CarryOutOutlined, null)\n      }, {\n        title: /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(\"div\", null, \"multiple line title\"), /*#__PURE__*/_react[\"default\"].createElement(\"div\", null, \"multiple line title\")),\n        key: '0-0-0-1',\n        icon: /*#__PURE__*/_react[\"default\"].createElement(_icons.CarryOutOutlined, null)\n      }, {\n        title: 'leaf',\n        key: '0-0-0-2',\n        icon: /*#__PURE__*/_react[\"default\"].createElement(_icons.CarryOutOutlined, null)\n      }]\n    }, {\n      title: 'parent 1-1',\n      key: '0-0-1',\n      icon: /*#__PURE__*/_react[\"default\"].createElement(_icons.CarryOutOutlined, null),\n      children: [{\n        title: 'leaf',\n        key: '0-0-1-0',\n        icon: /*#__PURE__*/_react[\"default\"].createElement(_icons.CarryOutOutlined, null)\n      }]\n    }, {\n      title: 'parent 1-2',\n      key: '0-0-2',\n      icon: /*#__PURE__*/_react[\"default\"].createElement(_icons.CarryOutOutlined, null),\n      children: [{\n        title: 'leaf',\n        key: '0-0-2-0',\n        icon: /*#__PURE__*/_react[\"default\"].createElement(_icons.CarryOutOutlined, null)\n      }, {\n        title: 'leaf',\n        key: '0-0-2-1',\n        icon: /*#__PURE__*/_react[\"default\"].createElement(_icons.CarryOutOutlined, null),\n        switcherIcon: /*#__PURE__*/_react[\"default\"].createElement(_icons.FormOutlined, null)\n      }]\n    }]\n  }, {\n    title: 'parent 2',\n    key: '0-1',\n    icon: /*#__PURE__*/_react[\"default\"].createElement(_icons.CarryOutOutlined, null),\n    children: [{\n      title: 'parent 2-0',\n      key: '0-1-0',\n      icon: /*#__PURE__*/_react[\"default\"].createElement(_icons.CarryOutOutlined, null),\n      children: [{\n        title: 'leaf',\n        key: '0-1-0-0',\n        icon: /*#__PURE__*/_react[\"default\"].createElement(_icons.CarryOutOutlined, null)\n      }, {\n        title: 'leaf',\n        key: '0-1-0-1',\n        icon: /*#__PURE__*/_react[\"default\"].createElement(_icons.CarryOutOutlined, null)\n      }]\n    }]\n  }];\n\n  var Demo = function Demo() {\n    var _useState = (0, _react.useState)(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        showLine = _useState2[0],\n        setShowLine = _useState2[1];\n\n    var _useState3 = (0, _react.useState)(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        showIcon = _useState4[0],\n        setShowIcon = _useState4[1];\n\n    var _useState5 = (0, _react.useState)(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        showLeafIcon = _useState6[0],\n        setShowLeafIcon = _useState6[1];\n\n    var onSelect = function onSelect(selectedKeys, info) {\n      console.log('selected', selectedKeys, info);\n    };\n\n    var onSetLeafIcon = function onSetLeafIcon(checked) {\n      setShowLeafIcon(checked);\n      setShowLine({\n        showLeafIcon: checked\n      });\n    };\n\n    var onSetShowLine = function onSetShowLine(checked) {\n      setShowLine(checked ? {\n        showLeafIcon: showLeafIcon\n      } : false);\n    };\n\n    return /*#__PURE__*/_react[\"default\"].createElement(\"div\", null, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n      style: {\n        marginBottom: 16\n      }\n    }, \"showLine: \", /*#__PURE__*/_react[\"default\"].createElement(_antd.Switch, {\n      checked: !!showLine,\n      onChange: onSetShowLine\n    }), /*#__PURE__*/_react[\"default\"].createElement(\"br\", null), /*#__PURE__*/_react[\"default\"].createElement(\"br\", null), \"showIcon: \", /*#__PURE__*/_react[\"default\"].createElement(_antd.Switch, {\n      checked: showIcon,\n      onChange: setShowIcon\n    }), /*#__PURE__*/_react[\"default\"].createElement(\"br\", null), /*#__PURE__*/_react[\"default\"].createElement(\"br\", null), \"showLeafIcon: \", /*#__PURE__*/_react[\"default\"].createElement(_antd.Switch, {\n      checked: showLeafIcon,\n      onChange: onSetLeafIcon\n    })), /*#__PURE__*/_react[\"default\"].createElement(_antd.Tree, {\n      showLine: showLine,\n      showIcon: showIcon,\n      defaultExpandedKeys: ['0-0-0'],\n      onSelect: onSelect,\n      treeData: treeData\n    }));\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(Demo, null);\n}\n};\n\n//# sourceURL=webpack:///./components/tree/demo/line.md?./node_modules/bisheng/lib/loaders/source-loader.js");

/***/ }),

/***/ "./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/search.md":
/*!********************************************************************************************!*\
  !*** ./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/search.md ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = {\n  \"content\": {\n    \"zh-CN\": [\n      [\n        \"p\",\n        \"可搜索的树。\"\n      ]\n    ],\n    \"en-US\": [\n      [\n        \"p\",\n        \"Searchable Tree.\"\n      ]\n    ]\n  },\n  \"meta\": {\n    \"order\": 4,\n    \"title\": {\n      \"zh-CN\": \"可搜索\",\n      \"en-US\": \"Searchable\"\n    },\n    \"filename\": \"components/tree/demo/search.md\",\n    \"id\": \"components-tree-demo-search\"\n  },\n  \"toc\": [\n    \"ul\",\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#zh-CN\",\n          \"title\": \"zh-CN\"\n        },\n        \"zh-CN\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#en-US\",\n          \"title\": \"en-US\"\n        },\n        \"en-US\"\n      ]\n    ]\n  ],\n  \"highlightedCode\": [\n    \"pre\",\n    {\n      \"lang\": \"jsx\",\n      \"highlighted\": \"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Tree<span class=\\\"token punctuation\\\">,</span> Input <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'antd'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> Search <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> Input<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> x <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> y <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> z <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> gData <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> generateData <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>_level<span class=\\\"token punctuation\\\">,</span> _preKey<span class=\\\"token punctuation\\\">,</span> _tns<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> preKey <span class=\\\"token operator\\\">=</span> _preKey <span class=\\\"token operator\\\">||</span> <span class=\\\"token string\\\">'0'</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> tns <span class=\\\"token operator\\\">=</span> _tns <span class=\\\"token operator\\\">||</span> gData<span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> children <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> x<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> key <span class=\\\"token operator\\\">=</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>preKey<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">-</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>i<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n    tns<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> title<span class=\\\"token punctuation\\\">:</span> key<span class=\\\"token punctuation\\\">,</span> key <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>i <span class=\\\"token operator\\\">&lt;</span> y<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      children<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>key<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>_level <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> tns<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">const</span> level <span class=\\\"token operator\\\">=</span> _level <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n  children<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>key<span class=\\\"token punctuation\\\">,</span> index<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    tns<span class=\\\"token punctuation\\\">[</span>index<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>children <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">generateData</span><span class=\\\"token punctuation\\\">(</span>level<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">,</span> tns<span class=\\\"token punctuation\\\">[</span>index<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token function\\\">generateData</span><span class=\\\"token punctuation\\\">(</span>z<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> dataList <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> generateList <span class=\\\"token operator\\\">=</span> data <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> data<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> node <span class=\\\"token operator\\\">=</span> data<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> key <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> node<span class=\\\"token punctuation\\\">;</span>\\n    dataList<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> key<span class=\\\"token punctuation\\\">,</span> title<span class=\\\"token punctuation\\\">:</span> key <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>node<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">generateList</span><span class=\\\"token punctuation\\\">(</span>node<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token function\\\">generateList</span><span class=\\\"token punctuation\\\">(</span>gData<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> getParentKey <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>key<span class=\\\"token punctuation\\\">,</span> tree<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">let</span> parentKey<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> tree<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> node <span class=\\\"token operator\\\">=</span> tree<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>node<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>node<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">some</span><span class=\\\"token punctuation\\\">(</span>item <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> item<span class=\\\"token punctuation\\\">.</span>key <span class=\\\"token operator\\\">===</span> key<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        parentKey <span class=\\\"token operator\\\">=</span> node<span class=\\\"token punctuation\\\">.</span>key<span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">getParentKey</span><span class=\\\"token punctuation\\\">(</span>key<span class=\\\"token punctuation\\\">,</span> node<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        parentKey <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">getParentKey</span><span class=\\\"token punctuation\\\">(</span>key<span class=\\\"token punctuation\\\">,</span> node<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">return</span> parentKey<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">SearchTree</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    expandedKeys<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    searchValue<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span>\\n    autoExpandParent<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  onExpand <span class=\\\"token operator\\\">=</span> expandedKeys <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      expandedKeys<span class=\\\"token punctuation\\\">,</span>\\n      autoExpandParent<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  onChange <span class=\\\"token operator\\\">=</span> e <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> value <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> e<span class=\\\"token punctuation\\\">.</span>target<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> expandedKeys <span class=\\\"token operator\\\">=</span> dataList\\n      <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span>item <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>item<span class=\\\"token punctuation\\\">.</span>title<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">indexOf</span><span class=\\\"token punctuation\\\">(</span>value<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">getParentKey</span><span class=\\\"token punctuation\\\">(</span>item<span class=\\\"token punctuation\\\">.</span>key<span class=\\\"token punctuation\\\">,</span> gData<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">filter</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>item<span class=\\\"token punctuation\\\">,</span> i<span class=\\\"token punctuation\\\">,</span> self<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> item <span class=\\\"token operator\\\">&amp;&amp;</span> self<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">indexOf</span><span class=\\\"token punctuation\\\">(</span>item<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">===</span> i<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      expandedKeys<span class=\\\"token punctuation\\\">,</span>\\n      searchValue<span class=\\\"token punctuation\\\">:</span> value<span class=\\\"token punctuation\\\">,</span>\\n      autoExpandParent<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> searchValue<span class=\\\"token punctuation\\\">,</span> expandedKeys<span class=\\\"token punctuation\\\">,</span> autoExpandParent <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> loop <span class=\\\"token operator\\\">=</span> data <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span>\\n      data<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span>item <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">const</span> index <span class=\\\"token operator\\\">=</span> item<span class=\\\"token punctuation\\\">.</span>title<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">indexOf</span><span class=\\\"token punctuation\\\">(</span>searchValue<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">const</span> beforeStr <span class=\\\"token operator\\\">=</span> item<span class=\\\"token punctuation\\\">.</span>title<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">substr</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> index<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">const</span> afterStr <span class=\\\"token operator\\\">=</span> item<span class=\\\"token punctuation\\\">.</span>title<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">substr</span><span class=\\\"token punctuation\\\">(</span>index <span class=\\\"token operator\\\">+</span> searchValue<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">const</span> title <span class=\\\"token operator\\\">=</span>\\n          index <span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">1</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token punctuation\\\">(</span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>span</span><span class=\\\"token punctuation\\\">></span></span>\\n              <span class=\\\"token punctuation\\\">{</span>beforeStr<span class=\\\"token punctuation\\\">}</span>\\n              <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>span</span> <span class=\\\"token attr-name\\\">className</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>site-tree-search-value<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">{</span>searchValue<span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>span</span><span class=\\\"token punctuation\\\">></span></span>\\n              <span class=\\\"token punctuation\\\">{</span>afterStr<span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>span</span><span class=\\\"token punctuation\\\">></span></span>\\n          <span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>span</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">{</span>item<span class=\\\"token punctuation\\\">.</span>title<span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>span</span><span class=\\\"token punctuation\\\">></span></span>\\n          <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>item<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> title<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">:</span> item<span class=\\\"token punctuation\\\">.</span>key<span class=\\\"token punctuation\\\">,</span> children<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">loop</span><span class=\\\"token punctuation\\\">(</span>item<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n          title<span class=\\\"token punctuation\\\">,</span>\\n          key<span class=\\\"token punctuation\\\">:</span> item<span class=\\\"token punctuation\\\">.</span>key<span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Search</span> <span class=\\\"token attr-name\\\">style</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> marginBottom<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">8</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">placeholder</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>Search<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onChange<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Tree</span>\\n          <span class=\\\"token attr-name\\\">onExpand</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onExpand<span class=\\\"token punctuation\\\">}</span></span>\\n          <span class=\\\"token attr-name\\\">expandedKeys</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>expandedKeys<span class=\\\"token punctuation\\\">}</span></span>\\n          <span class=\\\"token attr-name\\\">autoExpandParent</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>autoExpandParent<span class=\\\"token punctuation\\\">}</span></span>\\n          <span class=\\\"token attr-name\\\">treeData</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token function\\\">loop</span><span class=\\\"token punctuation\\\">(</span>gData<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span>\\n        <span class=\\\"token punctuation\\\">/></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>SearchTree</span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span> mountNode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n    }\n  ],\n  \"highlightedCodes\": {\n    \"jsx\": \"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Tree<span class=\\\"token punctuation\\\">,</span> Input <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'antd'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> Search <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> Input<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> x <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> y <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> z <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> gData <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">generateData</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">_level<span class=\\\"token punctuation\\\">,</span> _preKey<span class=\\\"token punctuation\\\">,</span> _tns</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> preKey <span class=\\\"token operator\\\">=</span> _preKey <span class=\\\"token operator\\\">||</span> <span class=\\\"token string\\\">'0'</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> tns <span class=\\\"token operator\\\">=</span> _tns <span class=\\\"token operator\\\">||</span> gData<span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> children <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> x<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> key <span class=\\\"token operator\\\">=</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>preKey<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">-</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>i<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n    tns<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> title<span class=\\\"token operator\\\">:</span> key<span class=\\\"token punctuation\\\">,</span> key <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>i <span class=\\\"token operator\\\">&lt;</span> y<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      children<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>key<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>_level <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> tns<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">const</span> level <span class=\\\"token operator\\\">=</span> _level <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n  children<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">key<span class=\\\"token punctuation\\\">,</span> index</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    tns<span class=\\\"token punctuation\\\">[</span>index<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>children <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">generateData</span><span class=\\\"token punctuation\\\">(</span>level<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">,</span> tns<span class=\\\"token punctuation\\\">[</span>index<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token function\\\">generateData</span><span class=\\\"token punctuation\\\">(</span>z<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> dataList <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">generateList</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token parameter\\\">data</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> data<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> node <span class=\\\"token operator\\\">=</span> data<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> key <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> node<span class=\\\"token punctuation\\\">;</span>\\n    dataList<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> key<span class=\\\"token punctuation\\\">,</span> title<span class=\\\"token operator\\\">:</span> key <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>node<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function\\\">generateList</span><span class=\\\"token punctuation\\\">(</span>node<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token function\\\">generateList</span><span class=\\\"token punctuation\\\">(</span>gData<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">getParentKey</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">key<span class=\\\"token punctuation\\\">,</span> tree</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">let</span> parentKey<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> tree<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> node <span class=\\\"token operator\\\">=</span> tree<span class=\\\"token punctuation\\\">[</span>i<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>node<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>node<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">some</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">item</span> <span class=\\\"token operator\\\">=></span> item<span class=\\\"token punctuation\\\">.</span>key <span class=\\\"token operator\\\">===</span> key<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        parentKey <span class=\\\"token operator\\\">=</span> node<span class=\\\"token punctuation\\\">.</span>key<span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">getParentKey</span><span class=\\\"token punctuation\\\">(</span>key<span class=\\\"token punctuation\\\">,</span> node<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        parentKey <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">getParentKey</span><span class=\\\"token punctuation\\\">(</span>key<span class=\\\"token punctuation\\\">,</span> node<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">return</span> parentKey<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">SearchTree</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    expandedKeys<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    searchValue<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span>\\n    autoExpandParent<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function-variable function\\\">onExpand</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token parameter\\\">expandedKeys</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      expandedKeys<span class=\\\"token punctuation\\\">,</span>\\n      autoExpandParent<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function-variable function\\\">onChange</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token parameter\\\">e</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> value <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> e<span class=\\\"token punctuation\\\">.</span>target<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> expandedKeys <span class=\\\"token operator\\\">=</span> dataList\\n      <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">item</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>item<span class=\\\"token punctuation\\\">.</span>title<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">indexOf</span><span class=\\\"token punctuation\\\">(</span>value<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">getParentKey</span><span class=\\\"token punctuation\\\">(</span>item<span class=\\\"token punctuation\\\">.</span>key<span class=\\\"token punctuation\\\">,</span> gData<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">filter</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">item<span class=\\\"token punctuation\\\">,</span> i<span class=\\\"token punctuation\\\">,</span> self</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> item <span class=\\\"token operator\\\">&amp;&amp;</span> self<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">indexOf</span><span class=\\\"token punctuation\\\">(</span>item<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">===</span> i<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      expandedKeys<span class=\\\"token punctuation\\\">,</span>\\n      searchValue<span class=\\\"token operator\\\">:</span> value<span class=\\\"token punctuation\\\">,</span>\\n      autoExpandParent<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> searchValue<span class=\\\"token punctuation\\\">,</span> expandedKeys<span class=\\\"token punctuation\\\">,</span> autoExpandParent <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">loop</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token parameter\\\">data</span> <span class=\\\"token operator\\\">=></span>\\n      data<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">item</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">const</span> index <span class=\\\"token operator\\\">=</span> item<span class=\\\"token punctuation\\\">.</span>title<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">indexOf</span><span class=\\\"token punctuation\\\">(</span>searchValue<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">const</span> beforeStr <span class=\\\"token operator\\\">=</span> item<span class=\\\"token punctuation\\\">.</span>title<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">substr</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> index<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">const</span> afterStr <span class=\\\"token operator\\\">=</span> item<span class=\\\"token punctuation\\\">.</span>title<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">substr</span><span class=\\\"token punctuation\\\">(</span>index <span class=\\\"token operator\\\">+</span> searchValue<span class=\\\"token punctuation\\\">.</span>length<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">const</span> title <span class=\\\"token operator\\\">=</span>\\n          index <span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">-</span><span class=\\\"token number\\\">1</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token punctuation\\\">(</span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>span</span><span class=\\\"token punctuation\\\">></span></span>\\n              <span class=\\\"token punctuation\\\">{</span>beforeStr<span class=\\\"token punctuation\\\">}</span>\\n              <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>span</span> <span class=\\\"token attr-name\\\">className</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>site-tree-search-value<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">{</span>searchValue<span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>span</span><span class=\\\"token punctuation\\\">></span></span>\\n              <span class=\\\"token punctuation\\\">{</span>afterStr<span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>span</span><span class=\\\"token punctuation\\\">></span></span>\\n          <span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>span</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">{</span>item<span class=\\\"token punctuation\\\">.</span>title<span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>span</span><span class=\\\"token punctuation\\\">></span></span>\\n          <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>item<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> title<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token operator\\\">:</span> item<span class=\\\"token punctuation\\\">.</span>key<span class=\\\"token punctuation\\\">,</span> children<span class=\\\"token operator\\\">:</span> <span class=\\\"token function\\\">loop</span><span class=\\\"token punctuation\\\">(</span>item<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n          title<span class=\\\"token punctuation\\\">,</span>\\n          key<span class=\\\"token operator\\\">:</span> item<span class=\\\"token punctuation\\\">.</span>key<span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Search</span></span> <span class=\\\"token attr-name\\\">style</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> marginBottom<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">8</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">placeholder</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>Search<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">onChange</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onChange<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Tree</span></span>\\n          <span class=\\\"token attr-name\\\">onExpand</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onExpand<span class=\\\"token punctuation\\\">}</span></span>\\n          <span class=\\\"token attr-name\\\">expandedKeys</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>expandedKeys<span class=\\\"token punctuation\\\">}</span></span>\\n          <span class=\\\"token attr-name\\\">autoExpandParent</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>autoExpandParent<span class=\\\"token punctuation\\\">}</span></span>\\n          <span class=\\\"token attr-name\\\">treeData</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token function\\\">loop</span><span class=\\\"token punctuation\\\">(</span>gData<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span>\\n        <span class=\\\"token punctuation\\\">/></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">SearchTree</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span> mountNode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n  },\n  \"preview\": function bishengPluginReactPreviewer() {\n  var React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n  var ReactDOM = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\n\n  function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n  var _antd = __webpack_require__(/*! antd */ \"./site/antd.js\");\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  var Search = _antd.Input.Search;\n  var x = 3;\n  var y = 2;\n  var z = 1;\n  var gData = [];\n\n  var generateData = function generateData(_level, _preKey, _tns) {\n    var preKey = _preKey || '0';\n    var tns = _tns || gData;\n    var children = [];\n\n    for (var i = 0; i < x; i++) {\n      var key = \"\".concat(preKey, \"-\").concat(i);\n      tns.push({\n        title: key,\n        key: key\n      });\n\n      if (i < y) {\n        children.push(key);\n      }\n    }\n\n    if (_level < 0) {\n      return tns;\n    }\n\n    var level = _level - 1;\n    children.forEach(function (key, index) {\n      tns[index].children = [];\n      return generateData(level, key, tns[index].children);\n    });\n  };\n\n  generateData(z);\n  var dataList = [];\n\n  var generateList = function generateList(data) {\n    for (var i = 0; i < data.length; i++) {\n      var node = data[i];\n      var key = node.key;\n      dataList.push({\n        key: key,\n        title: key\n      });\n\n      if (node.children) {\n        generateList(node.children);\n      }\n    }\n  };\n\n  generateList(gData);\n\n  var getParentKey = function getParentKey(key, tree) {\n    var parentKey;\n\n    for (var i = 0; i < tree.length; i++) {\n      var node = tree[i];\n\n      if (node.children) {\n        if (node.children.some(function (item) {\n          return item.key === key;\n        })) {\n          parentKey = node.key;\n        } else if (getParentKey(key, node.children)) {\n          parentKey = getParentKey(key, node.children);\n        }\n      }\n    }\n\n    return parentKey;\n  };\n\n  var SearchTree = /*#__PURE__*/function (_React$Component) {\n    _inherits(SearchTree, _React$Component);\n\n    var _super = _createSuper(SearchTree);\n\n    function SearchTree() {\n      var _this;\n\n      _classCallCheck(this, SearchTree);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n\n      _defineProperty(_assertThisInitialized(_this), \"state\", {\n        expandedKeys: [],\n        searchValue: '',\n        autoExpandParent: true\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"onExpand\", function (expandedKeys) {\n        _this.setState({\n          expandedKeys: expandedKeys,\n          autoExpandParent: false\n        });\n      });\n\n      _defineProperty(_assertThisInitialized(_this), \"onChange\", function (e) {\n        var value = e.target.value;\n        var expandedKeys = dataList.map(function (item) {\n          if (item.title.indexOf(value) > -1) {\n            return getParentKey(item.key, gData);\n          }\n\n          return null;\n        }).filter(function (item, i, self) {\n          return item && self.indexOf(item) === i;\n        });\n\n        _this.setState({\n          expandedKeys: expandedKeys,\n          searchValue: value,\n          autoExpandParent: true\n        });\n      });\n\n      return _this;\n    }\n\n    _createClass(SearchTree, [{\n      key: \"render\",\n      value: function render() {\n        var _this$state = this.state,\n            searchValue = _this$state.searchValue,\n            expandedKeys = _this$state.expandedKeys,\n            autoExpandParent = _this$state.autoExpandParent;\n\n        var loop = function loop(data) {\n          return data.map(function (item) {\n            var index = item.title.indexOf(searchValue);\n            var beforeStr = item.title.substr(0, index);\n            var afterStr = item.title.substr(index + searchValue.length);\n            var title = index > -1 ? /*#__PURE__*/React.createElement(\"span\", null, beforeStr, /*#__PURE__*/React.createElement(\"span\", {\n              className: \"site-tree-search-value\"\n            }, searchValue), afterStr) : /*#__PURE__*/React.createElement(\"span\", null, item.title);\n\n            if (item.children) {\n              return {\n                title: title,\n                key: item.key,\n                children: loop(item.children)\n              };\n            }\n\n            return {\n              title: title,\n              key: item.key\n            };\n          });\n        };\n\n        return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Search, {\n          style: {\n            marginBottom: 8\n          },\n          placeholder: \"Search\",\n          onChange: this.onChange\n        }), /*#__PURE__*/React.createElement(_antd.Tree, {\n          onExpand: this.onExpand,\n          expandedKeys: expandedKeys,\n          autoExpandParent: autoExpandParent,\n          treeData: loop(gData)\n        }));\n      }\n    }]);\n\n    return SearchTree;\n  }(React.Component);\n\n  return /*#__PURE__*/React.createElement(SearchTree, null);\n},\n  \"style\": \".site-tree-search-value {\\n  color: #f50;\\n}\\n[data-theme=\\\"dark\\\"] .site-tree-search-value {\\n  color: #d84a1b;\\n}\\n\",\n  \"highlightedStyle\": \"<span class=\\\"token selector\\\"><span class=\\\"token class\\\">.site-tree-search-value</span> </span><span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">color</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token hexcode\\\">#f50</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\"\n};\n\n//# sourceURL=webpack:///./components/tree/demo/search.md?./node_modules/bisheng/lib/loaders/source-loader.js");

/***/ }),

/***/ "./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/switcher-icon.md":
/*!***************************************************************************************************!*\
  !*** ./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/switcher-icon.md ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = {\n  \"content\": {\n    \"zh-CN\": [\n      [\n        \"p\",\n        \"自定义展开/折叠图标。\"\n      ]\n    ],\n    \"en-US\": [\n      [\n        \"p\",\n        \"customize collapse/expand icon of tree node\"\n      ]\n    ]\n  },\n  \"meta\": {\n    \"order\": 8,\n    \"title\": {\n      \"zh-CN\": \"自定义展开/折叠图标\",\n      \"en-US\": \"Customize collapse/expand icon\"\n    },\n    \"filename\": \"components/tree/demo/switcher-icon.md\",\n    \"id\": \"components-tree-demo-switcher-icon\"\n  },\n  \"toc\": [\n    \"ul\",\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#zh-CN\",\n          \"title\": \"zh-CN\"\n        },\n        \"zh-CN\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#en-US\",\n          \"title\": \"en-US\"\n        },\n        \"en-US\"\n      ]\n    ]\n  ],\n  \"highlightedCode\": [\n    \"pre\",\n    {\n      \"lang\": \"jsx\",\n      \"highlighted\": \"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Tree <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'antd'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> DownOutlined <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'@ant-design/icons'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Demo</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  onSelect <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>selectedKeys<span class=\\\"token punctuation\\\">,</span> info<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'selected'</span><span class=\\\"token punctuation\\\">,</span> selectedKeys<span class=\\\"token punctuation\\\">,</span> info<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Tree</span>\\n        <span class=\\\"token attr-name\\\">showLine</span>\\n        <span class=\\\"token attr-name\\\">switcherIcon={&lt;DownOutlined</span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span>\\n        defaultExpandedKeys<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span>\\n        onSelect<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onSelect<span class=\\\"token punctuation\\\">}</span>\\n        treeData<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span>\\n          <span class=\\\"token punctuation\\\">{</span>\\n            title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'parent 1'</span><span class=\\\"token punctuation\\\">,</span>\\n            key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n            children<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n              <span class=\\\"token punctuation\\\">{</span>\\n                title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'parent 1-0'</span><span class=\\\"token punctuation\\\">,</span>\\n                key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n                children<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n                  <span class=\\\"token punctuation\\\">{</span>\\n                    title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span>\\n                    key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n                  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n                  <span class=\\\"token punctuation\\\">{</span>\\n                    title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span>\\n                    key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n                  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n                  <span class=\\\"token punctuation\\\">{</span>\\n                    title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span>\\n                    key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-0-2'</span><span class=\\\"token punctuation\\\">,</span>\\n                  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n              <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n              <span class=\\\"token punctuation\\\">{</span>\\n                title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'parent 1-1'</span><span class=\\\"token punctuation\\\">,</span>\\n                key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n                children<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n                  <span class=\\\"token punctuation\\\">{</span>\\n                    title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span>\\n                    key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-1-0'</span><span class=\\\"token punctuation\\\">,</span>\\n                  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n              <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n              <span class=\\\"token punctuation\\\">{</span>\\n                title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'parent 1-2'</span><span class=\\\"token punctuation\\\">,</span>\\n                key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-2'</span><span class=\\\"token punctuation\\\">,</span>\\n                children<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n                  <span class=\\\"token punctuation\\\">{</span>\\n                    title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span>\\n                    key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-2-0'</span><span class=\\\"token punctuation\\\">,</span>\\n                  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n                  <span class=\\\"token punctuation\\\">{</span>\\n                    title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span>\\n                    key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'0-0-2-1'</span><span class=\\\"token punctuation\\\">,</span>\\n                  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n              <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Demo</span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span> mountNode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n    }\n  ],\n  \"highlightedCodes\": {\n    \"jsx\": \"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Tree <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'antd'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> DownOutlined <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'@ant-design/icons'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Demo</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function-variable function\\\">onSelect</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">selectedKeys<span class=\\\"token punctuation\\\">,</span> info</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'selected'</span><span class=\\\"token punctuation\\\">,</span> selectedKeys<span class=\\\"token punctuation\\\">,</span> info<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token operator\\\">&lt;</span>Tree\\n        showLine\\n        switcherIcon<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">DownOutlined</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span>\\n        defaultExpandedKeys<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span>\\n        onSelect<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>onSelect<span class=\\\"token punctuation\\\">}</span>\\n        treeData<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span>\\n          <span class=\\\"token punctuation\\\">{</span>\\n            title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'parent 1'</span><span class=\\\"token punctuation\\\">,</span>\\n            key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n            children<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n              <span class=\\\"token punctuation\\\">{</span>\\n                title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'parent 1-0'</span><span class=\\\"token punctuation\\\">,</span>\\n                key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n                children<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n                  <span class=\\\"token punctuation\\\">{</span>\\n                    title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span>\\n                    key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0-0'</span><span class=\\\"token punctuation\\\">,</span>\\n                  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n                  <span class=\\\"token punctuation\\\">{</span>\\n                    title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span>\\n                    key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n                  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n                  <span class=\\\"token punctuation\\\">{</span>\\n                    title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span>\\n                    key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-0-2'</span><span class=\\\"token punctuation\\\">,</span>\\n                  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n              <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n              <span class=\\\"token punctuation\\\">{</span>\\n                title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'parent 1-1'</span><span class=\\\"token punctuation\\\">,</span>\\n                key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-1'</span><span class=\\\"token punctuation\\\">,</span>\\n                children<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n                  <span class=\\\"token punctuation\\\">{</span>\\n                    title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span>\\n                    key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-1-0'</span><span class=\\\"token punctuation\\\">,</span>\\n                  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n              <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n              <span class=\\\"token punctuation\\\">{</span>\\n                title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'parent 1-2'</span><span class=\\\"token punctuation\\\">,</span>\\n                key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-2'</span><span class=\\\"token punctuation\\\">,</span>\\n                children<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n                  <span class=\\\"token punctuation\\\">{</span>\\n                    title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span>\\n                    key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-2-0'</span><span class=\\\"token punctuation\\\">,</span>\\n                  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n                  <span class=\\\"token punctuation\\\">{</span>\\n                    title<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'leaf'</span><span class=\\\"token punctuation\\\">,</span>\\n                    key<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'0-0-2-1'</span><span class=\\\"token punctuation\\\">,</span>\\n                  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n              <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Demo</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span> mountNode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n  },\n  \"preview\": function bishengPluginReactPreviewer() {\n  var React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n  var ReactDOM = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\n\n  function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n  var _antd = __webpack_require__(/*! antd */ \"./site/antd.js\");\n\n  var _icons = __webpack_require__(/*! @ant-design/icons */ \"./node_modules/@ant-design/icons/es/index.js\");\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  var Demo = /*#__PURE__*/function (_React$Component) {\n    _inherits(Demo, _React$Component);\n\n    var _super = _createSuper(Demo);\n\n    function Demo() {\n      var _this;\n\n      _classCallCheck(this, Demo);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n\n      _defineProperty(_assertThisInitialized(_this), \"onSelect\", function (selectedKeys, info) {\n        console.log('selected', selectedKeys, info);\n      });\n\n      return _this;\n    }\n\n    _createClass(Demo, [{\n      key: \"render\",\n      value: function render() {\n        return /*#__PURE__*/React.createElement(_antd.Tree, {\n          showLine: true,\n          switcherIcon: /*#__PURE__*/React.createElement(_icons.DownOutlined, null),\n          defaultExpandedKeys: ['0-0-0'],\n          onSelect: this.onSelect,\n          treeData: [{\n            title: 'parent 1',\n            key: '0-0',\n            children: [{\n              title: 'parent 1-0',\n              key: '0-0-0',\n              children: [{\n                title: 'leaf',\n                key: '0-0-0-0'\n              }, {\n                title: 'leaf',\n                key: '0-0-0-1'\n              }, {\n                title: 'leaf',\n                key: '0-0-0-2'\n              }]\n            }, {\n              title: 'parent 1-1',\n              key: '0-0-1',\n              children: [{\n                title: 'leaf',\n                key: '0-0-1-0'\n              }]\n            }, {\n              title: 'parent 1-2',\n              key: '0-0-2',\n              children: [{\n                title: 'leaf',\n                key: '0-0-2-0'\n              }, {\n                title: 'leaf',\n                key: '0-0-2-1'\n              }]\n            }]\n          }]\n        });\n      }\n    }]);\n\n    return Demo;\n  }(React.Component);\n\n  return /*#__PURE__*/React.createElement(Demo, null);\n}\n};\n\n//# sourceURL=webpack:///./components/tree/demo/switcher-icon.md?./node_modules/bisheng/lib/loaders/source-loader.js");

/***/ }),

/***/ "./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/virtual-scroll.md":
/*!****************************************************************************************************!*\
  !*** ./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/virtual-scroll.md ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = {\n  \"content\": {\n    \"zh-CN\": [\n      [\n        \"p\",\n        \"使用 \",\n        [\n          \"code\",\n          \"height\"\n        ],\n        \" 属性则切换为虚拟滚动。\"\n      ]\n    ],\n    \"en-US\": [\n      [\n        \"p\",\n        \"Use virtual list through \",\n        [\n          \"code\",\n          \"height\"\n        ],\n        \" prop.\"\n      ]\n    ]\n  },\n  \"meta\": {\n    \"order\": 9,\n    \"title\": {\n      \"zh-CN\": \"虚拟滚动\",\n      \"en-US\": \"Virtual scroll\"\n    },\n    \"filename\": \"components/tree/demo/virtual-scroll.md\",\n    \"id\": \"components-tree-demo-virtual-scroll\"\n  },\n  \"toc\": [\n    \"ul\",\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#zh-CN\",\n          \"title\": \"zh-CN\"\n        },\n        \"zh-CN\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#en-US\",\n          \"title\": \"en-US\"\n        },\n        \"en-US\"\n      ]\n    ]\n  ],\n  \"highlightedCode\": [\n    \"pre\",\n    {\n      \"lang\": \"jsx\",\n      \"highlighted\": \"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Tree <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'antd'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">dig</span><span class=\\\"token punctuation\\\">(</span>path <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'0'</span><span class=\\\"token punctuation\\\">,</span> level <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> list <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">+</span><span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> key <span class=\\\"token operator\\\">=</span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>path<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">-</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>i<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> treeNode <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n      title<span class=\\\"token punctuation\\\">:</span> key<span class=\\\"token punctuation\\\">,</span>\\n      key<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>level <span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      treeNode<span class=\\\"token punctuation\\\">.</span>children <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">dig</span><span class=\\\"token punctuation\\\">(</span>key<span class=\\\"token punctuation\\\">,</span> level <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    list<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>treeNode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">return</span> list<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">const</span> treeData <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">dig</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Tree</span> <span class=\\\"token attr-name\\\">treeData</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>treeData<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">height</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">233</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">defaultExpandAll</span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span> mountNode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n    }\n  ],\n  \"highlightedCodes\": {\n    \"jsx\": \"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Tree <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'antd'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">dig</span><span class=\\\"token punctuation\\\">(</span>path <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'0'</span><span class=\\\"token punctuation\\\">,</span> level <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> list <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">let</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">+=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> key <span class=\\\"token operator\\\">=</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>path<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">-</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>i<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> treeNode <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n      title<span class=\\\"token operator\\\">:</span> key<span class=\\\"token punctuation\\\">,</span>\\n      key<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>level <span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      treeNode<span class=\\\"token punctuation\\\">.</span>children <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">dig</span><span class=\\\"token punctuation\\\">(</span>key<span class=\\\"token punctuation\\\">,</span> level <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    list<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>treeNode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">return</span> list<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">const</span> treeData <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">dig</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Tree</span></span> <span class=\\\"token attr-name\\\">treeData</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>treeData<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">height</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">233</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">defaultExpandAll</span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">,</span> mountNode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n  },\n  \"preview\": function bishengPluginReactPreviewer() {\n  var React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n  var ReactDOM = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\n\n  var _antd = __webpack_require__(/*! antd */ \"./site/antd.js\");\n\n  function dig() {\n    var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '0';\n    var level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n    var list = [];\n\n    for (var i = 0; i < 10; i += 1) {\n      var key = \"\".concat(path, \"-\").concat(i);\n      var treeNode = {\n        title: key,\n        key: key\n      };\n\n      if (level > 0) {\n        treeNode.children = dig(key, level - 1);\n      }\n\n      list.push(treeNode);\n    }\n\n    return list;\n  }\n\n  var treeData = dig();\n  return /*#__PURE__*/React.createElement(_antd.Tree, {\n    treeData: treeData,\n    height: 233,\n    defaultExpandAll: true\n  });\n}\n};\n\n//# sourceURL=webpack:///./components/tree/demo/virtual-scroll.md?./node_modules/bisheng/lib/loaders/source-loader.js");

/***/ }),

/***/ "./node_modules/bisheng/tmp/components-tree-demo.index.js":
/*!****************************************************************!*\
  !*** ./node_modules/bisheng/tmp/components-tree-demo.index.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = {\n    'basic-controlled': __webpack_require__(/*! ./node_modules/bisheng/lib/loaders/source-loader!./components/tree/demo/basic-controlled.md */ \"./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/basic-controlled.md\"),\n    'basic': __webpack_require__(/*! ./node_modules/bisheng/lib/loaders/source-loader!./components/tree/demo/basic.md */ \"./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/basic.md\"),\n    'big-data': __webpack_require__(/*! ./node_modules/bisheng/lib/loaders/source-loader!./components/tree/demo/big-data.md */ \"./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/big-data.md\"),\n    'customized-icon': __webpack_require__(/*! ./node_modules/bisheng/lib/loaders/source-loader!./components/tree/demo/customized-icon.md */ \"./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/customized-icon.md\"),\n    'directory': __webpack_require__(/*! ./node_modules/bisheng/lib/loaders/source-loader!./components/tree/demo/directory.md */ \"./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/directory.md\"),\n    'drag-debug': __webpack_require__(/*! ./node_modules/bisheng/lib/loaders/source-loader!./components/tree/demo/drag-debug.md */ \"./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/drag-debug.md\"),\n    'draggable': __webpack_require__(/*! ./node_modules/bisheng/lib/loaders/source-loader!./components/tree/demo/draggable.md */ \"./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/draggable.md\"),\n    'dynamic': __webpack_require__(/*! ./node_modules/bisheng/lib/loaders/source-loader!./components/tree/demo/dynamic.md */ \"./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/dynamic.md\"),\n    'line': __webpack_require__(/*! ./node_modules/bisheng/lib/loaders/source-loader!./components/tree/demo/line.md */ \"./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/line.md\"),\n    'search': __webpack_require__(/*! ./node_modules/bisheng/lib/loaders/source-loader!./components/tree/demo/search.md */ \"./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/search.md\"),\n    'switcher-icon': __webpack_require__(/*! ./node_modules/bisheng/lib/loaders/source-loader!./components/tree/demo/switcher-icon.md */ \"./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/switcher-icon.md\"),\n    'virtual-scroll': __webpack_require__(/*! ./node_modules/bisheng/lib/loaders/source-loader!./components/tree/demo/virtual-scroll.md */ \"./node_modules/bisheng/lib/loaders/source-loader.js!./components/tree/demo/virtual-scroll.md\"),\n}\n\n//# sourceURL=webpack:///./node_modules/bisheng/tmp/components-tree-demo.index.js?");

/***/ })

}]);