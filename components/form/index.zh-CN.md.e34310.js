(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["components/form/index.zh-CN.md"],{

/***/ "./node_modules/bisheng/lib/loaders/source-loader.js!./components/form/index.zh-CN.md":
/*!********************************************************************************************!*\
  !*** ./node_modules/bisheng/lib/loaders/source-loader.js!./components/form/index.zh-CN.md ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = {\n  \"content\": [\n    \"section\",\n    [\n      \"p\",\n      \"高性能表单控件，自带数据域管理。包含数据录入、校验以及对应样式。\"\n    ],\n    [\n      \"h2\",\n      \"何时使用\"\n    ],\n    [\n      \"ul\",\n      [\n        \"li\",\n        [\n          \"p\",\n          \"用于创建一个实体或收集信息。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"需要对输入的数据类型进行校验时。\"\n        ]\n      ]\n    ]\n  ],\n  \"meta\": {\n    \"category\": \"Components\",\n    \"subtitle\": \"表单\",\n    \"type\": \"数据录入\",\n    \"cols\": 1,\n    \"title\": \"Form\",\n    \"cover\": \"https://gw.alipayobjects.com/zos/alicdn/ORmcdeaoO/Form.svg\",\n    \"filename\": \"components/form/index.zh-CN.md\"\n  },\n  \"toc\": [\n    \"ul\",\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#何时使用\",\n          \"title\": \"何时使用\"\n        },\n        \"何时使用\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#API\",\n          \"title\": \"API\"\n        },\n        \"API\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#Form.Item\",\n          \"title\": \"Form.Item\"\n        },\n        \"Form.Item\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#Form.List\",\n          \"title\": \"Form.List\"\n        },\n        \"Form.List\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#operation\",\n          \"title\": \"operation\"\n        },\n        \"operation\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#Form.ErrorList\",\n          \"title\": \"Form.ErrorList\"\n        },\n        \"Form.ErrorList\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#Form.Provider\",\n          \"title\": \"Form.Provider\"\n        },\n        \"Form.Provider\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#从-v3-升级到-v4\",\n          \"title\": \"从 v3 升级到 v4\"\n        },\n        \"从 v3 升级到 v4\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#FAQ\",\n          \"title\": \"FAQ\"\n        },\n        \"FAQ\"\n      ]\n    ]\n  ],\n  \"api\": [\n    \"section\",\n    [\n      \"h2\",\n      \"API\"\n    ],\n    [\n      \"h3\",\n      \"Form\"\n    ],\n    [\n      \"table\",\n      [\n        \"thead\",\n        [\n          \"tr\",\n          [\n            \"th\",\n            \"参数\"\n          ],\n          [\n            \"th\",\n            \"说明\"\n          ],\n          [\n            \"th\",\n            \"类型\"\n          ],\n          [\n            \"th\",\n            \"默认值\"\n          ],\n          [\n            \"th\",\n            \"版本\"\n          ]\n        ]\n      ],\n      [\n        \"tbody\",\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"colon\"\n          ],\n          [\n            \"td\",\n            \"配置 Form.Item 的 \",\n            [\n              \"code\",\n              \"colon\"\n            ],\n            \" 的默认值。表示是否显示 label 后面的冒号 (只有在属性 layout 为 horizontal 时有效)\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            \"true\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"component\"\n          ],\n          [\n            \"td\",\n            \"设置 Form 渲染元素，为 \",\n            [\n              \"code\",\n              \"false\"\n            ],\n            \" 则不创建 DOM 节点\"\n          ],\n          [\n            \"td\",\n            \"ComponentType \",\n            \"|\",\n            \" false\"\n          ],\n          [\n            \"td\",\n            \"form\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"fields\"\n          ],\n          [\n            \"td\",\n            \"通过状态管理（如 redux）控制表单字段，如非强需求不推荐使用。查看\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"#components-form-demo-global-state\"\n              },\n              \"示例\"\n            ]\n          ],\n          [\n            \"td\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"#FieldData\"\n              },\n              \"FieldData\"\n            ],\n            \"[\",\n            \"]\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"form\"\n          ],\n          [\n            \"td\",\n            \"经 \",\n            [\n              \"code\",\n              \"Form.useForm()\"\n            ],\n            \" 创建的 form 控制实例，不提供时会自动创建\"\n          ],\n          [\n            \"td\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"#FormInstance\"\n              },\n              \"FormInstance\"\n            ]\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"initialValues\"\n          ],\n          [\n            \"td\",\n            \"表单默认值，只有初始化以及重置时生效\"\n          ],\n          [\n            \"td\",\n            \"object\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"labelAlign\"\n          ],\n          [\n            \"td\",\n            \"label 标签的文本对齐方式\"\n          ],\n          [\n            \"td\",\n            [\n              \"code\",\n              \"left\"\n            ],\n            \" \",\n            \"|\",\n            \" \",\n            [\n              \"code\",\n              \"right\"\n            ]\n          ],\n          [\n            \"td\",\n            [\n              \"code\",\n              \"right\"\n            ]\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"labelCol\"\n          ],\n          [\n            \"td\",\n            \"label 标签布局，同 \",\n            [\n              \"code\",\n              \"<Col>\"\n            ],\n            \" 组件，设置 \",\n            [\n              \"code\",\n              \"span\"\n            ],\n            \" \",\n            [\n              \"code\",\n              \"offset\"\n            ],\n            \" 值，如 \",\n            [\n              \"code\",\n              \"{span: 3, offset: 12}\"\n            ],\n            \" 或 \",\n            [\n              \"code\",\n              \"sm: {span: 3, offset: 12}\"\n            ]\n          ],\n          [\n            \"td\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"/components/grid/#Col\"\n              },\n              \"object\"\n            ]\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"layout\"\n          ],\n          [\n            \"td\",\n            \"表单布局\"\n          ],\n          [\n            \"td\",\n            [\n              \"code\",\n              \"horizontal\"\n            ],\n            \" \",\n            \"|\",\n            \" \",\n            [\n              \"code\",\n              \"vertical\"\n            ],\n            \" \",\n            \"|\",\n            \" \",\n            [\n              \"code\",\n              \"inline\"\n            ]\n          ],\n          [\n            \"td\",\n            [\n              \"code\",\n              \"horizontal\"\n            ]\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"name\"\n          ],\n          [\n            \"td\",\n            \"表单名称，会作为表单字段 \",\n            [\n              \"code\",\n              \"id\"\n            ],\n            \" 前缀使用\"\n          ],\n          [\n            \"td\",\n            \"string\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"preserve\"\n          ],\n          [\n            \"td\",\n            \"当字段被删除时保留字段值\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            \"true\"\n          ],\n          [\n            \"td\",\n            \"4.4.0\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"requiredMark\"\n          ],\n          [\n            \"td\",\n            \"必选样式，可以切换为必选或者可选展示样式。此为 Form 配置，Form.Item 无法单独配置\"\n          ],\n          [\n            \"td\",\n            \"boolean \",\n            \"|\",\n            \" \",\n            [\n              \"code\",\n              \"optional\"\n            ]\n          ],\n          [\n            \"td\",\n            \"true\"\n          ],\n          [\n            \"td\",\n            \"4.6.0\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"scrollToFirstError\"\n          ],\n          [\n            \"td\",\n            \"提交失败自动滚动到第一个错误字段\"\n          ],\n          [\n            \"td\",\n            \"boolean \",\n            \"|\",\n            \" \",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"https://github.com/stipsan/scroll-into-view-if-needed/tree/ece40bd9143f48caf4b99503425ecb16b0ad8249#options\"\n              },\n              \"Options\"\n            ]\n          ],\n          [\n            \"td\",\n            \"false\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"size\"\n          ],\n          [\n            \"td\",\n            \"设置字段组件的尺寸（仅限 antd 组件）\"\n          ],\n          [\n            \"td\",\n            [\n              \"code\",\n              \"small\"\n            ],\n            \" \",\n            \"|\",\n            \" \",\n            [\n              \"code\",\n              \"middle\"\n            ],\n            \" \",\n            \"|\",\n            \" \",\n            [\n              \"code\",\n              \"large\"\n            ]\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"validateMessages\"\n          ],\n          [\n            \"td\",\n            \"验证提示模板，说明\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"#validateMessages\"\n              },\n              \"见下\"\n            ]\n          ],\n          [\n            \"td\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"https://github.com/react-component/field-form/blob/master/src/utils/messages.ts\"\n              },\n              \"ValidateMessages\"\n            ]\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"validateTrigger\"\n          ],\n          [\n            \"td\",\n            \"统一设置字段触发验证的时机\"\n          ],\n          [\n            \"td\",\n            \"string \",\n            \"|\",\n            \" string\",\n            \"[\",\n            \"]\"\n          ],\n          [\n            \"td\",\n            [\n              \"code\",\n              \"onChange\"\n            ]\n          ],\n          [\n            \"td\",\n            \"4.3.0\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"wrapperCol\"\n          ],\n          [\n            \"td\",\n            \"需要为输入控件设置布局样式时，使用该属性，用法同 labelCol\"\n          ],\n          [\n            \"td\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"/components/grid/#Col\"\n              },\n              \"object\"\n            ]\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"onFieldsChange\"\n          ],\n          [\n            \"td\",\n            \"字段更新时触发回调事件\"\n          ],\n          [\n            \"td\",\n            \"function(changedFields, allFields)\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"onFinish\"\n          ],\n          [\n            \"td\",\n            \"提交表单且数据验证成功后回调事件\"\n          ],\n          [\n            \"td\",\n            \"function(values)\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"onFinishFailed\"\n          ],\n          [\n            \"td\",\n            \"提交表单且数据验证失败后回调事件\"\n          ],\n          [\n            \"td\",\n            \"function({ values, errorFields, outOfDate })\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"onValuesChange\"\n          ],\n          [\n            \"td\",\n            \"字段值更新时触发回调事件\"\n          ],\n          [\n            \"td\",\n            \"function(changedValues, allValues)\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ]\n      ]\n    ],\n    [\n      \"h3\",\n      \"validateMessages\"\n    ],\n    [\n      \"p\",\n      \"Form 为验证提供了\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://github.com/react-component/field-form/blob/master/src/utils/messages.ts\"\n        },\n        \"默认的错误提示信息\"\n      ],\n      \"，你可以通过配置 \",\n      [\n        \"code\",\n        \"validateMessages\"\n      ],\n      \" 属性，修改对应的提示模板。一种常见的使用方式，是配置国际化提示信息：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"<span class=\\\"token keyword\\\">const</span> validateMessages <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  required<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"'${name}' 是必选字段\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// ...</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Form</span> <span class=\\\"token attr-name\\\">validateMessages</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>validateMessages<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"const validateMessages = {\\n  required: \\\"'${name}' 是必选字段\\\",\\n  // ...\\n};\\n\\n<Form validateMessages={validateMessages} />;\"\n      ]\n    ],\n    [\n      \"p\",\n      \"此外，\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"/components/config-provider/\"\n        },\n        \"ConfigProvider\"\n      ],\n      \" 也提供了全局化配置方案，允许统一配置错误提示模板：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"<span class=\\\"token keyword\\\">const</span> validateMessages <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  required<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"'${name}' 是必选字段\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// ...</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>ConfigProvider</span> <span class=\\\"token attr-name\\\">form</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> validateMessages <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Form</span> <span class=\\\"token punctuation\\\">/></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>ConfigProvider</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"const validateMessages = {\\n  required: \\\"'${name}' 是必选字段\\\",\\n  // ...\\n};\\n\\n<ConfigProvider form={{ validateMessages }}>\\n  <Form />\\n</ConfigProvider>;\"\n      ]\n    ],\n    [\n      \"h2\",\n      \"Form.Item\"\n    ],\n    [\n      \"p\",\n      \"表单字段组件，用于数据双向绑定、校验、布局等。\"\n    ],\n    [\n      \"table\",\n      [\n        \"thead\",\n        [\n          \"tr\",\n          [\n            \"th\",\n            \"参数\"\n          ],\n          [\n            \"th\",\n            \"说明\"\n          ],\n          [\n            \"th\",\n            \"类型\"\n          ],\n          [\n            \"th\",\n            \"默认值\"\n          ],\n          [\n            \"th\",\n            \"版本\"\n          ]\n        ]\n      ],\n      [\n        \"tbody\",\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"colon\"\n          ],\n          [\n            \"td\",\n            \"配合 \",\n            [\n              \"code\",\n              \"label\"\n            ],\n            \" 属性使用，表示是否显示 \",\n            [\n              \"code\",\n              \"label\"\n            ],\n            \" 后面的冒号\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            \"true\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"dependencies\"\n          ],\n          [\n            \"td\",\n            \"设置依赖字段，说明\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"#dependencies\"\n              },\n              \"见下\"\n            ]\n          ],\n          [\n            \"td\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"#NamePath\"\n              },\n              \"NamePath\"\n            ],\n            \"[\",\n            \"]\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"extra\"\n          ],\n          [\n            \"td\",\n            \"额外的提示信息，和 \",\n            [\n              \"code\",\n              \"help\"\n            ],\n            \" 类似，当需要错误信息和提示文案同时出现时，可以使用这个。\"\n          ],\n          [\n            \"td\",\n            \"ReactNode\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"getValueFromEvent\"\n          ],\n          [\n            \"td\",\n            \"设置如何将 event 的值转换成字段值\"\n          ],\n          [\n            \"td\",\n            \"(..args: any\",\n            \"[\",\n            \"]) => any\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"getValueProps\"\n          ],\n          [\n            \"td\",\n            \"为子元素添加额外的属性\"\n          ],\n          [\n            \"td\",\n            \"(value: any) => any\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\",\n            \"4.2.0\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"hasFeedback\"\n          ],\n          [\n            \"td\",\n            \"配合 \",\n            [\n              \"code\",\n              \"validateStatus\"\n            ],\n            \" 属性使用，展示校验状态图标，建议只配合 Input 组件使用\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            \"false\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"help\"\n          ],\n          [\n            \"td\",\n            \"提示信息，如不设置，则会根据校验规则自动生成\"\n          ],\n          [\n            \"td\",\n            \"ReactNode\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"hidden\"\n          ],\n          [\n            \"td\",\n            \"是否隐藏字段（依然会收集和校验字段）\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            \"false\"\n          ],\n          [\n            \"td\",\n            \"4.4.0\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"htmlFor\"\n          ],\n          [\n            \"td\",\n            \"设置子元素 label \",\n            [\n              \"code\",\n              \"htmlFor\"\n            ],\n            \" 属性\"\n          ],\n          [\n            \"td\",\n            \"string\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"initialValue\"\n          ],\n          [\n            \"td\",\n            \"设置子元素默认值，如果与 Form 的 \",\n            [\n              \"code\",\n              \"initialValues\"\n            ],\n            \" 冲突则以 Form 为准\"\n          ],\n          [\n            \"td\",\n            \"string\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\",\n            \"4.2.0\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"label\"\n          ],\n          [\n            \"td\",\n            [\n              \"code\",\n              \"label\"\n            ],\n            \" 标签的文本\"\n          ],\n          [\n            \"td\",\n            \"ReactNode\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"labelAlign\"\n          ],\n          [\n            \"td\",\n            \"标签文本对齐方式\"\n          ],\n          [\n            \"td\",\n            [\n              \"code\",\n              \"left\"\n            ],\n            \" \",\n            \"|\",\n            \" \",\n            [\n              \"code\",\n              \"right\"\n            ]\n          ],\n          [\n            \"td\",\n            [\n              \"code\",\n              \"right\"\n            ]\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"labelCol\"\n          ],\n          [\n            \"td\",\n            [\n              \"code\",\n              \"label\"\n            ],\n            \" 标签布局，同 \",\n            [\n              \"code\",\n              \"<Col>\"\n            ],\n            \" 组件，设置 \",\n            [\n              \"code\",\n              \"span\"\n            ],\n            \" \",\n            [\n              \"code\",\n              \"offset\"\n            ],\n            \" 值，如 \",\n            [\n              \"code\",\n              \"{span: 3, offset: 12}\"\n            ],\n            \" 或 \",\n            [\n              \"code\",\n              \"sm: {span: 3, offset: 12}\"\n            ],\n            \"。你可以通过 Form 的 \",\n            [\n              \"code\",\n              \"labelCol\"\n            ],\n            \" 进行统一设置，，不会作用于嵌套 Item。当和 Form 同时设置时，以 Item 为准\"\n          ],\n          [\n            \"td\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"/components/grid/#Col\"\n              },\n              \"object\"\n            ]\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"messageVariables\"\n          ],\n          [\n            \"td\",\n            \"默认验证字段的信息\"\n          ],\n          [\n            \"td\",\n            \"Record\",\n            \"<\",\n            \"string, string>\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\",\n            \"4.7.0\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"name\"\n          ],\n          [\n            \"td\",\n            \"字段名，支持数组\"\n          ],\n          [\n            \"td\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"#NamePath\"\n              },\n              \"NamePath\"\n            ]\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"normalize\"\n          ],\n          [\n            \"td\",\n            \"组件获取值后进行转换，再放入 Form 中。不支持异步\"\n          ],\n          [\n            \"td\",\n            \"(value, prevValue, prevValues) => any\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"noStyle\"\n          ],\n          [\n            \"td\",\n            \"为 \",\n            [\n              \"code\",\n              \"true\"\n            ],\n            \" 时不带样式，作为纯字段控件使用\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            \"false\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"preserve\"\n          ],\n          [\n            \"td\",\n            \"当字段被删除时保留字段值\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            \"true\"\n          ],\n          [\n            \"td\",\n            \"4.4.0\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"required\"\n          ],\n          [\n            \"td\",\n            \"必填样式设置。如不设置，则会根据校验规则自动生成\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            \"false\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"rules\"\n          ],\n          [\n            \"td\",\n            \"校验规则，设置字段的校验逻辑。点击\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"#components-form-demo-basic\"\n              },\n              \"此处\"\n            ],\n            \"查看示例\"\n          ],\n          [\n            \"td\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"#Rule\"\n              },\n              \"Rule\"\n            ],\n            \"[\",\n            \"]\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"shouldUpdate\"\n          ],\n          [\n            \"td\",\n            \"自定义字段更新逻辑，说明\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"#shouldUpdate\"\n              },\n              \"见下\"\n            ]\n          ],\n          [\n            \"td\",\n            \"boolean \",\n            \"|\",\n            \" (prevValue, curValue) => boolean\"\n          ],\n          [\n            \"td\",\n            \"false\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"tooltip\"\n          ],\n          [\n            \"td\",\n            \"配置提示信息\"\n          ],\n          [\n            \"td\",\n            \"ReactNode \",\n            \"|\",\n            \" \",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"/components/tooltip#API\"\n              },\n              \"TooltipProps & { icon: ReactNode }\"\n            ]\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\",\n            \"4.7.0\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"trigger\"\n          ],\n          [\n            \"td\",\n            \"设置收集字段值变更的时机。点击\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"#components-form-demo-customized-form-controls\"\n              },\n              \"此处\"\n            ],\n            \"查看示例\"\n          ],\n          [\n            \"td\",\n            \"string\"\n          ],\n          [\n            \"td\",\n            [\n              \"code\",\n              \"onChange\"\n            ]\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"validateFirst\"\n          ],\n          [\n            \"td\",\n            \"当某一规则校验不通过时，是否停止剩下的规则的校验。设置 \",\n            [\n              \"code\",\n              \"parallel\"\n            ],\n            \" 时会并行校验\"\n          ],\n          [\n            \"td\",\n            \"boolean \",\n            \"|\",\n            \" \",\n            [\n              \"code\",\n              \"parallel\"\n            ]\n          ],\n          [\n            \"td\",\n            \"false\"\n          ],\n          [\n            \"td\",\n            [\n              \"code\",\n              \"parallel\"\n            ],\n            \": 4.5.0\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"validateStatus\"\n          ],\n          [\n            \"td\",\n            \"校验状态，如不设置，则会根据校验规则自动生成，可选：'success' 'warning' 'error' 'validating'\"\n          ],\n          [\n            \"td\",\n            \"string\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"validateTrigger\"\n          ],\n          [\n            \"td\",\n            \"设置字段校验的时机\"\n          ],\n          [\n            \"td\",\n            \"string \",\n            \"|\",\n            \" string\",\n            \"[\",\n            \"]\"\n          ],\n          [\n            \"td\",\n            [\n              \"code\",\n              \"onChange\"\n            ]\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"valuePropName\"\n          ],\n          [\n            \"td\",\n            \"子节点的值的属性，如 Switch 的是 'checked'。该属性为 \",\n            [\n              \"code\",\n              \"getValueProps\"\n            ],\n            \" 的封装，自定义 \",\n            [\n              \"code\",\n              \"getValueProps\"\n            ],\n            \" 后会失效\"\n          ],\n          [\n            \"td\",\n            \"string\"\n          ],\n          [\n            \"td\",\n            [\n              \"code\",\n              \"value\"\n            ]\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"wrapperCol\"\n          ],\n          [\n            \"td\",\n            \"需要为输入控件设置布局样式时，使用该属性，用法同 \",\n            [\n              \"code\",\n              \"labelCol\"\n            ],\n            \"。你可以通过 Form 的 \",\n            [\n              \"code\",\n              \"wrapperCol\"\n            ],\n            \" 进行统一设置，不会作用于嵌套 Item。当和 Form 同时设置时，以 Item 为准\"\n          ],\n          [\n            \"td\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"/components/grid/#Col\"\n              },\n              \"object\"\n            ]\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ]\n      ]\n    ],\n    [\n      \"p\",\n      \"被设置了 \",\n      [\n        \"code\",\n        \"name\"\n      ],\n      \" 属性的 \",\n      [\n        \"code\",\n        \"Form.Item\"\n      ],\n      \" 包装的控件，表单控件会自动添加 \",\n      [\n        \"code\",\n        \"value\"\n      ],\n      \"（或 \",\n      [\n        \"code\",\n        \"valuePropName\"\n      ],\n      \" 指定的其他属性） \",\n      [\n        \"code\",\n        \"onChange\"\n      ],\n      \"（或 \",\n      [\n        \"code\",\n        \"trigger\"\n      ],\n      \" 指定的其他属性），数据同步将被 Form 接管，这会导致以下结果：\"\n    ],\n    [\n      \"ol\",\n      [\n        \"li\",\n        [\n          \"p\",\n          \"你\",\n          [\n            \"strong\",\n            \"不再需要也不应该\"\n          ],\n          \"用 \",\n          [\n            \"code\",\n            \"onChange\"\n          ],\n          \" 来做数据收集同步（你可以使用 Form 的 \",\n          [\n            \"code\",\n            \"onValuesChange\"\n          ],\n          \"），但还是可以继续监听 \",\n          [\n            \"code\",\n            \"onChange\"\n          ],\n          \" 事件。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"你不能用控件的 \",\n          [\n            \"code\",\n            \"value\"\n          ],\n          \" 或 \",\n          [\n            \"code\",\n            \"defaultValue\"\n          ],\n          \" 等属性来设置表单域的值，默认值可以用 Form 里的 \",\n          [\n            \"code\",\n            \"initialValues\"\n          ],\n          \" 来设置。注意 \",\n          [\n            \"code\",\n            \"initialValues\"\n          ],\n          \" 不能被 \",\n          [\n            \"code\",\n            \"setState\"\n          ],\n          \" 动态更新，你需要用 \",\n          [\n            \"code\",\n            \"setFieldsValue\"\n          ],\n          \" 来更新。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"你不应该用 \",\n          [\n            \"code\",\n            \"setState\"\n          ],\n          \"，可以使用 \",\n          [\n            \"code\",\n            \"form.setFieldsValue\"\n          ],\n          \" 来动态改变表单值。\"\n        ]\n      ]\n    ],\n    [\n      \"h3\",\n      \"dependencies\"\n    ],\n    [\n      \"p\",\n      \"当字段间存在依赖关系时使用。如果一个字段设置了 \",\n      [\n        \"code\",\n        \"dependencies\"\n      ],\n      \" 属性。那么它所依赖的字段更新时，该字段将自动触发更新与校验。一种常见的场景，就是注册用户表单的“密码”与“确认密码”字段。“确认密码”校验依赖于“密码”字段，设置 \",\n      [\n        \"code\",\n        \"dependencies\"\n      ],\n      \" 后，“密码”字段更新会重新触发“校验密码”的校验逻辑。你可以参考\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"#components-form-demo-register\"\n        },\n        \"具体例子\"\n      ],\n      \"。\"\n    ],\n    [\n      \"p\",\n      [\n        \"code\",\n        \"dependencies\"\n      ],\n      \" 不应和 \",\n      [\n        \"code\",\n        \"shouldUpdate\"\n      ],\n      \" 一起使用，因为这可能带来更新逻辑的混乱。\"\n    ],\n    [\n      \"p\",\n      \"从 \",\n      [\n        \"code\",\n        \"4.5.0\"\n      ],\n      \" 版本开始，\",\n      [\n        \"code\",\n        \"dependencies\"\n      ],\n      \" 支持使用 render props 类型 children 的 \",\n      [\n        \"code\",\n        \"Form.Item\"\n      ],\n      \"。\"\n    ],\n    [\n      \"h3\",\n      \"shouldUpdate\"\n    ],\n    [\n      \"p\",\n      \"Form 通过增量更新方式，只更新被修改的字段相关组件以达到性能优化目的。大部分场景下，你只需要编写代码或者与 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"#dependencies\"\n        },\n        [\n          \"code\",\n          \"dependencies\"\n        ]\n      ],\n      \" 属性配合校验即可。而在某些特定场景，例如修改某个字段值后出现新的字段选项、或者纯粹希望表单任意变化都对某一个区域进行渲染。你可以通过 \",\n      [\n        \"code\",\n        \"shouldUpdate\"\n      ],\n      \" 修改 Form.Item 的更新逻辑。\"\n    ],\n    [\n      \"p\",\n      \"当 \",\n      [\n        \"code\",\n        \"shouldUpdate\"\n      ],\n      \" 为 \",\n      [\n        \"code\",\n        \"true\"\n      ],\n      \" 时，Form 的任意变化都会使该 Form.Item 重新渲染。这对于自定义渲染一些区域十分有帮助：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Form.Item</span> <span class=\\\"token attr-name\\\">shouldUpdate</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>pre</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">{</span>JSON<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">stringify</span><span class=\\\"token punctuation\\\">(</span>form<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getFieldsValue</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>pre</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Form.Item</span><span class=\\\"token punctuation\\\">></span></span>\"\n      },\n      [\n        \"code\",\n        \"<Form.Item shouldUpdate>\\n  {() => {\\n    return <pre>{JSON.stringify(form.getFieldsValue(), null, 2)}</pre>;\\n  }}\\n</Form.Item>\"\n      ]\n    ],\n    [\n      \"p\",\n      \"你可以参考\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"#components-form-demo-horizontal-login\"\n        },\n        \"示例\"\n      ],\n      \"查看具体使用场景。\"\n    ],\n    [\n      \"p\",\n      \"当 \",\n      [\n        \"code\",\n        \"shouldUpdate\"\n      ],\n      \" 为方法时，表单的每次数值更新都会调用该方法，提供原先的值与当前的值以供你比较是否需要更新。这对于是否根据值来渲染额外字段十分有帮助：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Form.Item</span> <span class=\\\"token attr-name\\\">shouldUpdate</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span>prevValues<span class=\\\"token punctuation\\\">,</span> curValues<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> prevValues<span class=\\\"token punctuation\\\">.</span>additional <span class=\\\"token operator\\\">!==</span> curValues<span class=\\\"token punctuation\\\">.</span>additional<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Form.Item</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>other<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Input</span> <span class=\\\"token punctuation\\\">/></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Form.Item</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Form.Item</span><span class=\\\"token punctuation\\\">></span></span>\"\n      },\n      [\n        \"code\",\n        \"<Form.Item shouldUpdate={(prevValues, curValues) => prevValues.additional !== curValues.additional}>\\n  {() => {\\n    return (\\n      <Form.Item name=\\\"other\\\">\\n        <Input />\\n      </Form.Item>\\n    );\\n  }}\\n</Form.Item>\"\n      ]\n    ],\n    [\n      \"p\",\n      \"你可以参考\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"#components-form-demo-control-hooks\"\n        },\n        \"示例\"\n      ],\n      \"查看具体使用场景。\"\n    ],\n    [\n      \"h3\",\n      \"messageVariables\"\n    ],\n    [\n      \"p\",\n      \"你可以通过 \",\n      [\n        \"code\",\n        \"messageVariables\"\n      ],\n      \" 修改 Form.Item 的默认验证信息。\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Form</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Form.Item</span> <span class=\\\"token attr-name\\\">messageVariables</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> another<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'good'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">label</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>user<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Input</span> <span class=\\\"token punctuation\\\">/></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Form.Item</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Form.Item</span> <span class=\\\"token attr-name\\\">messageVariables</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> label<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'good'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">label={&lt;span</span><span class=\\\"token punctuation\\\">></span></span>user<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>span</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Input</span> <span class=\\\"token punctuation\\\">/></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Form.Item</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Form</span><span class=\\\"token punctuation\\\">></span></span>\"\n      },\n      [\n        \"code\",\n        \"<Form>\\n  <Form.Item messageVariables={{ another: 'good' }} label=\\\"user\\\">\\n    <Input />\\n  </Form.Item>\\n  <Form.Item messageVariables={{ label: 'good' }} label={<span>user</span>}>\\n    <Input />\\n  </Form.Item>\\n</Form>\"\n      ]\n    ],\n    [\n      \"h2\",\n      \"Form.List\"\n    ],\n    [\n      \"p\",\n      \"为字段提供数组化管理。\"\n    ],\n    [\n      \"table\",\n      [\n        \"thead\",\n        [\n          \"tr\",\n          [\n            \"th\",\n            \"参数\"\n          ],\n          [\n            \"th\",\n            \"说明\"\n          ],\n          [\n            \"th\",\n            \"类型\"\n          ],\n          [\n            \"th\",\n            \"默认值\"\n          ],\n          [\n            \"th\",\n            \"版本\"\n          ]\n        ]\n      ],\n      [\n        \"tbody\",\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"children\"\n          ],\n          [\n            \"td\",\n            \"渲染函数\"\n          ],\n          [\n            \"td\",\n            \"(fields: Field\",\n            \"[\",\n            \"], operation: { add, remove, move }, meta: { errors }) => React.ReactNode\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"initialValue\"\n          ],\n          [\n            \"td\",\n            \"设置子元素默认值，如果与 Form 的 \",\n            [\n              \"code\",\n              \"initialValues\"\n            ],\n            \" 冲突则以 Form 为准\"\n          ],\n          [\n            \"td\",\n            \"any\",\n            \"[\",\n            \"]\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\",\n            \"4.9.0\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"name\"\n          ],\n          [\n            \"td\",\n            \"字段名，支持数组\"\n          ],\n          [\n            \"td\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"#NamePath\"\n              },\n              \"NamePath\"\n            ]\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"rules\"\n          ],\n          [\n            \"td\",\n            \"校验规则，仅支持自定义规则。需要配合 \",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"#Form.ErrorList\"\n              },\n              \"ErrorList\"\n            ],\n            \" 一同使用。\"\n          ],\n          [\n            \"td\",\n            \"{ validator, message }\",\n            \"[\",\n            \"]\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\",\n            \"4.7.0\"\n          ]\n        ]\n      ]\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"tsx\",\n        \"highlighted\": \"<span class=\\\"token operator\\\">&lt;</span>Form<span class=\\\"token punctuation\\\">.</span>List<span class=\\\"token operator\\\">></span>\\n  {fields <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span>\\n    fields<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span>field <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token operator\\\">&lt;</span>Form<span class=\\\"token punctuation\\\">.</span>Item {<span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span>field}<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>Input <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Form<span class=\\\"token punctuation\\\">.</span>Item<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n  }\\n<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Form<span class=\\\"token punctuation\\\">.</span>List<span class=\\\"token operator\\\">></span>\"\n      },\n      [\n        \"code\",\n        \"<Form.List>\\n  {fields =>\\n    fields.map(field => (\\n      <Form.Item {...field}>\\n        <Input />\\n      </Form.Item>\\n    ))\\n  }\\n</Form.List>\"\n      ]\n    ],\n    [\n      \"p\",\n      \"注意：Form.List 下的字段不应该配置 \",\n      [\n        \"code\",\n        \"initialValue\"\n      ],\n      \"，你始终应该通过 Form.List 的 \",\n      [\n        \"code\",\n        \"initialValue\"\n      ],\n      \" 或者 Form 的 \",\n      [\n        \"code\",\n        \"initialValues\"\n      ],\n      \" 来配置。\"\n    ],\n    [\n      \"h2\",\n      \"operation\"\n    ],\n    [\n      \"p\",\n      \"Form.List 渲染表单相关操作函数。\"\n    ],\n    [\n      \"table\",\n      [\n        \"thead\",\n        [\n          \"tr\",\n          [\n            \"th\",\n            \"参数\"\n          ],\n          [\n            \"th\",\n            \"说明\"\n          ],\n          [\n            \"th\",\n            \"类型\"\n          ],\n          [\n            \"th\",\n            \"默认值\"\n          ],\n          [\n            \"th\",\n            \"版本\"\n          ]\n        ]\n      ],\n      [\n        \"tbody\",\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"add\"\n          ],\n          [\n            \"td\",\n            \"新增表单项\"\n          ],\n          [\n            \"td\",\n            \"(defaultValue?: any, insertIndex?: number) => void\"\n          ],\n          [\n            \"td\",\n            \"insertIndex\"\n          ],\n          [\n            \"td\",\n            \"4.6.0\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"move\"\n          ],\n          [\n            \"td\",\n            \"移动表单项\"\n          ],\n          [\n            \"td\",\n            \"(from: number, to: number) => void\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"remove\"\n          ],\n          [\n            \"td\",\n            \"删除表单项\"\n          ],\n          [\n            \"td\",\n            \"(index: number \",\n            \"|\",\n            \" number\",\n            \"[\",\n            \"]) => void\"\n          ],\n          [\n            \"td\",\n            \"number\",\n            \"[\",\n            \"]\"\n          ],\n          [\n            \"td\",\n            \"4.5.0\"\n          ]\n        ]\n      ]\n    ],\n    [\n      \"h2\",\n      \"Form.ErrorList\"\n    ],\n    [\n      \"p\",\n      \"4.7.0 新增。错误展示组件，仅限配合 Form.List 的 rules 一同使用。参考\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"#components-form-demo-dynamic-form-item\"\n        },\n        \"示例\"\n      ],\n      \"。\"\n    ],\n    [\n      \"table\",\n      [\n        \"thead\",\n        [\n          \"tr\",\n          [\n            \"th\",\n            \"参数\"\n          ],\n          [\n            \"th\",\n            \"说明\"\n          ],\n          [\n            \"th\",\n            \"类型\"\n          ],\n          [\n            \"th\",\n            \"默认值\"\n          ]\n        ]\n      ],\n      [\n        \"tbody\",\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"errors\"\n          ],\n          [\n            \"td\",\n            \"错误列表\"\n          ],\n          [\n            \"td\",\n            \"ReactNode\",\n            \"[\",\n            \"]\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ]\n        ]\n      ]\n    ],\n    [\n      \"h2\",\n      \"Form.Provider\"\n    ],\n    [\n      \"p\",\n      \"提供表单间联动功能，其下设置 \",\n      [\n        \"code\",\n        \"name\"\n      ],\n      \" 的 Form 更新时，会自动触发对应事件。查看\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"#components-form-demo-form-context\"\n        },\n        \"示例\"\n      ],\n      \"。\"\n    ],\n    [\n      \"table\",\n      [\n        \"thead\",\n        [\n          \"tr\",\n          [\n            \"th\",\n            \"参数\"\n          ],\n          [\n            \"th\",\n            \"说明\"\n          ],\n          [\n            \"th\",\n            \"类型\"\n          ],\n          [\n            \"th\",\n            \"默认值\"\n          ]\n        ]\n      ],\n      [\n        \"tbody\",\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"onFormChange\"\n          ],\n          [\n            \"td\",\n            \"子表单字段更新时触发\"\n          ],\n          [\n            \"td\",\n            \"function(formName: string, info: { changedFields, forms })\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"onFormFinish\"\n          ],\n          [\n            \"td\",\n            \"子表单提交时触发\"\n          ],\n          [\n            \"td\",\n            \"function(formName: string, info: { values, forms })\"\n          ],\n          [\n            \"td\",\n            \"-\"\n          ]\n        ]\n      ]\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"<span class=\\\"token operator\\\">&lt;</span>Form<span class=\\\"token punctuation\\\">.</span>Provider\\n  onFormFinish<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>name <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>name <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'form1'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Do something...</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Form</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>form1<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token operator\\\">...</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Form</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Form</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>form2<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token operator\\\">...</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Form</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Form.Provider</span><span class=\\\"token punctuation\\\">></span></span>\"\n      },\n      [\n        \"code\",\n        \"<Form.Provider\\n  onFormFinish={name => {\\n    if (name === 'form1') {\\n      // Do something...\\n    }\\n  }}\\n>\\n  <Form name=\\\"form1\\\">...</Form>\\n  <Form name=\\\"form2\\\">...</Form>\\n</Form.Provider>\"\n      ]\n    ],\n    [\n      \"h3\",\n      \"FormInstance\"\n    ],\n    [\n      \"table\",\n      [\n        \"thead\",\n        [\n          \"tr\",\n          [\n            \"th\",\n            \"名称\"\n          ],\n          [\n            \"th\",\n            \"说明\"\n          ],\n          [\n            \"th\",\n            \"类型\"\n          ],\n          [\n            \"th\",\n            \"版本\"\n          ]\n        ]\n      ],\n      [\n        \"tbody\",\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"getFieldError\"\n          ],\n          [\n            \"td\",\n            \"获取对应字段名的错误信息\"\n          ],\n          [\n            \"td\",\n            \"(name: \",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"#NamePath\"\n              },\n              \"NamePath\"\n            ],\n            \") => string\",\n            \"[\",\n            \"]\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"getFieldInstance\"\n          ],\n          [\n            \"td\",\n            \"获取对应字段实例\"\n          ],\n          [\n            \"td\",\n            \"(name: \",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"#NamePath\"\n              },\n              \"NamePath\"\n            ],\n            \") => any\"\n          ],\n          [\n            \"td\",\n            \"4.4.0\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"getFieldsError\"\n          ],\n          [\n            \"td\",\n            \"获取一组字段名对应的错误信息，返回为数组形式\"\n          ],\n          [\n            \"td\",\n            \"(nameList?: \",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"#NamePath\"\n              },\n              \"NamePath\"\n            ],\n            \"[\",\n            \"]) => FieldError\",\n            \"[\",\n            \"]\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"getFieldsValue\"\n          ],\n          [\n            \"td\",\n            \"获取一组字段名对应的值，会按照对应结构返回。默认返回现存字段值，当调用 \",\n            [\n              \"code\",\n              \"getFieldsValue(true)\"\n            ],\n            \" 时返回所有值\"\n          ],\n          [\n            \"td\",\n            \"(nameList?: \",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"#NamePath\"\n              },\n              \"NamePath\"\n            ],\n            \"[\",\n            \"], filterFunc?: (meta: { touched: boolean, validating: boolean }) => boolean) => any\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"getFieldValue\"\n          ],\n          [\n            \"td\",\n            \"获取对应字段名的值\"\n          ],\n          [\n            \"td\",\n            \"(name: \",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"#NamePath\"\n              },\n              \"NamePath\"\n            ],\n            \") => any\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"isFieldsTouched\"\n          ],\n          [\n            \"td\",\n            \"检查一组字段是否被用户操作过，\",\n            [\n              \"code\",\n              \"allTouched\"\n            ],\n            \" 为 \",\n            [\n              \"code\",\n              \"true\"\n            ],\n            \" 时检查是否所有字段都被操作过\"\n          ],\n          [\n            \"td\",\n            \"(nameList?: \",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"#NamePath\"\n              },\n              \"NamePath\"\n            ],\n            \"[\",\n            \"], allTouched?: boolean) => boolean\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"isFieldTouched\"\n          ],\n          [\n            \"td\",\n            \"检查对应字段是否被用户操作过\"\n          ],\n          [\n            \"td\",\n            \"(name: \",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"#NamePath\"\n              },\n              \"NamePath\"\n            ],\n            \") => boolean\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"isFieldValidating\"\n          ],\n          [\n            \"td\",\n            \"检查对应字段是否正在校验\"\n          ],\n          [\n            \"td\",\n            \"(name: \",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"#NamePath\"\n              },\n              \"NamePath\"\n            ],\n            \") => boolean\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"resetFields\"\n          ],\n          [\n            \"td\",\n            \"重置一组字段到 \",\n            [\n              \"code\",\n              \"initialValues\"\n            ]\n          ],\n          [\n            \"td\",\n            \"(fields?: \",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"#FieldData\"\n              },\n              \"FieldData\"\n            ],\n            \"[\",\n            \"]) => void\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"scrollToField\"\n          ],\n          [\n            \"td\",\n            \"滚动到对应字段位置\"\n          ],\n          [\n            \"td\",\n            \"(name: \",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"#NamePath\"\n              },\n              \"NamePath\"\n            ],\n            \", options: \",\n            \"[\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"https://github.com/stipsan/scroll-into-view-if-needed/tree/ece40bd9143f48caf4b99503425ecb16b0ad8249#options\"\n              },\n              \"ScrollOptions\"\n            ],\n            \"]) => void\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"setFields\"\n          ],\n          [\n            \"td\",\n            \"设置一组字段状态\"\n          ],\n          [\n            \"td\",\n            \"(fields: \",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"#FieldData\"\n              },\n              \"FieldData\"\n            ],\n            \"[\",\n            \"]) => void\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"setFieldsValue\"\n          ],\n          [\n            \"td\",\n            \"设置表单的值（该值将直接传入 form store 中。如果你不希望传入对象被修改，请克隆后传入）\"\n          ],\n          [\n            \"td\",\n            \"(values) => void\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"submit\"\n          ],\n          [\n            \"td\",\n            \"提交表单，与点击 \",\n            [\n              \"code\",\n              \"submit\"\n            ],\n            \" 按钮效果相同\"\n          ],\n          [\n            \"td\",\n            \"() => void\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"validateFields\"\n          ],\n          [\n            \"td\",\n            \"触发表单验证\"\n          ],\n          [\n            \"td\",\n            \"(nameList?: \",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"#NamePath\"\n              },\n              \"NamePath\"\n            ],\n            \"[\",\n            \"]) => Promise\"\n          ],\n          [\n            \"td\"\n          ]\n        ]\n      ]\n    ],\n    [\n      \"h4\",\n      \"validateFields 返回示例\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"<span class=\\\"token function\\\">validateFields</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>values <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/*\\n  values:\\n    {\\n      username: 'username',\\n      password: 'password',\\n    }\\n  */</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">catch</span><span class=\\\"token punctuation\\\">(</span>errorInfo <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/*\\n    errorInfo:\\n      {\\n        values: {\\n          username: 'username',\\n          password: 'password',\\n        },\\n        errorFields: [\\n          { name: ['password'], errors: ['Please input your Password!'] },\\n        ],\\n        outOfDate: false,\\n      }\\n    */</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"validateFields()\\n  .then(values => {\\n    /*\\n  values:\\n    {\\n      username: 'username',\\n      password: 'password',\\n    }\\n  */\\n  })\\n  .catch(errorInfo => {\\n    /*\\n    errorInfo:\\n      {\\n        values: {\\n          username: 'username',\\n          password: 'password',\\n        },\\n        errorFields: [\\n          { name: ['password'], errors: ['Please input your Password!'] },\\n        ],\\n        outOfDate: false,\\n      }\\n    */\\n  });\"\n      ]\n    ],\n    [\n      \"h3\",\n      \"Interface\"\n    ],\n    [\n      \"h4\",\n      \"NamePath\"\n    ],\n    [\n      \"p\",\n      [\n        \"code\",\n        \"string | number | (string | number)[]\"\n      ]\n    ],\n    [\n      \"h4\",\n      \"FieldData\"\n    ],\n    [\n      \"table\",\n      [\n        \"thead\",\n        [\n          \"tr\",\n          [\n            \"th\",\n            \"名称\"\n          ],\n          [\n            \"th\",\n            \"说明\"\n          ],\n          [\n            \"th\",\n            \"类型\"\n          ]\n        ]\n      ],\n      [\n        \"tbody\",\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"errors\"\n          ],\n          [\n            \"td\",\n            \"错误信息\"\n          ],\n          [\n            \"td\",\n            \"string\",\n            \"[\",\n            \"]\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"name\"\n          ],\n          [\n            \"td\",\n            \"字段名称\"\n          ],\n          [\n            \"td\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"#NamePath\"\n              },\n              \"NamePath\"\n            ],\n            \"[\",\n            \"]\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"touched\"\n          ],\n          [\n            \"td\",\n            \"是否被用户操作过\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"validating\"\n          ],\n          [\n            \"td\",\n            \"是否正在校验\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"value\"\n          ],\n          [\n            \"td\",\n            \"字段对应值\"\n          ],\n          [\n            \"td\",\n            \"any\"\n          ]\n        ]\n      ]\n    ],\n    [\n      \"h4\",\n      \"Rule\"\n    ],\n    [\n      \"p\",\n      \"Rule 支持接收 object 进行配置，也支持 function 来动态获取 form 的数据：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"tsx\",\n        \"highlighted\": \"type Rule <span class=\\\"token operator\\\">=</span> RuleConfig | <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>form<span class=\\\"token punctuation\\\">:</span> FormInstance<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> RuleConfig<span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"type Rule = RuleConfig | ((form: FormInstance) => RuleConfig);\"\n      ]\n    ],\n    [\n      \"table\",\n      [\n        \"thead\",\n        [\n          \"tr\",\n          [\n            \"th\",\n            \"名称\"\n          ],\n          [\n            \"th\",\n            \"说明\"\n          ],\n          [\n            \"th\",\n            \"类型\"\n          ],\n          [\n            \"th\",\n            \"版本\"\n          ]\n        ]\n      ],\n      [\n        \"tbody\",\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"defaultField\"\n          ],\n          [\n            \"td\",\n            \"仅在 \",\n            [\n              \"code\",\n              \"type\"\n            ],\n            \" 为 \",\n            [\n              \"code\",\n              \"array\"\n            ],\n            \" 类型时有效，用于指定数组元素的校验规则\"\n          ],\n          [\n            \"td\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"#Rule\"\n              },\n              \"rule\"\n            ]\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"enum\"\n          ],\n          [\n            \"td\",\n            \"是否匹配枚举中的值（需要将 \",\n            [\n              \"code\",\n              \"type\"\n            ],\n            \" 设置为 \",\n            [\n              \"code\",\n              \"enum\"\n            ],\n            \"）\"\n          ],\n          [\n            \"td\",\n            \"any\",\n            \"[\",\n            \"]\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"fields\"\n          ],\n          [\n            \"td\",\n            \"仅在 \",\n            [\n              \"code\",\n              \"type\"\n            ],\n            \" 为 \",\n            [\n              \"code\",\n              \"array\"\n            ],\n            \" 或 \",\n            [\n              \"code\",\n              \"object\"\n            ],\n            \" 类型时有效，用于指定子元素的校验规则\"\n          ],\n          [\n            \"td\",\n            \"Record\",\n            \"<\",\n            \"string, \",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"#Rule\"\n              },\n              \"rule\"\n            ],\n            \">\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"len\"\n          ],\n          [\n            \"td\",\n            \"string 类型时为字符串长度；number 类型时为确定数字； array 类型时为数组长度\"\n          ],\n          [\n            \"td\",\n            \"number\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"max\"\n          ],\n          [\n            \"td\",\n            \"必须设置 \",\n            [\n              \"code\",\n              \"type\"\n            ],\n            \"：string 类型为字符串最大长度；number 类型时为最大值；array 类型时为数组最大长度\"\n          ],\n          [\n            \"td\",\n            \"number\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"message\"\n          ],\n          [\n            \"td\",\n            \"错误信息，不设置时会通过\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"#validateMessages\"\n              },\n              \"模板\"\n            ],\n            \"自动生成\"\n          ],\n          [\n            \"td\",\n            \"string\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"min\"\n          ],\n          [\n            \"td\",\n            \"必须设置 \",\n            [\n              \"code\",\n              \"type\"\n            ],\n            \"：string 类型为字符串最小长度；number 类型时为最小值；array 类型时为数组最小长度\"\n          ],\n          [\n            \"td\",\n            \"number\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"pattern\"\n          ],\n          [\n            \"td\",\n            \"正则表达式匹配\"\n          ],\n          [\n            \"td\",\n            \"RegExp\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"required\"\n          ],\n          [\n            \"td\",\n            \"是否为必选字段\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"transform\"\n          ],\n          [\n            \"td\",\n            \"将字段值转换成目标值后进行校验\"\n          ],\n          [\n            \"td\",\n            \"(value) => any\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"type\"\n          ],\n          [\n            \"td\",\n            \"类型，常见有 \",\n            [\n              \"code\",\n              \"string\"\n            ],\n            \" \",\n            \"|\",\n            [\n              \"code\",\n              \"number\"\n            ],\n            \" \",\n            \"|\",\n            [\n              \"code\",\n              \"boolean\"\n            ],\n            \" \",\n            \"|\",\n            [\n              \"code\",\n              \"url\"\n            ],\n            \" \",\n            \"|\",\n            \" \",\n            [\n              \"code\",\n              \"email\"\n            ],\n            \"。更多请参考\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"https://github.com/yiminghe/async-validator#type\"\n              },\n              \"此处\"\n            ]\n          ],\n          [\n            \"td\",\n            \"string\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"validateTrigger\"\n          ],\n          [\n            \"td\",\n            \"设置触发验证时机，必须是 Form.Item 的 \",\n            [\n              \"code\",\n              \"validateTrigger\"\n            ],\n            \" 的子集\"\n          ],\n          [\n            \"td\",\n            \"string \",\n            \"|\",\n            \" string\",\n            \"[\",\n            \"]\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"validator\"\n          ],\n          [\n            \"td\",\n            \"自定义校验，接收 Promise 作为返回值。\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"#components-form-demo-register\"\n              },\n              \"示例\"\n            ],\n            \"参考\"\n          ],\n          [\n            \"td\",\n            \"(\",\n            [\n              \"a\",\n              {\n                \"title\": null,\n                \"href\": \"#Rule\"\n              },\n              \"rule\"\n            ],\n            \", value) => Promise\"\n          ],\n          [\n            \"td\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"warningOnly\"\n          ],\n          [\n            \"td\",\n            \"仅警告，不阻塞表单提交\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\",\n            \"4.17.0\"\n          ]\n        ],\n        [\n          \"tr\",\n          [\n            \"td\",\n            \"whitespace\"\n          ],\n          [\n            \"td\",\n            \"如果字段仅包含空格则校验不通过，只在 \",\n            [\n              \"code\",\n              \"type: 'string'\"\n            ],\n            \" 时生效\"\n          ],\n          [\n            \"td\",\n            \"boolean\"\n          ],\n          [\n            \"td\"\n          ]\n        ]\n      ]\n    ],\n    [\n      \"h2\",\n      \"从 v3 升级到 v4\"\n    ],\n    [\n      \"p\",\n      \"如果你是 antd v3 的用户，你可以参考\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"/components/form/v3\"\n        },\n        \"迁移示例\"\n      ],\n      \"。\"\n    ],\n    [\n      \"style\",\n      \"\\n.code-box-demo .ant-form:not(.ant-form-inline):not(.ant-form-vertical) {\\n  max-width: 600px;\\n}\\n.markdown.api-container table td:nth-of-type(4) {\\n  white-space: nowrap;\\n  word-wrap: break-word;\\n}\\n\"\n    ],\n    [\n      \"h2\",\n      \"FAQ\"\n    ],\n    [\n      \"h3\",\n      \"自定义 validator 没有效果\"\n    ],\n    [\n      \"p\",\n      \"这是由于你的 \",\n      [\n        \"code\",\n        \"validator\"\n      ],\n      \" 有错误导致 \",\n      [\n        \"code\",\n        \"callback\"\n      ],\n      \" 没有执行到。你可以选择通过 \",\n      [\n        \"code\",\n        \"async\"\n      ],\n      \" 返回一个 promise 或者使用 \",\n      [\n        \"code\",\n        \"try...catch\"\n      ],\n      \" 进行错误捕获：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"validator<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">async</span> <span class=\\\"token punctuation\\\">(</span>rule<span class=\\\"token punctuation\\\">,</span> value<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">throw</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Error</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Something wrong!'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// or</span>\\n\\n<span class=\\\"token function\\\">validator</span><span class=\\\"token punctuation\\\">(</span>rule<span class=\\\"token punctuation\\\">,</span> value<span class=\\\"token punctuation\\\">,</span> callback<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">throw</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Error</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Something wrong!'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">err</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">callback</span><span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\"\n      },\n      [\n        \"code\",\n        \"validator: async (rule, value) => {\\n  throw new Error('Something wrong!');\\n}\\n\\n// or\\n\\nvalidator(rule, value, callback) => {\\n  try {\\n    throw new Error('Something wrong!');\\n  } catch (err) {\\n    callback(err);\\n  }\\n}\"\n      ]\n    ],\n    [\n      \"h3\",\n      \"name 为数组时的转换规则？\"\n    ],\n    [\n      \"p\",\n      \"当 \",\n      [\n        \"code\",\n        \"name\"\n      ],\n      \" 为数组时，会按照顺序填充路径。当存在数字且 form store 中没有该字段时会自动转变成数组。因而如果需要数组为 key 时请使用 string 如：\",\n      [\n        \"code\",\n        \"['1', 'name']\"\n      ],\n      \"。\"\n    ],\n    [\n      \"h3\",\n      \"为何在 Modal 中调用 form 控制台会报错？\"\n    ],\n    [\n      \"blockquote\",\n      [\n        \"p\",\n        \"Warning: Instance created by \",\n        [\n          \"code\",\n          \"useForm\"\n        ],\n        \" is not connect to any Form element. Forget to pass \",\n        [\n          \"code\",\n          \"form\"\n        ],\n        \" prop?\"\n      ]\n    ],\n    [\n      \"p\",\n      \"这是因为你在调用 form 方法时，Modal 还未初始化导致 form 没有关联任何 Form 组件。你可以通过给 Modal 设置 \",\n      [\n        \"code\",\n        \"forceRender\"\n      ],\n      \" 将其预渲染。示例点击\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://codesandbox.io/s/antd-reproduction-template-ibu5c\"\n        },\n        \"此处\"\n      ],\n      \"。\"\n    ],\n    [\n      \"h3\",\n      \"为什么 Form.Item 下的子组件 \",\n      [\n        \"code\",\n        \"defaultValue\"\n      ],\n      \" 不生效？\"\n    ],\n    [\n      \"p\",\n      \"当你为 Form.Item 设置 \",\n      [\n        \"code\",\n        \"name\"\n      ],\n      \" 属性后，子组件会转为受控模式。因而 \",\n      [\n        \"code\",\n        \"defaultValue\"\n      ],\n      \" 不会生效。你需要在 Form 上通过 \",\n      [\n        \"code\",\n        \"initialValues\"\n      ],\n      \" 设置默认值。\"\n    ],\n    [\n      \"h3\",\n      \"为什么第一次调用 \",\n      [\n        \"code\",\n        \"ref\"\n      ],\n      \" 的 From 为空？\"\n    ],\n    [\n      \"p\",\n      [\n        \"code\",\n        \"ref\"\n      ],\n      \" 仅在节点被加载时才会被赋值，请参考 React 官方文档：\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://reactjs.org/docs/refs-and-the-dom.html#accessing-refs\"\n        },\n        \"https://reactjs.org/docs/refs-and-the-dom.html#accessing-refs\"\n      ]\n    ],\n    [\n      \"h3\",\n      \"为什么 \",\n      [\n        \"code\",\n        \"resetFields\"\n      ],\n      \" 会重新 mount 组件？\"\n    ],\n    [\n      \"p\",\n      [\n        \"code\",\n        \"resetFields\"\n      ],\n      \" 会重置整个 Field，因而其子组件也会重新 mount 从而消除自定义组件可能存在的副作用（例如异步数据、状态等等）。\"\n    ],\n    [\n      \"h3\",\n      \"Form 的 initialValues 与 Item 的 initialValue 区别？\"\n    ],\n    [\n      \"p\",\n      \"在大部分场景下，我们总是推荐优先使用 Form 的 \",\n      [\n        \"code\",\n        \"initialValues\"\n      ],\n      \"。只有存在动态字段时你才应该使用 Item 的 \",\n      [\n        \"code\",\n        \"initialValue\"\n      ],\n      \"。默认值遵循以下规则：\"\n    ],\n    [\n      \"ol\",\n      [\n        \"li\",\n        [\n          \"p\",\n          \"Form 的 \",\n          [\n            \"code\",\n            \"initialValues\"\n          ],\n          \" 拥有最高优先级\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"Field 的 \",\n          [\n            \"code\",\n            \"initialValue\"\n          ],\n          \" 次之 \",\n          \"*\",\n          \". 多个同 \",\n          [\n            \"code\",\n            \"name\"\n          ],\n          \" Item 都设置 \",\n          [\n            \"code\",\n            \"initialValue\"\n          ],\n          \" 时，则 Item 的 \",\n          [\n            \"code\",\n            \"initialValue\"\n          ],\n          \" 不生效\"\n        ]\n      ]\n    ],\n    [\n      \"h3\",\n      \"为什么字段设置 \",\n      [\n        \"code\",\n        \"rules\"\n      ],\n      \" 后更改值 \",\n      [\n        \"code\",\n        \"onFieldsChange\"\n      ],\n      \" 会触发三次？\"\n    ],\n    [\n      \"p\",\n      \"字段除了本身的值变化外，校验也是其状态之一。因而在触发字段变化会经历以下几个阶段：\"\n    ],\n    [\n      \"ol\",\n      [\n        \"li\",\n        [\n          \"p\",\n          \"Trigger value change\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"Rule validating\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"Rule validated\"\n        ]\n      ]\n    ],\n    [\n      \"p\",\n      \"在触发过程中，调用 \",\n      [\n        \"code\",\n        \"isFieldValidating\"\n      ],\n      \" 会经历 \",\n      [\n        \"code\",\n        \"false\"\n      ],\n      \" > \",\n      [\n        \"code\",\n        \"true\"\n      ],\n      \" > \",\n      [\n        \"code\",\n        \"false\"\n      ],\n      \" 的变化过程。\"\n    ],\n    [\n      \"h3\",\n      \"为什么 Form.List 不支持 \",\n      [\n        \"code\",\n        \"label\"\n      ],\n      \" 还需要使用 ErrorList 展示错误？\"\n    ],\n    [\n      \"p\",\n      \"Form.List 本身是 renderProps，内部样式非常自由。因而默认配置 \",\n      [\n        \"code\",\n        \"label\"\n      ],\n      \" 和 \",\n      [\n        \"code\",\n        \"error\"\n      ],\n      \" 节点很难与之配合。如果你需要 antd 样式的 \",\n      [\n        \"code\",\n        \"label\"\n      ],\n      \"，可以通过外部包裹 Form.Item 来实现。\"\n    ],\n    [\n      \"h3\",\n      \"为什么 Form.Item 的 \",\n      [\n        \"code\",\n        \"dependencies\"\n      ],\n      \" 对 Form.List 下的字段没有效果？\"\n    ],\n    [\n      \"p\",\n      \"Form.List 下的字段需要包裹 Form.List 本身的 \",\n      [\n        \"code\",\n        \"name\"\n      ],\n      \"，比如：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"tsx\",\n        \"highlighted\": \"<span class=\\\"token operator\\\">&lt;</span>Form<span class=\\\"token punctuation\\\">.</span>List name<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"users\\\"</span><span class=\\\"token operator\\\">></span>\\n  {fields <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span>\\n    fields<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span>field <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token operator\\\">&lt;</span>React<span class=\\\"token punctuation\\\">.</span>Fragment key<span class=\\\"token operator\\\">=</span>{field<span class=\\\"token punctuation\\\">.</span>key}<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>Form<span class=\\\"token punctuation\\\">.</span>Item name<span class=\\\"token operator\\\">=</span>{<span class=\\\"token punctuation\\\">[</span>field<span class=\\\"token punctuation\\\">.</span>name<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'name'</span><span class=\\\"token punctuation\\\">]</span>} {<span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span>someRest1} <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token operator\\\">&lt;</span>Form<span class=\\\"token punctuation\\\">.</span>Item name<span class=\\\"token operator\\\">=</span>{<span class=\\\"token punctuation\\\">[</span>field<span class=\\\"token punctuation\\\">.</span>name<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'age'</span><span class=\\\"token punctuation\\\">]</span>} {<span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span>someRest1} <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>React<span class=\\\"token punctuation\\\">.</span>Fragment<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n  }\\n<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Form<span class=\\\"token punctuation\\\">.</span>List<span class=\\\"token operator\\\">></span>\"\n      },\n      [\n        \"code\",\n        \"<Form.List name=\\\"users\\\">\\n  {fields =>\\n    fields.map(field => (\\n      <React.Fragment key={field.key}>\\n        <Form.Item name={[field.name, 'name']} {...someRest1} />\\n        <Form.Item name={[field.name, 'age']} {...someRest1} />\\n      </React.Fragment>\\n    ))\\n  }\\n</Form.List>\"\n      ]\n    ],\n    [\n      \"p\",\n      \"依赖则是：\",\n      [\n        \"code\",\n        \"['users', 0, 'name']\"\n      ]\n    ],\n    [\n      \"h3\",\n      \"为什么 \",\n      [\n        \"code\",\n        \"normalize\"\n      ],\n      \" 不能是异步方法？\"\n    ],\n    [\n      \"p\",\n      \"React 中异步更新会导致受控组件交互行为异常。当用户交互触发 \",\n      [\n        \"code\",\n        \"onChange\"\n      ],\n      \" 后，通过异步改变值会导致组件 \",\n      [\n        \"code\",\n        \"value\"\n      ],\n      \" 不会立刻更新，使得组件呈现假死状态。如果你需要异步触发变更，请通过自定义组件实现内部异步状态。\"\n    ],\n    [\n      \"style\",\n      \"\\n  .site-form-item-icon {\\n    color: rgba(0, 0, 0, 0.25);\\n  }\\n  [data-theme=\\\"dark\\\"] .site-form-item-icon {\\n    color: rgba(255,255,255,.3);\\n  }\\n\"\n    ],\n    [\n      \"h3\",\n      \"自定义表单控件 \",\n      [\n        \"code\",\n        \"scrollToFirstError\"\n      ],\n      \" 和 \",\n      [\n        \"code\",\n        \"scrollToField\"\n      ],\n      \" 失效？\"\n    ],\n    [\n      \"p\",\n      \"类似问题：\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://github.com/ant-design/ant-design/issues/28370\"\n        },\n        \"#28370\"\n      ],\n      \" \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://github.com/ant-design/ant-design/issues/27994\"\n        },\n        \"#27994\"\n      ]\n    ],\n    [\n      \"p\",\n      \"滚动依赖于表单控件元素上绑定的 \",\n      [\n        \"code\",\n        \"id\"\n      ],\n      \" 字段，如果自定义控件没有将 \",\n      [\n        \"code\",\n        \"id\"\n      ],\n      \" 赋到正确的元素上，这个功能将失效。你可以参考这个 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://codesandbox.io/s/antd-reproduction-template-forked-25nul?file=/index.js\"\n        },\n        \"codesandbox\"\n      ],\n      \"。\"\n    ],\n    [\n      \"h3\",\n      [\n        \"code\",\n        \"setFieldsValue\"\n      ],\n      \" 不会触发 \",\n      [\n        \"code\",\n        \"onFieldsChange\"\n      ],\n      \" 和 \",\n      [\n        \"code\",\n        \"onValuesChange\"\n      ],\n      \"？\"\n    ],\n    [\n      \"p\",\n      \"是的，change 事件仅当用户交互才会触发。该设计是为了防止在 change 事件中调用 \",\n      [\n        \"code\",\n        \"setFieldsValue\"\n      ],\n      \" 导致的循环问题。\"\n    ],\n    [\n      \"h3\",\n      \"有更多参考文档吗？\"\n    ],\n    [\n      \"ul\",\n      [\n        \"li\",\n        [\n          \"p\",\n          \"你可以阅读\",\n          [\n            \"a\",\n            {\n              \"title\": null,\n              \"href\": \"https://zhuanlan.zhihu.com/p/375753910\"\n            },\n            \"《antd v4 Form 使用心得》\"\n          ],\n          \"获得一些使用帮助以及建议。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"想在 DatePicker、Switch 也使用 before、after？可以参考\",\n          [\n            \"a\",\n            {\n              \"title\": null,\n              \"href\": \"https://zhuanlan.zhihu.com/p/422752055\"\n            },\n            \"《如何优雅的对 Form.Item 的 children 增加 before、after》\"\n          ],\n          \"。\"\n        ]\n      ]\n    ]\n  ]\n};\n\n//# sourceURL=webpack:///./components/form/index.zh-CN.md?./node_modules/bisheng/lib/loaders/source-loader.js");

/***/ })

}]);