(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["components/form/v3.zh-CN.md"],{

/***/ "./node_modules/bisheng/lib/loaders/source-loader.js!./components/form/v3.zh-CN.md":
/*!*****************************************************************************************!*\
  !*** ./node_modules/bisheng/lib/loaders/source-loader.js!./components/form/v3.zh-CN.md ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = {\n  \"content\": [\n    \"article\",\n    [\n      \"p\",\n      \"新版本 Form 对使用方式进行了简化，因而如果你是从 v3 迁移上来。你可以参考本文做迁移工作。\"\n    ],\n    [\n      \"h2\",\n      \"去除 Form.create\"\n    ],\n    [\n      \"p\",\n      \"v4 的 Form 不再需要通过 \",\n      [\n        \"code\",\n        \"Form.create()\"\n      ],\n      \" 创建上下文。Form 组件现在自带数据域，因而 \",\n      [\n        \"code\",\n        \"getFieldDecorator\"\n      ],\n      \" 也不再需要，直接写入 Form.Item 即可：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// antd v3</span>\\n<span class=\\\"token keyword\\\">const</span> Demo <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> form<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> getFieldDecorator <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Form</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Form.Item</span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token punctuation\\\">{</span><span class=\\\"token function\\\">getFieldDecorator</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'username'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n        rules<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">{</span> required<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Input</span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Form.Item</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Form</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> WrappedDemo <span class=\\\"token operator\\\">=</span> Form<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span>Demo<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"// antd v3\\nconst Demo = ({ form: { getFieldDecorator } }) => (\\n  <Form>\\n    <Form.Item>\\n      {getFieldDecorator('username', {\\n        rules: [{ required: true }],\\n      })(<Input />)}\\n    </Form.Item>\\n  </Form>\\n);\\n\\nconst WrappedDemo = Form.create()(Demo);\"\n      ]\n    ],\n    [\n      \"p\",\n      \"改成：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// antd v4</span>\\n<span class=\\\"token keyword\\\">const</span> Demo <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Form</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Form.Item</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>username<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">rules</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">{</span> required<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Input</span> <span class=\\\"token punctuation\\\">/></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Form.Item</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Form</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"// antd v4\\nconst Demo = () => (\\n  <Form>\\n    <Form.Item name=\\\"username\\\" rules={[{ required: true }]}>\\n      <Input />\\n    </Form.Item>\\n  </Form>\\n);\"\n      ]\n    ],\n    [\n      \"p\",\n      \"由于移除了 \",\n      [\n        \"code\",\n        \"Form.create()\"\n      ],\n      \"，原本的 \",\n      [\n        \"code\",\n        \"onFieldsChange\"\n      ],\n      \" 等方法移入 Form 中，通过 \",\n      [\n        \"code\",\n        \"fields\"\n      ],\n      \" 对 Form 进行控制。参考\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"/components/form/#components-form-demo-global-state\"\n        },\n        \"示例\"\n      ],\n      \"。\"\n    ],\n    [\n      \"h2\",\n      \"表单控制调整\"\n    ],\n    [\n      \"p\",\n      \"Form 自带表单控制实体，如需要调用 form 方法，可以通过 \",\n      [\n        \"code\",\n        \"Form.useForm()\"\n      ],\n      \" 创建 Form 实体进行操作：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// antd v3</span>\\n<span class=\\\"token keyword\\\">const</span> Demo <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> form<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> setFieldsValue <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">useEffect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">setFieldsValue</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      username<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Bamboo'</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Form</span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Form.Item</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token punctuation\\\">{</span><span class=\\\"token function\\\">getFieldDecorator</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'username'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n          rules<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">{</span> required<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Input</span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Form.Item</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Form</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> WrappedDemo <span class=\\\"token operator\\\">=</span> Form<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span>Demo<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"// antd v3\\nconst Demo = ({ form: { setFieldsValue } }) => {\\n  React.useEffect(() => {\\n    setFieldsValue({\\n      username: 'Bamboo',\\n    });\\n  }, []);\\n\\n  return (\\n    <Form>\\n      <Form.Item>\\n        {getFieldDecorator('username', {\\n          rules: [{ required: true }],\\n        })(<Input />)}\\n      </Form.Item>\\n    </Form>\\n  );\\n};\\n\\nconst WrappedDemo = Form.create()(Demo);\"\n      ]\n    ],\n    [\n      \"p\",\n      \"改成：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// antd v4</span>\\n<span class=\\\"token keyword\\\">const</span> Demo <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>form<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> Form<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">useForm</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">useEffect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    form<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setFieldsValue</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      username<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Bamboo'</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Form</span> <span class=\\\"token attr-name\\\">form</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>form<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Form.Item</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>username<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">rules</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">{</span> required<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Input</span> <span class=\\\"token punctuation\\\">/></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Form.Item</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Form</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"// antd v4\\nconst Demo = () => {\\n  const [form] = Form.useForm();\\n\\n  React.useEffect(() => {\\n    form.setFieldsValue({\\n      username: 'Bamboo',\\n    });\\n  }, []);\\n\\n  return (\\n    <Form form={form}>\\n      <Form.Item name=\\\"username\\\" rules={[{ required: true }]}>\\n        <Input />\\n      </Form.Item>\\n    </Form>\\n  );\\n};\"\n      ]\n    ],\n    [\n      \"p\",\n      \"对于 class component，也可以通过 \",\n      [\n        \"code\",\n        \"ref\"\n      ],\n      \" 获得实体：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// antd v4</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Demo</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  formRef <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">createRef</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function\\\">componentDidMount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>formRef<span class=\\\"token punctuation\\\">.</span>current<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setFieldsValue</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      username<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Bamboo'</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Form</span> <span class=\\\"token attr-name\\\">ref</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>formRef<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Form.Item</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>username<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">rules</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">{</span> required<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Input</span> <span class=\\\"token punctuation\\\">/></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Form.Item</span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Form</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\"\n      },\n      [\n        \"code\",\n        \"// antd v4\\nclass Demo extends React.Component {\\n  formRef = React.createRef();\\n\\n  componentDidMount() {\\n    this.formRef.current.setFieldsValue({\\n      username: 'Bamboo',\\n    });\\n  }\\n\\n  render() {\\n    return (\\n      <Form ref={this.formRef}>\\n        <Form.Item name=\\\"username\\\" rules={[{ required: true }]}>\\n          <Input />\\n        </Form.Item>\\n      </Form>\\n    );\\n  }\\n}\"\n      ]\n    ],\n    [\n      \"p\",\n      \"由于 Form.Item 内置字段绑定，如果需要不带样式的表单绑定，可以使用 \",\n      [\n        \"code\",\n        \"noStyle\"\n      ],\n      \" 属性移除额外样式：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// antd v3</span>\\n<span class=\\\"token keyword\\\">const</span> Demo <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> form<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> getFieldDecorator <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Form</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token function\\\">getFieldDecorator</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'username'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Input</span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Form</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> WrappedDemo <span class=\\\"token operator\\\">=</span> Form<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span>Demo<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"// antd v3\\nconst Demo = ({ form: { getFieldDecorator } }) => {\\n  return <Form>{getFieldDecorator('username')(<Input />)}</Form>;\\n};\\n\\nconst WrappedDemo = Form.create()(Demo);\"\n      ]\n    ],\n    [\n      \"p\",\n      \"改成：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// antd v4</span>\\n<span class=\\\"token keyword\\\">const</span> Demo <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Form</span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Form.Item</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>username<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">noStyle</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Input</span> <span class=\\\"token punctuation\\\">/></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Form.Item</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Form</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"// antd v4\\nconst Demo = () => {\\n  return (\\n    <Form>\\n      <Form.Item name=\\\"username\\\" noStyle>\\n        <Input />\\n      </Form.Item>\\n    </Form>\\n  );\\n};\"\n      ]\n    ],\n    [\n      \"h2\",\n      \"字段联动调整\"\n    ],\n    [\n      \"p\",\n      \"新版 Form 采用增量更新方式，仅会更新需要更新的字段。因而如果有字段关联更新，或者跟随整个表单更新而更新。可以使用 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"/components/form/#dependencies\"\n        },\n        [\n          \"code\",\n          \"dependencies\"\n        ]\n      ],\n      \" 或 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"/components/form/#shouldUpdate\"\n        },\n        [\n          \"code\",\n          \"shouldUpdate\"\n        ]\n      ],\n      \"。\"\n    ],\n    [\n      \"h2\",\n      \"onFinish 替代 onSubmit\"\n    ],\n    [\n      \"p\",\n      \"对于表单校验，过去版本需要通过监听 \",\n      [\n        \"code\",\n        \"onSubmit\"\n      ],\n      \" 事件手工触发 \",\n      [\n        \"code\",\n        \"validateFields\"\n      ],\n      \"。新版直接使用 \",\n      [\n        \"code\",\n        \"onFinish\"\n      ],\n      \" 事件，该事件仅当校验通过后才会执行：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// antd v3</span>\\n<span class=\\\"token keyword\\\">const</span> Demo <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> form<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> getFieldDecorator<span class=\\\"token punctuation\\\">,</span> validateFields <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> onSubmit <span class=\\\"token operator\\\">=</span> e <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    e<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">preventDefault</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">validateFields</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">,</span> values<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span>err<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Received values of form: '</span><span class=\\\"token punctuation\\\">,</span> values<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Form</span> <span class=\\\"token attr-name\\\">onSubmit</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onSubmit<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Form.Item</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token punctuation\\\">{</span><span class=\\\"token function\\\">getFieldDecorator</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'username'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n          rules<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">{</span> required<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Input</span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Form.Item</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Form</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> WrappedDemo <span class=\\\"token operator\\\">=</span> Form<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span>Demo<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"// antd v3\\nconst Demo = ({ form: { getFieldDecorator, validateFields } }) => {\\n  const onSubmit = e => {\\n    e.preventDefault();\\n    validateFields((err, values) => {\\n      if (!err) {\\n        console.log('Received values of form: ', values);\\n      }\\n    });\\n  };\\n\\n  return (\\n    <Form onSubmit={onSubmit}>\\n      <Form.Item>\\n        {getFieldDecorator('username', {\\n          rules: [{ required: true }],\\n        })(<Input />)}\\n      </Form.Item>\\n    </Form>\\n  );\\n};\\n\\nconst WrappedDemo = Form.create()(Demo);\"\n      ]\n    ],\n    [\n      \"p\",\n      \"改成：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// antd v4</span>\\n<span class=\\\"token keyword\\\">const</span> Demo <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> onFinish <span class=\\\"token operator\\\">=</span> values <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Received values of form: '</span><span class=\\\"token punctuation\\\">,</span> values<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Form</span> <span class=\\\"token attr-name\\\">onFinish</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>onFinish<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Form.Item</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>username<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">rules</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">{</span> required<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Input</span> <span class=\\\"token punctuation\\\">/></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Form.Item</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Form</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"// antd v4\\nconst Demo = () => {\\n  const onFinish = values => {\\n    console.log('Received values of form: ', values);\\n  };\\n\\n  return (\\n    <Form onFinish={onFinish}>\\n      <Form.Item name=\\\"username\\\" rules={[{ required: true }]}>\\n        <Input />\\n      </Form.Item>\\n    </Form>\\n  );\\n};\"\n      ]\n    ],\n    [\n      \"h2\",\n      \"scrollToField 替代 validateFieldsAndScroll\"\n    ],\n    [\n      \"p\",\n      \"新版推荐使用 \",\n      [\n        \"code\",\n        \"onFinish\"\n      ],\n      \" 进行校验后提交操作，因而 \",\n      [\n        \"code\",\n        \"validateFieldsAndScroll\"\n      ],\n      \" 拆成更独立的 \",\n      [\n        \"code\",\n        \"scrollToField\"\n      ],\n      \" 方法：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// antd v3</span>\\nonSubmit <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  form<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">validateFieldsAndScroll</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>error<span class=\\\"token punctuation\\\">,</span> values<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Your logic</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"// antd v3\\nonSubmit = () => {\\n  form.validateFieldsAndScroll((error, values) => {\\n    // Your logic\\n  });\\n};\"\n      ]\n    ],\n    [\n      \"p\",\n      \"改成：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// antd v4</span>\\nonFinishFailed <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> errorFields <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  form<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">scrollToField</span><span class=\\\"token punctuation\\\">(</span>errorFields<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>name<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"// antd v4\\nonFinishFailed = ({ errorFields }) => {\\n  form.scrollToField(errorFields[0].name);\\n};\"\n      ]\n    ],\n    [\n      \"h2\",\n      \"初始化调整\"\n    ],\n    [\n      \"p\",\n      \"此外，我们将 \",\n      [\n        \"code\",\n        \"initialValue\"\n      ],\n      \" 从字段中移到 Form 中。以避免同名字段设置 \",\n      [\n        \"code\",\n        \"initialValue\"\n      ],\n      \" 的冲突问题：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// antd v3</span>\\n<span class=\\\"token keyword\\\">const</span> Demo <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> form<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> getFieldDecorator <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Form</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Form.Item</span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token punctuation\\\">{</span><span class=\\\"token function\\\">getFieldDecorator</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'username'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n        rules<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">{</span> required<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        initialValue<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Bamboo'</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Input</span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Form.Item</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Form</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> WrappedDemo <span class=\\\"token operator\\\">=</span> Form<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">create</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span>Demo<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"// antd v3\\nconst Demo = ({ form: { getFieldDecorator } }) => (\\n  <Form>\\n    <Form.Item>\\n      {getFieldDecorator('username', {\\n        rules: [{ required: true }],\\n        initialValue: 'Bamboo',\\n      })(<Input />)}\\n    </Form.Item>\\n  </Form>\\n);\\n\\nconst WrappedDemo = Form.create()(Demo);\"\n      ]\n    ],\n    [\n      \"p\",\n      \"改成：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// antd v4</span>\\n<span class=\\\"token keyword\\\">const</span> Demo <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Form</span> <span class=\\\"token attr-name\\\">initialValues</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> username<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Bamboo'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Form.Item</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>username<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">rules</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">{</span> required<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Input</span> <span class=\\\"token punctuation\\\">/></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Form.Item</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Form</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"// antd v4\\nconst Demo = () => (\\n  <Form initialValues={{ username: 'Bamboo' }}>\\n    <Form.Item name=\\\"username\\\" rules={[{ required: true }]}>\\n      <Input />\\n    </Form.Item>\\n  </Form>\\n);\"\n      ]\n    ],\n    [\n      \"p\",\n      \"在 v3 版本中，修改未操作的字段 \",\n      [\n        \"code\",\n        \"initialValue\"\n      ],\n      \" 会同步更新字段值，这是一个 BUG。但是由于被长期作为一个 feature 使用，因而我们一直没有修复。在 v4 中，该 BUG 已被修复。\",\n      [\n        \"code\",\n        \"initialValue\"\n      ],\n      \" 只有在初始化以及重置表单时生效。\"\n    ],\n    [\n      \"h2\",\n      \"嵌套字段路径使用数组\"\n    ],\n    [\n      \"p\",\n      \"过去版本我们通过 \",\n      [\n        \"code\",\n        \".\"\n      ],\n      \" 代表嵌套路径（诸如 \",\n      [\n        \"code\",\n        \"user.name\"\n      ],\n      \" 来代表 \",\n      [\n        \"code\",\n        \"{ user: { name: '' } }\"\n      ],\n      \"）。然而在一些后台系统中，变量名中也会带上 \",\n      [\n        \"code\",\n        \".\"\n      ],\n      \"。这造成用户需要额外的代码进行转化，因而新版中，嵌套路径通过数组来表示以避免错误的处理行为（如 \",\n      [\n        \"code\",\n        \"['user', 'name']\"\n      ],\n      \"）。\"\n    ],\n    [\n      \"p\",\n      \"也因此，诸如 \",\n      [\n        \"code\",\n        \"getFieldsError\"\n      ],\n      \" 等方法返回的路径总是数组形式以便于用户处理：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"form<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getFieldsError</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/*\\n[\\n  { name: ['user', 'name'], errors: [] },\\n  { name: ['user', 'age'], errors: ['Some error message'] },\\n]\\n*/</span>\"\n      },\n      [\n        \"code\",\n        \"form.getFieldsError();\\n\\n/*\\n[\\n  { name: ['user', 'name'], errors: [] },\\n  { name: ['user', 'age'], errors: ['Some error message'] },\\n]\\n*/\"\n      ]\n    ],\n    [\n      \"p\",\n      \"嵌套字段定义由：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// antd v3</span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Form.Item</span> <span class=\\\"token attr-name\\\">label</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>Firstname<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token function\\\">getFieldDecorator</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'user.0.firstname'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Input</span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Form.Item</span><span class=\\\"token punctuation\\\">></span></span>\"\n      },\n      [\n        \"code\",\n        \"// antd v3\\n<Form.Item label=\\\"Firstname\\\">{getFieldDecorator('user.0.firstname', {})(<Input />)}</Form.Item>\"\n      ]\n    ],\n    [\n      \"p\",\n      \"改至：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// antd v4</span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Form.Item</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'user'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'firstname'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">label</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>Firstname<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Input</span> <span class=\\\"token punctuation\\\">/></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>Form.Item</span><span class=\\\"token punctuation\\\">></span></span>\"\n      },\n      [\n        \"code\",\n        \"// antd v4\\n<Form.Item name={['user', 0, 'firstname']} label=\\\"Firstname\\\">\\n  <Input />\\n</Form.Item>\"\n      ]\n    ],\n    [\n      \"p\",\n      \"相似的，\",\n      [\n        \"code\",\n        \"setFieldsValue\"\n      ],\n      \" 由：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// antd v3</span>\\n<span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>formRef<span class=\\\"token punctuation\\\">.</span>current<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setFieldsValue</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token string\\\">'user.0.firstname'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'John'</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"// antd v3\\nthis.formRef.current.setFieldsValue({\\n  'user.0.firstname': 'John',\\n});\"\n      ]\n    ],\n    [\n      \"p\",\n      \"改至：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// antd v4</span>\\n<span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>formRef<span class=\\\"token punctuation\\\">.</span>current<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setFieldsValue</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  user<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n      firstname<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'John'</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"// antd v4\\nthis.formRef.current.setFieldsValue({\\n  user: [\\n    {\\n      firstname: 'John',\\n    },\\n  ],\\n});\"\n      ]\n    ],\n    [\n      \"h2\",\n      \"validateFields 不再支持 callback\"\n    ],\n    [\n      \"p\",\n      [\n        \"code\",\n        \"validateFields\"\n      ],\n      \" 会返回 Promise 对象，因而你可以通过 \",\n      [\n        \"code\",\n        \"async/await\"\n      ],\n      \" 或者 \",\n      [\n        \"code\",\n        \"then/catch\"\n      ],\n      \" 来执行对应的错误处理。不再需要判断 \",\n      [\n        \"code\",\n        \"errors\"\n      ],\n      \" 是否为空：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// antd v3</span>\\n<span class=\\\"token function\\\">validateFields</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">,</span> value<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span>err<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Do something with value</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"// antd v3\\nvalidateFields((err, value) => {\\n  if (!err) {\\n    // Do something with value\\n  }\\n});\"\n      ]\n    ],\n    [\n      \"p\",\n      \"改成：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// antd v4</span>\\n<span class=\\\"token function\\\">validateFields</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span>values <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// Do something with value</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"// antd v4\\nvalidateFields().then(values => {\\n  // Do something with value\\n});\"\n      ]\n    ]\n  ],\n  \"meta\": {\n    \"title\": \"Form 从 v3 到 v4\",\n    \"skip\": true,\n    \"filename\": \"components/form/v3.zh-CN.md\"\n  },\n  \"toc\": [\n    \"ul\",\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#去除-Form.create\",\n          \"title\": \"去除 Form.create\"\n        },\n        \"去除 Form.create\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#表单控制调整\",\n          \"title\": \"表单控制调整\"\n        },\n        \"表单控制调整\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#字段联动调整\",\n          \"title\": \"字段联动调整\"\n        },\n        \"字段联动调整\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#onFinish-替代-onSubmit\",\n          \"title\": \"onFinish 替代 onSubmit\"\n        },\n        \"onFinish 替代 onSubmit\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#scrollToField-替代-validateFieldsAndScroll\",\n          \"title\": \"scrollToField 替代 validateFieldsAndScroll\"\n        },\n        \"scrollToField 替代 validateFieldsAndScroll\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#初始化调整\",\n          \"title\": \"初始化调整\"\n        },\n        \"初始化调整\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#嵌套字段路径使用数组\",\n          \"title\": \"嵌套字段路径使用数组\"\n        },\n        \"嵌套字段路径使用数组\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#validateFields-不再支持-callback\",\n          \"title\": \"validateFields 不再支持 callback\"\n        },\n        \"validateFields 不再支持 callback\"\n      ]\n    ]\n  ]\n};\n\n//# sourceURL=webpack:///./components/form/v3.zh-CN.md?./node_modules/bisheng/lib/loaders/source-loader.js");

/***/ })

}]);