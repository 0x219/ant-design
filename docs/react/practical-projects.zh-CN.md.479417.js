(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["docs/react/practical-projects.zh-CN.md"],{

/***/ "./node_modules/bisheng/lib/loaders/source-loader.js!./docs/react/practical-projects.zh-CN.md":
/*!****************************************************************************************************!*\
  !*** ./node_modules/bisheng/lib/loaders/source-loader.js!./docs/react/practical-projects.zh-CN.md ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = {\n  \"content\": [\n    \"article\",\n    [\n      \"p\",\n      \"在真实项目开发中，你可能会需要 Redux 或者 MobX 这样的数据流方案，Ant Design React 作为一个 UI 库，可以和任何 React 生态圈内的数据流方案以及应用框架搭配使用。我们基于业务场景的场景，推出了可插拔的企业级应用框架 umi，推荐你在项目中使用。\"\n    ],\n    [\n      \"p\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://umijs.org/zh-CN\"\n        },\n        \"umi\"\n      ],\n      \" 则是一个可插拔的企业级 react 应用框架。umi 以路由为基础的，支持\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://umijs.org/zh-CN/docs/convention-routing\"\n        },\n        \"类 next.js 的约定式路由\"\n      ],\n      \"，以及各种进阶的路由功能，并以此进行功能扩展，比如\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://umijs.org/zh-CN/config#dynamicimport\"\n        },\n        \"支持路由级的按需加载\"\n      ],\n      \"。然后配以完善的\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://umijs.org/zh-CN/plugins/api\"\n        },\n        \"插件体系\"\n      ],\n      \"，覆盖从源码到构建产物的每个生命周期，支持各种功能扩展和业务需求，同时提供 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://umijs.org/zh-CN/docs/use-umi-ui\"\n        },\n        \"Umi UI\"\n      ],\n      \" 通过可视化辅助编程（VAP）提高开发体验和研发效率。\"\n    ],\n    [\n      \"blockquote\",\n      [\n        \"p\",\n        \"你可能也会对 \",\n        [\n          \"a\",\n          {\n            \"title\": null,\n            \"href\": \"https://pro.ant.design/\"\n          },\n          \"Ant Design Pro\"\n        ],\n        \" 感兴趣，这是一个基于 umi、dva 和 ant design 的开箱即用的中台前端/设计解决方案。\"\n      ]\n    ],\n    [\n      \"p\",\n      \"本文会引导你使用 Umi、dva 和 antd 从 0 开始创建一个简单应用。\"\n    ],\n    [\n      \"h2\",\n      \"安装 Umi\"\n    ],\n    [\n      \"p\",\n      \"推荐使用 yarn 创建 Umi 脚手架，执行以下命令。\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"bash\",\n        \"highlighted\": \"$ <span class=\\\"token function\\\">mkdir</span> myapp <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token function\\\">cd</span> myapp\\n$ yarn create @umijs/umi-app\\n$ yarn\"\n      },\n      [\n        \"code\",\n        \"$ mkdir myapp && cd myapp\\n$ yarn create @umijs/umi-app\\n$ yarn\"\n      ]\n    ],\n    [\n      \"blockquote\",\n      [\n        \"p\",\n        \"如果你使用 npm，可执行 \",\n        [\n          \"code\",\n          \"npx @umijs/create-umi-app\"\n        ],\n        \"，效果一致。\"\n      ],\n      [\n        \"p\",\n        \"默认使用 \",\n        [\n          \"code\",\n          \"\\\"antd\\\": \\\"^4.0.0\\\"\"\n        ],\n        \"，如果要使用固定版本的 antd，你可以在项目里安装额外的 antd 依赖，\",\n        [\n          \"code\",\n          \"package.json\"\n        ],\n        \" 里声明的 antd 依赖会被优先使用。\"\n      ]\n    ],\n    [\n      \"h2\",\n      \"新建路由\"\n    ],\n    [\n      \"p\",\n      \"我们要写个应用来先显示产品列表。首先第一步是创建路由，路由可以想象成是组成应用的不同页面。\"\n    ],\n    [\n      \"p\",\n      \"然后通过命令创建 \",\n      [\n        \"code\",\n        \"/products\"\n      ],\n      \" 路由，\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"bash\",\n        \"highlighted\": \"$ npx umi g page products --typescript\\n\\nWrite: src/pages/products.tsx\\nWrite: src/pages/products.css\"\n      },\n      [\n        \"code\",\n        \"$ npx umi g page products --typescript\\n\\nWrite: src/pages/products.tsx\\nWrite: src/pages/products.css\"\n      ]\n    ],\n    [\n      \"p\",\n      \"在 \",\n      [\n        \"code\",\n        \".umirc.ts\"\n      ],\n      \" 中配置路由，如果有国际化需要，可以配置 \",\n      [\n        \"code\",\n        \"locale\"\n      ],\n      \" 开启 antd 国际化：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"diff\",\n        \"highlighted\": \"import { defineConfig } from 'umi';\\n\\nexport default defineConfig({\\n<span class=\\\"token inserted\\\">+ locale: { antd: true },</span>\\n  routes: [\\n    { path: '/', component: '@/pages/index' },\\n<span class=\\\"token inserted\\\">+   { path: '/products', component: '@/pages/products' },</span>\\n  ],\\n});\"\n      },\n      [\n        \"code\",\n        \"import { defineConfig } from 'umi';\\n\\nexport default defineConfig({\\n+ locale: { antd: true },\\n  routes: [\\n    { path: '/', component: '@/pages/index' },\\n+   { path: '/products', component: '@/pages/products' },\\n  ],\\n});\"\n      ]\n    ],\n    [\n      \"p\",\n      \"运行 \",\n      [\n        \"code\",\n        \"yarn start\"\n      ],\n      \" 然后在浏览器里打开 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"http://localhost:8000/products\"\n        },\n        \"http://localhost:8000/products\"\n      ],\n      \"，你应该能看到对应的页面。\"\n    ],\n    [\n      \"h2\",\n      \"编写 UI Component\"\n    ],\n    [\n      \"p\",\n      \"随着应用的发展，你会需要在多个页面分享 UI 元素 (或在一个页面使用多次)，在 umi 里你可以把这部分抽成 component 。\"\n    ],\n    [\n      \"p\",\n      \"我们来编写一个 \",\n      [\n        \"code\",\n        \"ProductList\"\n      ],\n      \" component，这样就能在不同的地方显示产品列表了。\"\n    ],\n    [\n      \"p\",\n      \"然后新建 \",\n      [\n        \"code\",\n        \"src/components/ProductList.tsx\"\n      ],\n      \" 文件：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"tsx\",\n        \"highlighted\": \"import { Table<span class=\\\"token punctuation\\\">,</span> Popconfirm<span class=\\\"token punctuation\\\">,</span> Button } from <span class=\\\"token string\\\">'antd'</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> ProductList<span class=\\\"token punctuation\\\">:</span> React<span class=\\\"token punctuation\\\">.</span>FC<span class=\\\"token operator\\\">&lt;</span>{ products<span class=\\\"token punctuation\\\">:</span> { name<span class=\\\"token punctuation\\\">:</span> string }<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">; onDelete: (id: string) => void }> = ({</span>\\n  onDelete<span class=\\\"token punctuation\\\">,</span>\\n  products<span class=\\\"token punctuation\\\">,</span>\\n}<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> {\\n  <span class=\\\"token keyword\\\">const</span> columns <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n    {\\n      title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Name'</span><span class=\\\"token punctuation\\\">,</span>\\n      dataIndex<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'name'</span><span class=\\\"token punctuation\\\">,</span>\\n    }<span class=\\\"token punctuation\\\">,</span>\\n    {\\n      title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Actions'</span><span class=\\\"token punctuation\\\">,</span>\\n      render<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span>text<span class=\\\"token punctuation\\\">,</span> record<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> {\\n        return <span class=\\\"token punctuation\\\">(</span>\\n          <span class=\\\"token operator\\\">&lt;</span>Popconfirm title<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"Delete?\\\"</span> onConfirm<span class=\\\"token operator\\\">=</span>{<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token function\\\">onDelete</span><span class=\\\"token punctuation\\\">(</span>record<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">)</span>}<span class=\\\"token operator\\\">></span>\\n            <span class=\\\"token operator\\\">&lt;</span>Button<span class=\\\"token operator\\\">></span>Delete<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Button<span class=\\\"token operator\\\">></span>\\n          <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Popconfirm<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n      }<span class=\\\"token punctuation\\\">,</span>\\n    }<span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">]</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n  return <span class=\\\"token operator\\\">&lt;</span>Table dataSource<span class=\\\"token operator\\\">=</span>{products} columns<span class=\\\"token operator\\\">=</span>{columns} <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n}<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\nexport <span class=\\\"token keyword\\\">default</span> ProductList<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"import { Table, Popconfirm, Button } from 'antd';\\n\\nconst ProductList: React.FC<{ products: { name: string }[]; onDelete: (id: string) => void }> = ({\\n  onDelete,\\n  products,\\n}) => {\\n  const columns = [\\n    {\\n      title: 'Name',\\n      dataIndex: 'name',\\n    },\\n    {\\n      title: 'Actions',\\n      render: (text, record) => {\\n        return (\\n          <Popconfirm title=\\\"Delete?\\\" onConfirm={() => onDelete(record.id)}>\\n            <Button>Delete</Button>\\n          </Popconfirm>\\n        );\\n      },\\n    },\\n  ];\\n  return <Table dataSource={products} columns={columns} />;\\n};\\n\\nexport default ProductList;\"\n      ]\n    ],\n    [\n      \"h2\",\n      \"简单数据流方案\"\n    ],\n    [\n      \"p\",\n      [\n        \"code\",\n        \"@umijs/plugin-model\"\n      ],\n      \" 是一种基于 hooks 范式的简单数据流方案，可以在一定情况下替代 dva 来进行中台的全局数据流。我们约定在 \",\n      [\n        \"code\",\n        \"src/models\"\n      ],\n      \" 目录下的文件为项目定义的 model 文件。每个文件需要默认导出一个 function，该 function 定义了一个 Hook，不符合规范的文件我们会过滤掉。\"\n    ],\n    [\n      \"p\",\n      \"文件名则对应最终 model 的 name，你可以通过插件提供的 API 来消费 model 中的数据。\"\n    ],\n    [\n      \"p\",\n      \"我们以一个简单的表格作为示例。首先需要新建文件 \",\n      [\n        \"code\",\n        \"src/models/useProductList.ts\"\n      ],\n      \"。\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"tsx\",\n        \"highlighted\": \"import { useRequest } from <span class=\\\"token string\\\">'umi'</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\nimport { queryProductList } from <span class=\\\"token string\\\">'@/services/product'</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\nexport <span class=\\\"token keyword\\\">default</span> function <span class=\\\"token function\\\">useProductList</span><span class=\\\"token punctuation\\\">(</span>params<span class=\\\"token punctuation\\\">:</span> { pageSize<span class=\\\"token punctuation\\\">:</span> number<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">; current: number }) {</span>\\n  <span class=\\\"token keyword\\\">const</span> msg <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useRequest</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token function\\\">queryUserList</span><span class=\\\"token punctuation\\\">(</span>params<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> deleteProducts <span class=\\\"token operator\\\">=</span> async <span class=\\\"token punctuation\\\">(</span>id<span class=\\\"token punctuation\\\">:</span> string<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> {\\n    try {\\n      await <span class=\\\"token function\\\">removeProducts</span><span class=\\\"token punctuation\\\">(</span>id<span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n      message<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">success</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'success'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n      msg<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">run</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n    } catch <span class=\\\"token punctuation\\\">(</span>error<span class=\\\"token punctuation\\\">)</span> {\\n      message<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">error</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'fail'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n    }\\n  }<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n  return {\\n    dataSource<span class=\\\"token punctuation\\\">:</span> msg<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">,</span>\\n    reload<span class=\\\"token punctuation\\\">:</span> msg<span class=\\\"token punctuation\\\">.</span>run<span class=\\\"token punctuation\\\">,</span>\\n    loading<span class=\\\"token punctuation\\\">:</span> msg<span class=\\\"token punctuation\\\">.</span>loading<span class=\\\"token punctuation\\\">,</span>\\n    deleteProducts<span class=\\\"token punctuation\\\">,</span>\\n  }<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n}\"\n      },\n      [\n        \"code\",\n        \"import { useRequest } from 'umi';\\nimport { queryProductList } from '@/services/product';\\n\\nexport default function useProductList(params: { pageSize: number; current: number }) {\\n  const msg = useRequest(() => queryUserList(params));\\n\\n  const deleteProducts = async (id: string) => {\\n    try {\\n      await removeProducts(id);\\n      message.success('success');\\n      msg.run();\\n    } catch (error) {\\n      message.error('fail');\\n    }\\n  };\\n\\n  return {\\n    dataSource: msg.data,\\n    reload: msg.run,\\n    loading: msg.loading,\\n    deleteProducts,\\n  };\\n}\"\n      ]\n    ],\n    [\n      \"p\",\n      \"编辑 \",\n      [\n        \"code\",\n        \"src/pages/products.tsx\"\n      ],\n      \"，替换为以下内容：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"tsx\",\n        \"highlighted\": \"import { useModel } from <span class=\\\"token string\\\">'umi'</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\nimport ProductList from <span class=\\\"token string\\\">'@/components/ProductList'</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> Products <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> {\\n  <span class=\\\"token keyword\\\">const</span> { dataSource<span class=\\\"token punctuation\\\">,</span> reload<span class=\\\"token punctuation\\\">,</span> deleteProducts } <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useModel</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'useProductList'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n  return <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>div<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>a onClick<span class=\\\"token operator\\\">=</span>{<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token function\\\">reload</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>}<span class=\\\"token operator\\\">></span>reload<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>a<span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token operator\\\">&lt;</span>ProductList onDelete<span class=\\\"token operator\\\">=</span>{deleteProducts} products<span class=\\\"token operator\\\">=</span>{dataSource} <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n}<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\nexport <span class=\\\"token keyword\\\">default</span> Products<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"import { useModel } from 'umi';\\nimport ProductList from '@/components/ProductList';\\n\\nconst Products = () => {\\n  const { dataSource, reload, deleteProducts } = useModel('useProductList');\\n  return (\\n    <div>\\n      <a onClick={() => reload()}>reload</a>\\n      <ProductList onDelete={deleteProducts} products={dataSource} />\\n    </div>\\n  );\\n};\\n\\nexport default Products;\"\n      ]\n    ],\n    [\n      \"p\",\n      \"执行启动命令：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"bash\",\n        \"highlighted\": \"$ yarn start\"\n      },\n      [\n        \"code\",\n        \"$ yarn start\"\n      ]\n    ],\n    [\n      \"p\",\n      \"访问 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"http://localhost:8000/\"\n        },\n        \"http://localhost:8000\"\n      ],\n      \"，应该能看到以下效果：\"\n    ],\n    [\n      \"p\",\n      [\n        \"img\",\n        {\n          \"src\": \"https://gw.alipayobjects.com/zos/antfincdn/dPsy4tFHN3/umi.gif\"\n        }\n      ]\n    ],\n    [\n      \"h2\",\n      \"ProLayout\"\n    ],\n    [\n      \"p\",\n      \"一个标准的中后台页面，一般都需要一个布局，这个布局很多时候都是高度雷同的，ProLayout 封装了常用的菜单，面包屑，页头等功能，提供了一个不依赖的框架且开箱即用的高级布局组件。\"\n    ],\n    [\n      \"p\",\n      \"并且支持 \",\n      [\n        \"code\",\n        \"side\"\n      ],\n      \", \",\n      [\n        \"code\",\n        \"mix\"\n      ],\n      \", \",\n      [\n        \"code\",\n        \"top\"\n      ],\n      \" 三种模式，更是内置了菜单选中，菜单生成面包屑，自动设置页面标题的逻辑。可以帮助你快速的开始一个项目。\"\n    ],\n    [\n      \"p\",\n      [\n        \"img\",\n        {\n          \"title\": null,\n          \"src\": \"https://gw.alipayobjects.com/zos/antfincdn/gXkuc%26RmT7/64038246-E2BF-4840-8898-5AF531897A44.png\",\n          \"alt\": \"site\"\n        }\n      ]\n    ],\n    [\n      \"p\",\n      \"使用方式也是极为简单，只需要进行几个简单的设置。\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"tsx\",\n        \"highlighted\": \"import { Button } from <span class=\\\"token string\\\">'antd'</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\nimport ProLayout<span class=\\\"token punctuation\\\">,</span> { PageContainer } from <span class=\\\"token string\\\">'@ant-design/pro-layout'</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\nexport <span class=\\\"token keyword\\\">default</span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token operator\\\">&lt;</span>ProLayout<span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">&lt;</span>PageContainer\\n      extra<span class=\\\"token operator\\\">=</span>{<span class=\\\"token punctuation\\\">[</span>\\n        <span class=\\\"token operator\\\">&lt;</span>Button key<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"3\\\"</span><span class=\\\"token operator\\\">></span>Operating<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Button<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token operator\\\">&lt;</span>Button key<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"2\\\"</span><span class=\\\"token operator\\\">></span>Operating<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Button<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token operator\\\">&lt;</span>Button key<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"1\\\"</span> type<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"primary\\\"</span><span class=\\\"token operator\\\">></span>\\n          Main Operating\\n        <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Button<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">]</span>}\\n      footer<span class=\\\"token operator\\\">=</span>{<span class=\\\"token punctuation\\\">[</span><span class=\\\"token operator\\\">&lt;</span>Button<span class=\\\"token operator\\\">></span>reset<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Button<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">&lt;</span>Button type<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"primary\\\"</span><span class=\\\"token operator\\\">></span>submit<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Button<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">]</span>}\\n    <span class=\\\"token operator\\\">></span>\\n      {children}\\n    <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>PageContainer<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>ProLayout<span class=\\\"token operator\\\">></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"import { Button } from 'antd';\\nimport ProLayout, { PageContainer } from '@ant-design/pro-layout';\\n\\nexport default (\\n  <ProLayout>\\n    <PageContainer\\n      extra={[\\n        <Button key=\\\"3\\\">Operating</Button>,\\n        <Button key=\\\"2\\\">Operating</Button>,\\n        <Button key=\\\"1\\\" type=\\\"primary\\\">\\n          Main Operating\\n        </Button>,\\n      ]}\\n      footer={[<Button>reset</Button>, <Button type=\\\"primary\\\">submit</Button>]}\\n    >\\n      {children}\\n    </PageContainer>\\n  </ProLayout>\\n);\"\n      ]\n    ],\n    [\n      \"p\",\n      \"点击这里\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://prolayout.ant.design/getting-started\"\n        },\n        \"快速开始\"\n      ],\n      \"。\"\n    ],\n    [\n      \"h2\",\n      \"ProTable\"\n    ],\n    [\n      \"p\",\n      \"一个中后台页面中很多数据都不需要跨页面共享，models 在一些时候也是不需要的。\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"tsx\",\n        \"highlighted\": \"import ProTable from <span class=\\\"token string\\\">'@ant-design/pro-table'</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\nimport { Popconfirm<span class=\\\"token punctuation\\\">,</span> Button } from <span class=\\\"token string\\\">'antd'</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\nimport { queryProductList } from <span class=\\\"token string\\\">'@/services/product'</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> Products <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> {\\n  <span class=\\\"token keyword\\\">const</span> actionRef <span class=\\\"token operator\\\">=</span> useRef<span class=\\\"token operator\\\">&lt;</span>ActionType<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> deleteProducts <span class=\\\"token operator\\\">=</span> async <span class=\\\"token punctuation\\\">(</span>id<span class=\\\"token punctuation\\\">:</span> string<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> {\\n    try {\\n      await <span class=\\\"token function\\\">removeProducts</span><span class=\\\"token punctuation\\\">(</span>id<span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n      message<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">success</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'success'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n      actionRef<span class=\\\"token punctuation\\\">.</span>current<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">reload</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n    } catch <span class=\\\"token punctuation\\\">(</span>error<span class=\\\"token punctuation\\\">)</span> {\\n      message<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">error</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'fail'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n    }\\n  }<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> columns <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n    {\\n      title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Name'</span><span class=\\\"token punctuation\\\">,</span>\\n      dataIndex<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'name'</span><span class=\\\"token punctuation\\\">,</span>\\n    }<span class=\\\"token punctuation\\\">,</span>\\n    {\\n      title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Actions'</span><span class=\\\"token punctuation\\\">,</span>\\n      render<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span>text<span class=\\\"token punctuation\\\">,</span> record<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> {\\n        return <span class=\\\"token punctuation\\\">(</span>\\n          <span class=\\\"token operator\\\">&lt;</span>Popconfirm title<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"Delete?\\\"</span> onConfirm<span class=\\\"token operator\\\">=</span>{<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token function\\\">onDelete</span><span class=\\\"token punctuation\\\">(</span>record<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">)</span>}<span class=\\\"token operator\\\">></span>\\n            <span class=\\\"token operator\\\">&lt;</span>Button<span class=\\\"token operator\\\">></span>Delete<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Button<span class=\\\"token operator\\\">></span>\\n          <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Popconfirm<span class=\\\"token operator\\\">></span>\\n        <span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n      }<span class=\\\"token punctuation\\\">,</span>\\n    }<span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">]</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n  return <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>ProTable<span class=\\\"token operator\\\">&lt;</span>{ name<span class=\\\"token punctuation\\\">:</span> string }<span class=\\\"token operator\\\">></span>\\n      headerTitle<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"查询表格\\\"</span>\\n      actionRef<span class=\\\"token operator\\\">=</span>{actionRef}\\n      rowKey<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"name\\\"</span>\\n      request<span class=\\\"token operator\\\">=</span>{<span class=\\\"token punctuation\\\">(</span>params<span class=\\\"token punctuation\\\">,</span> sorter<span class=\\\"token punctuation\\\">,</span> filter<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token function\\\">queryProductList</span><span class=\\\"token punctuation\\\">(</span>{ <span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span>params<span class=\\\"token punctuation\\\">,</span> sorter<span class=\\\"token punctuation\\\">,</span> filter }<span class=\\\"token punctuation\\\">)</span>}\\n      columns<span class=\\\"token operator\\\">=</span>{columns}\\n    <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n}<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"import ProTable from '@ant-design/pro-table';\\nimport { Popconfirm, Button } from 'antd';\\nimport { queryProductList } from '@/services/product';\\n\\nconst Products = () => {\\n  const actionRef = useRef<ActionType>();\\n\\n  const deleteProducts = async (id: string) => {\\n    try {\\n      await removeProducts(id);\\n      message.success('success');\\n      actionRef.current?.reload();\\n    } catch (error) {\\n      message.error('fail');\\n    }\\n  };\\n\\n  const columns = [\\n    {\\n      title: 'Name',\\n      dataIndex: 'name',\\n    },\\n    {\\n      title: 'Actions',\\n      render: (text, record) => {\\n        return (\\n          <Popconfirm title=\\\"Delete?\\\" onConfirm={() => onDelete(record.id)}>\\n            <Button>Delete</Button>\\n          </Popconfirm>\\n        );\\n      },\\n    },\\n  ];\\n\\n  return (\\n    <ProTable<{ name: string }>\\n      headerTitle=\\\"查询表格\\\"\\n      actionRef={actionRef}\\n      rowKey=\\\"name\\\"\\n      request={(params, sorter, filter) => queryProductList({ ...params, sorter, filter })}\\n      columns={columns}\\n    />\\n  );\\n};\"\n      ]\n    ],\n    [\n      \"p\",\n      \"ProTable 提供了预设逻辑来处理 loading，分页 和搜索表单，可以大大减少代码量，点击这里\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://protable.ant.design/getting-started\"\n        },\n        \"快速开始\"\n      ],\n      \"。\"\n    ],\n    [\n      \"h2\",\n      \"构建应用\"\n    ],\n    [\n      \"p\",\n      \"完成开发并且在开发环境验证之后，就需要部署给我们的用户了，执行以下命令：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"bash\",\n        \"highlighted\": \"$ yarn build\"\n      },\n      [\n        \"code\",\n        \"$ yarn build\"\n      ]\n    ],\n    [\n      \"p\",\n      [\n        \"img\",\n        {\n          \"title\": null,\n          \"src\": \"https://gw.alipayobjects.com/zos/antfincdn/Zd3f%242NdOK/b911d244-f1a5-4d61-adc5-3710cd86cd1b.png\",\n          \"alt\": \"build\"\n        }\n      ]\n    ],\n    [\n      \"p\",\n      \"构建会打包所有的资源，包含 JavaScript, CSS, web fonts, images, html 等。你可以在 \",\n      [\n        \"code\",\n        \"dist/\"\n      ],\n      \" 目录下找到这些文件。\"\n    ],\n    [\n      \"h2\",\n      \"下一步\"\n    ],\n    [\n      \"p\",\n      \"我们已经完成了一个简单应用，你可能还有很多疑问，比如：\"\n    ],\n    [\n      \"ul\",\n      [\n        \"li\",\n        [\n          \"p\",\n          \"如何统一处理出错？\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"如何处理更多路由，比如动态路由，嵌套路由，权限路由等？\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"如何 mock 数据？\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"如何部署？\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"等等\"\n        ]\n      ]\n    ],\n    [\n      \"p\",\n      \"你可以：\"\n    ],\n    [\n      \"ul\",\n      [\n        \"li\",\n        [\n          \"p\",\n          \"访问 \",\n          [\n            \"a\",\n            {\n              \"title\": null,\n              \"href\": \"https://umijs.org/\"\n            },\n            \"umi 官网\"\n          ],\n          \"和 \",\n          [\n            \"a\",\n            {\n              \"title\": null,\n              \"href\": \"https://dvajs.com/\"\n            },\n            \"dva 官网\"\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"理解 \",\n          [\n            \"a\",\n            {\n              \"title\": null,\n              \"href\": \"https://umijs.org/zh/guide/router.html\"\n            },\n            \"umi 的路由\"\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"理解 \",\n          [\n            \"a\",\n            {\n              \"title\": null,\n              \"href\": \"https://umijs.org/zh/guide/deploy.html\"\n            },\n            \"如何部署 umi 应用\"\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"开箱即用的脚手架 \",\n          [\n            \"a\",\n            {\n              \"title\": null,\n              \"href\": \"https://pro.ant.design\"\n            },\n            \"Ant Design Pro\"\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"高级布局 \",\n          [\n            \"a\",\n            {\n              \"title\": null,\n              \"href\": \"https://prolayout.ant.design\"\n            },\n            \"ProLayout\"\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"高级表格 \",\n          [\n            \"a\",\n            {\n              \"title\": null,\n              \"href\": \"https://protable.ant.design\"\n            },\n            \"ProTable\"\n          ]\n        ]\n      ]\n    ]\n  ],\n  \"meta\": {\n    \"order\": 3,\n    \"title\": \"项目实战\",\n    \"filename\": \"docs/react/practical-projects.zh-CN.md\"\n  },\n  \"toc\": [\n    \"ul\",\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#安装-Umi\",\n          \"title\": \"安装 Umi\"\n        },\n        \"安装 Umi\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#新建路由\",\n          \"title\": \"新建路由\"\n        },\n        \"新建路由\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#编写-UI-Component\",\n          \"title\": \"编写 UI Component\"\n        },\n        \"编写 UI Component\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#简单数据流方案\",\n          \"title\": \"简单数据流方案\"\n        },\n        \"简单数据流方案\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#ProLayout\",\n          \"title\": \"ProLayout\"\n        },\n        \"ProLayout\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#ProTable\",\n          \"title\": \"ProTable\"\n        },\n        \"ProTable\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#构建应用\",\n          \"title\": \"构建应用\"\n        },\n        \"构建应用\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#下一步\",\n          \"title\": \"下一步\"\n        },\n        \"下一步\"\n      ]\n    ]\n  ]\n};\n\n//# sourceURL=webpack:///./docs/react/practical-projects.zh-CN.md?./node_modules/bisheng/lib/loaders/source-loader.js");

/***/ })

}]);