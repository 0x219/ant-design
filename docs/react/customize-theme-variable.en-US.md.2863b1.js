(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["docs/react/customize-theme-variable.en-US.md"],{

/***/ "./node_modules/bisheng/lib/loaders/source-loader.js!./docs/react/customize-theme-variable.en-US.md":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/bisheng/lib/loaders/source-loader.js!./docs/react/customize-theme-variable.en-US.md ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = {\n  \"content\": [\n    \"article\",\n    [\n      \"p\",\n      \"Except \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"/docs/react/customize-theme\"\n        },\n        \"less customize theme\"\n      ],\n      \", We also provide CSS Variable version to enable dynamic theme. You can check on \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"/components/config-provider/#components-config-provider-demo-theme\"\n        },\n        \"ConfigProvider\"\n      ],\n      \" demo.\"\n    ],\n    [\n      \"h2\",\n      \"Caveats\"\n    ],\n    [\n      \"ul\",\n      [\n        \"li\",\n        [\n          \"p\",\n          \"This function depends on CSS Variables. Please check the \",\n          [\n            \"a\",\n            {\n              \"title\": null,\n              \"href\": \"https://caniuse.com/css-variables\"\n            },\n            \"browser compatibility\"\n          ],\n          \".\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"This function requires at least \",\n          [\n            \"code\",\n            \"antd@4.17.0-alpha.0\"\n          ],\n          \".\"\n        ]\n      ]\n    ],\n    [\n      \"h2\",\n      \"How to use\"\n    ],\n    [\n      \"h3\",\n      \"Import antd.variable.min.css\"\n    ],\n    [\n      \"p\",\n      \"Replace your import style file with CSS Variable version:\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"diff\",\n        \"highlighted\": \"<span class=\\\"token deleted\\\">-- import 'antd/dist/antd.min.css';</span>\\n<span class=\\\"token inserted\\\">++ import 'antd/dist/antd.variable.min.css';</span>\"\n      },\n      [\n        \"code\",\n        \"-- import 'antd/dist/antd.min.css';\\n++ import 'antd/dist/antd.variable.min.css';\"\n      ]\n    ],\n    [\n      \"p\",\n      \"Note: You need remove \",\n      [\n        \"code\",\n        \"babel-plugin-import\"\n      ],\n      \" for the dynamic theme.\"\n    ],\n    [\n      \"h3\",\n      \"Static config\"\n    ],\n    [\n      \"p\",\n      \"Call ConfigProvider static function to modify theme color:\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"ts\",\n        \"highlighted\": \"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> ConfigProvider <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'antd'</span><span class=\\\"token punctuation\\\">;</span>\\n\\nConfigProvider<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">config</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  theme<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    primaryColor<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'#25b864'</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"import { ConfigProvider } from 'antd';\\n\\nConfigProvider.config({\\n  theme: {\\n    primaryColor: '#25b864',\\n  },\\n});\"\n      ]\n    ],\n    [\n      \"h2\",\n      \"Conflict resolve\"\n    ],\n    [\n      \"p\",\n      \"CSS Variable use \",\n      [\n        \"code\",\n        \"--ant\"\n      ],\n      \" prefix by default. When exist multiple antd style file in your project, you can modify prefix to fix it.\"\n    ],\n    [\n      \"h3\",\n      \"Adjust\"\n    ],\n    [\n      \"p\",\n      \"Modify \",\n      [\n        \"code\",\n        \"prefixCls\"\n      ],\n      \" on the root of ConfigProvider:\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"tsx\",\n        \"highlighted\": \"import { ConfigProvider } from <span class=\\\"token string\\\">'antd'</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\nexport <span class=\\\"token keyword\\\">default</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token operator\\\">&lt;</span>ConfigProvider prefixCls<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"custom\\\"</span><span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">&lt;</span>MyApp <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>ConfigProvider<span class=\\\"token operator\\\">></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"import { ConfigProvider } from 'antd';\\n\\nexport default () => (\\n  <ConfigProvider prefixCls=\\\"custom\\\">\\n    <MyApp />\\n  </ConfigProvider>\\n);\"\n      ]\n    ],\n    [\n      \"p\",\n      \"Also need call the static function to modify \",\n      [\n        \"code\",\n        \"prefixCls\"\n      ],\n      \":\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"ts\",\n        \"highlighted\": \"ConfigProvider<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">config</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  prefixCls<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'custom'</span><span class=\\\"token punctuation\\\">,</span>\\n  theme<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    primaryColor<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'#25b864'</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"ConfigProvider.config({\\n  prefixCls: 'custom',\\n  theme: {\\n    primaryColor: '#25b864',\\n  },\\n});\"\n      ]\n    ],\n    [\n      \"h3\",\n      \"Compile less\"\n    ],\n    [\n      \"p\",\n      \"Since prefix modified. Origin \",\n      [\n        \"code\",\n        \"antd.variable.css\"\n      ],\n      \" should also be replaced:\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"bash\",\n        \"highlighted\": \"lessc --modify-var<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"ant-prefix=custom\\\"</span> antd/dist/antd.variable.less modified.css\"\n      },\n      [\n        \"code\",\n        \"lessc --modify-var=\\\"ant-prefix=custom\\\" antd/dist/antd.variable.less modified.css\"\n      ]\n    ],\n    [\n      \"h3\",\n      \"Related changes\"\n    ],\n    [\n      \"p\",\n      \"In order to implement CSS Variable and maintain original usage compatibility, we added \",\n      [\n        \"code\",\n        \"@root-entry-name: xxx;\"\n      ],\n      \" entry injection to the \",\n      [\n        \"code\",\n        \"dist/antd.xxx.less\"\n      ],\n      \" file to support less dynamic loading of the corresponding less file. Under normal circumstances, you do not need to pay attention to this change. However, if your project directly references the less file in the \",\n      [\n        \"code\",\n        \"lib|es\"\n      ],\n      \" directory. You need to configure \",\n      [\n        \"code\",\n        \"@root-entry-name: default;\"\n      ],\n      \" (or \",\n      [\n        \"code\",\n        \"@root-entry-name: variable;\"\n      ],\n      \") at the entry of less so that less can find the correct entry.\"\n    ],\n    [\n      \"p\",\n      \"In addition, we migrated \",\n      [\n        \"code\",\n        \"@import'motion'\"\n      ],\n      \" and \",\n      [\n        \"code\",\n        \"@import'reset'\"\n      ],\n      \" in \",\n      [\n        \"code\",\n        \"lib|es/style/minxins/index.less\"\n      ],\n      \" to \",\n      [\n        \"code\",\n        \"lib|es/style/themes/xxx.less\"\n      ],\n      \" In, because these two files rely on theme-related variables. If you use the relevant internal method, please adjust it yourself. Of course, we still recommend using the \",\n      [\n        \"code\",\n        \"antd.less\"\n      ],\n      \" files in the \",\n      [\n        \"code\",\n        \"dist\"\n      ],\n      \" directory directly instead of calling internal files, because they are often affected by refactoring.\"\n    ]\n  ],\n  \"meta\": {\n    \"order\": 7.1,\n    \"title\": \"Dynamic Theme (Experimental)\",\n    \"filename\": \"docs/react/customize-theme-variable.en-US.md\"\n  },\n  \"toc\": [\n    \"ul\",\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#Caveats\",\n          \"title\": \"Caveats\"\n        },\n        \"Caveats\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#How-to-use\",\n          \"title\": \"How to use\"\n        },\n        \"How to use\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#Conflict-resolve\",\n          \"title\": \"Conflict resolve\"\n        },\n        \"Conflict resolve\"\n      ]\n    ]\n  ]\n};\n\n//# sourceURL=webpack:///./docs/react/customize-theme-variable.en-US.md?./node_modules/bisheng/lib/loaders/source-loader.js");

/***/ })

}]);