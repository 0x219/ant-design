(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["docs/react/use-in-typescript.zh-CN.md"],{

/***/ "./node_modules/bisheng/lib/loaders/source-loader.js!./docs/react/use-in-typescript.zh-CN.md":
/*!***************************************************************************************************!*\
  !*** ./node_modules/bisheng/lib/loaders/source-loader.js!./docs/react/use-in-typescript.zh-CN.md ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = {\n  \"content\": [\n    \"article\",\n    {\n\n    },\n    [\n      \"h2\",\n      \"安装和初始化\"\n    ],\n    [\n      \"p\",\n      \"请确保电脑上已经安装了最新版的 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://yarnpkg.com\"\n        },\n        \"yarn\"\n      ],\n      \" 或者 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://www.npmjs.com/\"\n        },\n        \"npm\"\n      ],\n      \"。\"\n    ],\n    [\n      \"p\",\n      \"使用 yarn 创建 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://github.com/facebook/create-react-app/tree/master/packages/cra-template-typescript\"\n        },\n        \"cra-template-typescript\"\n      ],\n      \" 项目。\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"bash\",\n        \"highlighted\": \"$ yarn create react-app antd-demo-ts --template typescript\"\n      },\n      [\n        \"code\",\n        \"$ yarn create react-app antd-demo-ts --template typescript\"\n      ]\n    ],\n    [\n      \"p\",\n      \"如果你使用的是 npm（接下来我们都会用 yarn 作为例子，如果你习惯用 npm 也没问题）。\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"bash\",\n        \"highlighted\": \"$ npx create-react-app antd-demo-ts --template typescript\"\n      },\n      [\n        \"code\",\n        \"$ npx create-react-app antd-demo-ts --template typescript\"\n      ]\n    ],\n    [\n      \"p\",\n      \"然后我们进入项目并启动。\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"bash\",\n        \"highlighted\": \"$ <span class=\\\"token function\\\">cd</span> antd-demo-ts\\n$ yarn start\"\n      },\n      [\n        \"code\",\n        \"$ cd antd-demo-ts\\n$ yarn start\"\n      ]\n    ],\n    [\n      \"p\",\n      \"此时浏览器会访问 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"http://localhost:3000/\"\n        },\n        \"http://localhost:3000/\"\n      ],\n      \" ，看到 \",\n      [\n        \"code\",\n        \"Welcome to React\"\n      ],\n      \" 的界面就算成功了。\"\n    ],\n    [\n      \"h2\",\n      \"引入 antd\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"bash\",\n        \"highlighted\": \"$ yarn add antd\"\n      },\n      [\n        \"code\",\n        \"$ yarn add antd\"\n      ]\n    ],\n    [\n      \"p\",\n      \"修改 \",\n      [\n        \"code\",\n        \"src/App.tsx\"\n      ],\n      \"，引入 antd 的按钮组件。\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"tsx\",\n        \"highlighted\": \"import React<span class=\\\"token punctuation\\\">,</span> { FC } from <span class=\\\"token string\\\">'react'</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\nimport { Button } from <span class=\\\"token string\\\">'antd'</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\nimport <span class=\\\"token string\\\">'./App.css'</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> App<span class=\\\"token punctuation\\\">:</span> FC <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token operator\\\">&lt;</span>div className<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"App\\\"</span><span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">&lt;</span>Button type<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"primary\\\"</span><span class=\\\"token operator\\\">></span>Button<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>Button<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>div<span class=\\\"token operator\\\">></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\nexport <span class=\\\"token keyword\\\">default</span> App<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"import React, { FC } from 'react';\\nimport { Button } from 'antd';\\nimport './App.css';\\n\\nconst App: FC = () => (\\n  <div className=\\\"App\\\">\\n    <Button type=\\\"primary\\\">Button</Button>\\n  </div>\\n);\\n\\nexport default App;\"\n      ]\n    ],\n    [\n      \"p\",\n      \"修改 \",\n      [\n        \"code\",\n        \"src/App.css\"\n      ],\n      \"，在文件顶部引入 antd 的样式。\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"css\",\n        \"highlighted\": \"<span class=\\\"token atrule\\\"><span class=\\\"token rule\\\">@import</span> <span class=\\\"token string\\\">'~antd/dist/antd.css'</span><span class=\\\"token punctuation\\\">;</span></span>\"\n      },\n      [\n        \"code\",\n        \"@import '~antd/dist/antd.css';\"\n      ]\n    ],\n    [\n      \"p\",\n      \"重新启动 \",\n      [\n        \"code\",\n        \"yarn start\"\n      ],\n      \"，现在你应该能看到页面上已经有了 antd 的蓝色按钮组件，接下来就可以继续选用其他组件开发应用了。其他开发流程你可以参考 create-react-app 的\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://create-react-app.dev/docs/getting-started#creating-a-typescript-app\"\n        },\n        \"官方文档\"\n      ],\n      \"。\"\n    ],\n    [\n      \"p\",\n      [\n        \"code\",\n        \"antd\"\n      ],\n      \" 使用 TypeScript 书写并提供了完整的定义，你可以享受组件属性输入建议和定义检查的功能。\"\n    ],\n    [\n      \"p\",\n      [\n        \"img\",\n        {\n          \"title\": null,\n          \"src\": \"https://gw.alipayobjects.com/zos/antfincdn/26L5vPoLug/8d7da796-175e-40af-8eea-e7031ba09f9f.png\",\n          \"alt\": null\n        }\n      ]\n    ],\n    [\n      \"blockquote\",\n      [\n        \"p\",\n        \"注意不要安装 \",\n        [\n          \"code\",\n          \"@types/antd\"\n        ],\n        \"。\"\n      ]\n    ],\n    [\n      \"h2\",\n      \"高级配置\"\n    ],\n    [\n      \"p\",\n      \"这个例子在实际开发中还有一些优化的空间，比如无法进行主题配置。\"\n    ],\n    [\n      \"p\",\n      \"此时我们需要对 create-react-app 的默认配置进行自定义，这里我们使用 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://github.com/gsoft-inc/craco\"\n        },\n        \"craco\"\n      ],\n      \" （一个对 create-react-app 进行自定义配置的社区解决方案）。\"\n    ],\n    [\n      \"p\",\n      \"现在我们安装 craco 并修改 \",\n      [\n        \"code\",\n        \"package.json\"\n      ],\n      \" 里的 \",\n      [\n        \"code\",\n        \"scripts\"\n      ],\n      \" 属性。\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"bash\",\n        \"highlighted\": \"$ yarn add @craco/craco\"\n      },\n      [\n        \"code\",\n        \"$ yarn add @craco/craco\"\n      ]\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"diff\",\n        \"highlighted\": \"/* package.json */\\n\\\"scripts\\\": {\\n<span class=\\\"token deleted\\\">-   \\\"start\\\": \\\"react-scripts start\\\",</span>\\n<span class=\\\"token deleted\\\">-   \\\"build\\\": \\\"react-scripts build\\\",</span>\\n<span class=\\\"token deleted\\\">-   \\\"test\\\": \\\"react-scripts test\\\",</span>\\n<span class=\\\"token inserted\\\">+   \\\"start\\\": \\\"craco start\\\",</span>\\n<span class=\\\"token inserted\\\">+   \\\"build\\\": \\\"craco build\\\",</span>\\n<span class=\\\"token inserted\\\">+   \\\"test\\\": \\\"craco test\\\",</span>\\n}\"\n      },\n      [\n        \"code\",\n        \"/* package.json */\\n\\\"scripts\\\": {\\n-   \\\"start\\\": \\\"react-scripts start\\\",\\n-   \\\"build\\\": \\\"react-scripts build\\\",\\n-   \\\"test\\\": \\\"react-scripts test\\\",\\n+   \\\"start\\\": \\\"craco start\\\",\\n+   \\\"build\\\": \\\"craco build\\\",\\n+   \\\"test\\\": \\\"craco test\\\",\\n}\"\n      ]\n    ],\n    [\n      \"p\",\n      \"然后在项目根目录创建一个 \",\n      [\n        \"code\",\n        \"craco.config.js\"\n      ],\n      \" 用于修改默认配置。\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"js\",\n        \"highlighted\": \"<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/* craco.config.js */</span>\\nmodule<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">// ...</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"/* craco.config.js */\\nmodule.exports = {\\n  // ...\\n};\"\n      ]\n    ],\n    [\n      \"h3\",\n      \"自定义主题\"\n    ],\n    [\n      \"p\",\n      \"按照 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"/docs/react/customize-theme\"\n        },\n        \"配置主题\"\n      ],\n      \" 的要求，自定义主题需要用到类似 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://github.com/webpack-contrib/less-loader/\"\n        },\n        \"less-loader\"\n      ],\n      \" 提供的 less 变量覆盖功能。我们可以引入 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://github.com/DocSpring/craco-antd\"\n        },\n        \"craco-antd\"\n      ],\n      \" 来帮助加载 less 样式和修改变量。\"\n    ],\n    [\n      \"p\",\n      \"首先把 \",\n      [\n        \"code\",\n        \"src/App.css\"\n      ],\n      \" 文件修改为 \",\n      [\n        \"code\",\n        \"src/App.less\"\n      ],\n      \"，然后修改样式引用为 less 文件。\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"diff\",\n        \"highlighted\": \"/* src/App.ts */\\n<span class=\\\"token deleted\\\">- import './App.css';</span>\\n<span class=\\\"token inserted\\\">+ import './App.less';</span>\"\n      },\n      [\n        \"code\",\n        \"/* src/App.ts */\\n- import './App.css';\\n+ import './App.less';\"\n      ]\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"diff\",\n        \"highlighted\": \"/* src/App.less */\\n<span class=\\\"token deleted\\\">- @import '~antd/dist/antd.css';</span>\"\n      },\n      [\n        \"code\",\n        \"/* src/App.less */\\n- @import '~antd/dist/antd.css';\"\n      ]\n    ],\n    [\n      \"p\",\n      \"然后安装 \",\n      [\n        \"code\",\n        \"craco-antd\"\n      ],\n      \" 并修改 \",\n      [\n        \"code\",\n        \"craco.config.js\"\n      ],\n      \" 文件如下。\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"bash\",\n        \"highlighted\": \"$ yarn add craco-antd\"\n      },\n      [\n        \"code\",\n        \"$ yarn add craco-antd\"\n      ]\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"js\",\n        \"highlighted\": \"<span class=\\\"token keyword\\\">const</span> CracoAntDesignPlugin <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'craco-antd'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nmodule<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  plugins<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n      plugin<span class=\\\"token punctuation\\\">:</span> CracoAntDesignPlugin<span class=\\\"token punctuation\\\">,</span>\\n      options<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        customizeTheme<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token string\\\">'@primary-color'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'#1DA57A'</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"const CracoAntDesignPlugin = require('craco-antd');\\n\\nmodule.exports = {\\n  plugins: [\\n    {\\n      plugin: CracoAntDesignPlugin,\\n      options: {\\n        customizeTheme: {\\n          '@primary-color': '#1DA57A',\\n        },\\n      },\\n    },\\n  ],\\n};\"\n      ]\n    ],\n    [\n      \"p\",\n      \"这里利用了 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://github.com/webpack/less-loader#less-options\"\n        },\n        \"less-loader\"\n      ],\n      \" 的 \",\n      [\n        \"code\",\n        \"modifyVars\"\n      ],\n      \" 来进行主题配置，变量和其他配置方式可以参考 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"/docs/react/customize-theme\"\n        },\n        \"配置主题\"\n      ],\n      \" 文档。修改后重启 \",\n      [\n        \"code\",\n        \"yarn start\"\n      ],\n      \"，如果看到一个绿色的按钮就说明配置成功了。\"\n    ],\n    [\n      \"p\",\n      \"antd 内建了深色主题和紧凑主题，你可以参照 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"/docs/react/customize-theme#使用暗色主题和紧凑主题\"\n        },\n        \"使用暗色主题和紧凑主题\"\n      ],\n      \" 进行接入。\"\n    ],\n    [\n      \"blockquote\",\n      [\n        \"p\",\n        \"同样，你可以使用 \",\n        [\n          \"a\",\n          {\n            \"title\": null,\n            \"href\": \"https://github.com/timarney/react-app-rewired\"\n          },\n          \"react-app-rewired\"\n        ],\n        \" 和 \",\n        [\n          \"a\",\n          {\n            \"title\": null,\n            \"href\": \"https://github.com/arackaf/customize-cra\"\n          },\n          \"customize-cra\"\n        ],\n        \" 来自定义 create-react-app 的 webpack 配置。\"\n      ]\n    ],\n    [\n      \"h2\",\n      \"其他方案\"\n    ],\n    [\n      \"p\",\n      \"如果你已经按照 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"/docs/react/use-with-create-react-app\"\n        },\n        \"在 create-react-app 中使用\"\n      ],\n      \" 初始化了环境，可以参考官方文档里的 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://create-react-app.dev/docs/adding-typescript\"\n        },\n        \"Adding TypeScript\"\n      ],\n      \" 配置 TypeScript 开发环境。\"\n    ],\n    [\n      \"ul\",\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"a\",\n            {\n              \"title\": null,\n              \"href\": \"https://github.com/SZzzzz/react-scripts-ts-antd\"\n            },\n            \"Create React apps (with Typescript and antd) with no build configuration\"\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"a\",\n            {\n              \"title\": null,\n              \"href\": \"https://github.com/lwd-technology/react-app-rewire-typescript\"\n            },\n            \"react-app-rewire-typescript\"\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"a\",\n            {\n              \"title\": null,\n              \"href\": \"https://github.com/Brooooooklyn/ts-import-plugin\"\n            },\n            \"ts-import-plugin\"\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          [\n            \"a\",\n            {\n              \"title\": null,\n              \"href\": \"https://vincenttunru.com/migrate-create-react-app-typescript-to-create-react-app/\"\n            },\n            \"Migrating from create-react-app-typescript to Create React App\"\n          ]\n        ]\n      ]\n    ]\n  ],\n  \"meta\": {\n    \"order\": 5,\n    \"title\": \"在 TypeScript 中使用\",\n    \"filename\": \"docs/react/use-in-typescript.zh-CN.md\"\n  },\n  \"description\": [\n    \"section\",\n    [\n      \"p\",\n      \"使用 \",\n      [\n        \"code\",\n        \"create-react-app\"\n      ],\n      \" 一步步地创建一个 TypeScript 项目，并引入 antd。\"\n    ],\n    [\n      \"blockquote\",\n      [\n        \"p\",\n        [\n          \"code\",\n          \"antd\"\n        ],\n        \" 基于最新稳定版本的 TypeScript（\",\n        [\n          \"code\",\n          \">=4.0.0\"\n        ],\n        \"），请确保项目中使用匹配的版本。\"\n      ]\n    ]\n  ],\n  \"toc\": [\n    \"ul\",\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#安装和初始化\",\n          \"title\": \"安装和初始化\"\n        },\n        \"安装和初始化\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#引入-antd\",\n          \"title\": \"引入 antd\"\n        },\n        \"引入 antd\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#高级配置\",\n          \"title\": \"高级配置\"\n        },\n        \"高级配置\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#其他方案\",\n          \"title\": \"其他方案\"\n        },\n        \"其他方案\"\n      ]\n    ]\n  ]\n};\n\n//# sourceURL=webpack:///./docs/react/use-in-typescript.zh-CN.md?./node_modules/bisheng/lib/loaders/source-loader.js");

/***/ })

}]);