(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["docs/react/migration-v4.zh-CN.md"],{

/***/ "./node_modules/bisheng/lib/loaders/source-loader.js!./docs/react/migration-v4.zh-CN.md":
/*!**********************************************************************************************!*\
  !*** ./node_modules/bisheng/lib/loaders/source-loader.js!./docs/react/migration-v4.zh-CN.md ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = {\n  \"content\": [\n    \"article\",\n    [\n      \"p\",\n      \"本文档将帮助你从 antd \",\n      [\n        \"code\",\n        \"3.x\"\n      ],\n      \" 版本升级到 antd \",\n      [\n        \"code\",\n        \"4.x\"\n      ],\n      \" 版本，如果你是 \",\n      [\n        \"code\",\n        \"2.x\"\n      ],\n      \" 或者更老的版本，请先参考之前的\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://github.com/ant-design/ant-design/blob/2adf8ced24da7b3cb46a3475854a83d76a98c536/CHANGELOG.zh-CN.md#300\"\n        },\n        \"升级文档\"\n      ],\n      \"升级到 3.x。\"\n    ],\n    [\n      \"h2\",\n      \"升级准备\"\n    ],\n    [\n      \"ol\",\n      [\n        \"li\",\n        [\n          \"p\",\n          \"请先升级到 3.x 的最新版本，按照控制台 warning 信息移除/修改相关的 API。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"升级项目 React 16.12.0 以上。\"\n        ],\n        [\n          \"ul\",\n          [\n            \"li\",\n            [\n              \"p\",\n              \"如果你仍在使用 React 15，请参考 \",\n              [\n                \"a\",\n                {\n                  \"title\": null,\n                  \"href\": \"https://reactjs.org/blog/2017/09/26/react-v16.0.html#breaking-changes\"\n                },\n                \"React 16 升级文档\"\n              ],\n              \"。\"\n            ]\n          ],\n          [\n            \"li\",\n            [\n              \"p\",\n              \"其余 React 16 废弃生命周期 API 请参考 \",\n              [\n                \"a\",\n                {\n                  \"title\": null,\n                  \"href\": \"https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\"\n                },\n                \"迁移导引\"\n              ],\n              \"。\"\n            ]\n          ]\n        ]\n      ]\n    ],\n    [\n      \"h2\",\n      \"4.0 有哪些不兼容的变化\"\n    ],\n    [\n      \"h3\",\n      \"设计规范调整\"\n    ],\n    [\n      \"ul\",\n      [\n        \"li\",\n        [\n          \"p\",\n          \"行高从 \",\n          [\n            \"code\",\n            \"1.5\"\n          ],\n          \"(\",\n          [\n            \"code\",\n            \"21px\"\n          ],\n          \") 调整为 \",\n          [\n            \"code\",\n            \"1.5715\"\n          ],\n          \"(\",\n          [\n            \"code\",\n            \"22px\"\n          ],\n          \")。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"字体颜色从 \",\n          [\n            \"code\",\n            \"rgba(0, 0, 0, 0.65)\"\n          ],\n          \" 调深为 \",\n          [\n            \"code\",\n            \"rgba(0, 0, 0, 0.85)\"\n          ],\n          \"。\",\n          [\n            \"code\",\n            \"4.6.0\"\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"基础圆角调整，由 \",\n          [\n            \"code\",\n            \"4px\"\n          ],\n          \" 改为 \",\n          [\n            \"code\",\n            \"2px\"\n          ],\n          \"。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"Selected 颜色和 Hovered 颜色进行了交换。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"全局阴影优化，调整为三层阴影区分控件层次关系。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"气泡确认框中图标的使用改变，由问号改为感叹号。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"部分组件选中颜色统一改为 \",\n          [\n            \"code\",\n            \"@blue-1: #E6F7FF\"\n          ],\n          \"，对应 \",\n          [\n            \"code\",\n            \"hover\"\n          ],\n          \" 颜色改为 \",\n          [\n            \"code\",\n            \"@gray-2: #FAFAFA\"\n          ],\n          \"。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"报错色色值调整，由 \",\n          [\n            \"code\",\n            \"@red-5: #F5222D\"\n          ],\n          \" 改为 \",\n          [\n            \"code\",\n            \"@red-5: #FF4D4F\"\n          ],\n          \"。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"分割线颜色明度降低，由 \",\n          [\n            \"code\",\n            \"#E8E8E8\"\n          ],\n          \" 改为 \",\n          [\n            \"code\",\n            \"#F0F0F0\"\n          ],\n          \"。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"DatePicker 交互重做，面板和输入框分离，范围选择现可单独选择开始和结束时间。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"Table 默认背景颜色从透明修改为白色。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"Tabs 火柴棍样式缩短为和文字等长。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"Tabs 交互重做，DOM 结构改变。\",\n          [\n            \"code\",\n            \"4.3.0\"\n          ]\n        ]\n      ]\n    ],\n    [\n      \"h3\",\n      \"兼容性调整\"\n    ],\n    [\n      \"ul\",\n      [\n        \"li\",\n        [\n          \"p\",\n          \"IE 最低支持版本为 IE 11。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"React 最低支持版本为 React 16.9，部分组件开始使用 hooks 进行重构。\"\n        ],\n        [\n          \"ul\",\n          [\n            \"li\",\n            [\n              \"p\",\n              \"重构通过 \",\n              [\n                \"code\",\n                \"useMemo\"\n              ],\n              \" 进行性能优化，请勿使用 mutable data 作为参数。\"\n            ]\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"最低支持的 less 版本为 3.1.0，建议升级到 less 4.x 最新版本。\"\n        ]\n      ]\n    ],\n    [\n      \"h4\",\n      \"移除废弃的 API\"\n    ],\n    [\n      \"ul\",\n      [\n        \"li\",\n        [\n          \"p\",\n          \"移除了 LocaleProvider，请使用 \",\n          [\n            \"code\",\n            \"ConfigProvider\"\n          ],\n          \" 替代。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"移除了 Mention，请使用 \",\n          [\n            \"code\",\n            \"Mentions\"\n          ],\n          \" 替代。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"移除了 Alert 的 \",\n          [\n            \"code\",\n            \"iconType\"\n          ],\n          \" 属性，请使用 \",\n          [\n            \"code\",\n            \"icon\"\n          ],\n          \" 替代。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"移除了 Modal.xxx 的 \",\n          [\n            \"code\",\n            \"iconType\"\n          ],\n          \" 属性，请使用 \",\n          [\n            \"code\",\n            \"icon\"\n          ],\n          \" 替代。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"移除了 Form.create 方法，\",\n          [\n            \"code\",\n            \"form\"\n          ],\n          \" 现可由 \",\n          [\n            \"code\",\n            \"Form.useForm\"\n          ],\n          \" 获取。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"移除了 Form.Item 的 \",\n          [\n            \"code\",\n            \"id\"\n          ],\n          \" 属性，请使用 \",\n          [\n            \"code\",\n            \"htmlFor\"\n          ],\n          \" 替代。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"移除了 Typography 的 \",\n          [\n            \"code\",\n            \"setContentRef\"\n          ],\n          \" 属性，请使用 \",\n          [\n            \"code\",\n            \"ref\"\n          ],\n          \" 替代。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"移除了 TimePicker 的 \",\n          [\n            \"code\",\n            \"allowEmpty\"\n          ],\n          \" 属性，请使用 \",\n          [\n            \"code\",\n            \"allowClear\"\n          ],\n          \" 替代。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"移除了 Tag 的 \",\n          [\n            \"code\",\n            \"afterClose\"\n          ],\n          \" 属性，请使用 \",\n          [\n            \"code\",\n            \"onClose\"\n          ],\n          \" 替代。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"移除了 Card 的 \",\n          [\n            \"code\",\n            \"noHovering\"\n          ],\n          \" 属性，请使用 \",\n          [\n            \"code\",\n            \"hoverable\"\n          ],\n          \" 替代。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"移除了 Carousel 的 \",\n          [\n            \"code\",\n            \"vertical\"\n          ],\n          \" 属性，请使用 \",\n          [\n            \"code\",\n            \"dotPosition\"\n          ],\n          \" 替代。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"移除了 Drawer 的 \",\n          [\n            \"code\",\n            \"wrapClassName\"\n          ],\n          \" 属性，请使用 \",\n          [\n            \"code\",\n            \"className\"\n          ],\n          \" 替代。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"移除了 TextArea 的 \",\n          [\n            \"code\",\n            \"autosize\"\n          ],\n          \" 属性，请使用 \",\n          [\n            \"code\",\n            \"autoSize\"\n          ],\n          \" 替代。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"移除了 Affix 的 \",\n          [\n            \"code\",\n            \"offset\"\n          ],\n          \" 属性，请使用 \",\n          [\n            \"code\",\n            \"offsetTop\"\n          ],\n          \" 替代。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"移除了 Transfer 的 \",\n          [\n            \"code\",\n            \"onSearchChange\"\n          ],\n          \" 属性，请使用 \",\n          [\n            \"code\",\n            \"onSearch\"\n          ],\n          \" 替代。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"移除了 Transfer 的 \",\n          [\n            \"code\",\n            \"body\"\n          ],\n          \" 属性，请使用 \",\n          [\n            \"code\",\n            \"children\"\n          ],\n          \" 替代。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"移除了 Transfer 的 \",\n          [\n            \"code\",\n            \"lazy\"\n          ],\n          \" 属性，它并没有起到真正的优化效果。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"移除了 Select 的 \",\n          [\n            \"code\",\n            \"combobox\"\n          ],\n          \" 模式，请使用 \",\n          [\n            \"code\",\n            \"AutoComplete\"\n          ],\n          \" 替代。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"移除了 Table 的 \",\n          [\n            \"code\",\n            \"rowSelection.hideDefaultSelections\"\n          ],\n          \" 属性，请在 \",\n          [\n            \"code\",\n            \"rowSelection.selections\"\n          ],\n          \" 中使用 \",\n          [\n            \"code\",\n            \"SELECTION_ALL\"\n          ],\n          \" 和 \",\n          [\n            \"code\",\n            \"SELECTION_INVERT\"\n          ],\n          \" 替代，\",\n          [\n            \"a\",\n            {\n              \"title\": null,\n              \"href\": \"/components/table/#components-table-demo-row-selection-custom\"\n            },\n            \"自定义选择项\"\n          ],\n          \"。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"废弃 Button.Group，请使用 \",\n          [\n            \"code\",\n            \"Space\"\n          ],\n          \" 代替。\"\n        ]\n      ]\n    ],\n    [\n      \"h4\",\n      \"图标升级\"\n    ],\n    [\n      \"p\",\n      \"在 \",\n      [\n        \"code\",\n        \"antd@3.9.0\"\n      ],\n      \" 中，我们引入了 svg 图标（\",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://github.com/ant-design/ant-design/issues/10353\"\n        },\n        \"为何使用 svg 图标？\"\n      ],\n      \"）。使用了字符串命名的图标 API 无法做到按需加载，因而全量引入了 svg 图标文件，这大大增加了打包产物的尺寸。在 4.0 中，我们调整了图标的使用 API 从而支持 tree shaking，减少 antd 默认包体积约 150 KB(Gzipped)。\"\n    ],\n    [\n      \"p\",\n      \"旧版 Icon 使用方式将被废弃：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Icon<span class=\\\"token punctuation\\\">,</span> Button <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'antd'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> Demo <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Icon</span> <span class=\\\"token attr-name\\\">type</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>smile<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Button</span> <span class=\\\"token attr-name\\\">icon</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>smile<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"import { Icon, Button } from 'antd';\\n\\nconst Demo = () => (\\n  <div>\\n    <Icon type=\\\"smile\\\" />\\n    <Button icon=\\\"smile\\\" />\\n  </div>\\n);\"\n      ]\n    ],\n    [\n      \"p\",\n      \"4.0 中会采用按需引入的方式：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"diff\",\n        \"highlighted\": \"  import { Button } from 'antd';\\n\\n  // tree-shaking supported\\n<span class=\\\"token deleted\\\">- import { Icon } from 'antd';</span>\\n<span class=\\\"token inserted\\\">+ import { SmileOutlined } from '@ant-design/icons';</span>\\n\\n  const Demo = () => (\\n    &lt;div>\\n<span class=\\\"token deleted\\\">-     &lt;Icon type=\\\"smile\\\" /></span>\\n<span class=\\\"token inserted\\\">+     &lt;SmileOutlined /></span>\\n      &lt;Button icon={&lt;SmileOutlined />} />\\n    &lt;/div>\\n  );\\n\\n  // or directly import\\n  import SmileOutlined from '@ant-design/icons/SmileOutlined';\"\n      },\n      [\n        \"code\",\n        \"  import { Button } from 'antd';\\n\\n  // tree-shaking supported\\n- import { Icon } from 'antd';\\n+ import { SmileOutlined } from '@ant-design/icons';\\n\\n  const Demo = () => (\\n    <div>\\n-     <Icon type=\\\"smile\\\" />\\n+     <SmileOutlined />\\n      <Button icon={<SmileOutlined />} />\\n    </div>\\n  );\\n\\n  // or directly import\\n  import SmileOutlined from '@ant-design/icons/SmileOutlined';\"\n      ]\n    ],\n    [\n      \"p\",\n      \"你将仍然可以通过兼容包继续使用：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"jsx\",\n        \"highlighted\": \"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Button <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'antd'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Icon <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'@ant-design/compatible'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> Demo <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Icon</span> <span class=\\\"token attr-name\\\">type</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>smile<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Button</span> <span class=\\\"token attr-name\\\">icon</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>smile<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"import { Button } from 'antd';\\nimport { Icon } from '@ant-design/compatible';\\n\\nconst Demo = () => (\\n  <div>\\n    <Icon type=\\\"smile\\\" />\\n    <Button icon=\\\"smile\\\" />\\n  </div>\\n);\"\n      ]\n    ],\n    [\n      \"h4\",\n      \"组件重构\"\n    ],\n    [\n      \"ul\",\n      [\n        \"li\",\n        [\n          \"p\",\n          \"Form 重写\"\n        ],\n        [\n          \"ul\",\n          [\n            \"li\",\n            [\n              \"p\",\n              \"不再需要 \",\n              [\n                \"code\",\n                \"Form.create\"\n              ],\n              \"。\"\n            ]\n          ],\n          [\n            \"li\",\n            [\n              \"p\",\n              \"嵌套字段支持从 \",\n              [\n                \"code\",\n                \"'xxx.yyy'\"\n              ],\n              \" 改成 \",\n              [\n                \"code\",\n                \"['xxx', 'yyy']\"\n              ],\n              \"。\"\n            ]\n          ],\n          [\n            \"li\",\n            [\n              \"p\",\n              [\n                \"code\",\n                \"validateTrigger\"\n              ],\n              \" 不再收集字段值。\"\n            ]\n          ],\n          [\n            \"li\",\n            [\n              \"p\",\n              \"迁移文档请查看\",\n              [\n                \"a\",\n                {\n                  \"title\": null,\n                  \"href\": \"/components/form/v3\"\n                },\n                \"此处\"\n              ],\n              \"。\"\n            ]\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"DatePicker 重写\"\n        ],\n        [\n          \"ul\",\n          [\n            \"li\",\n            [\n              \"p\",\n              \"提供 \",\n              [\n                \"code\",\n                \"picker\"\n              ],\n              \" 属性用于选择器切换。\"\n            ]\n          ],\n          [\n            \"li\",\n            [\n              \"p\",\n              \"范围选择现在可以单独选择开始和结束时间。\"\n            ]\n          ],\n          [\n            \"li\",\n            [\n              \"p\",\n              [\n                \"code\",\n                \"onPanelChange\"\n              ],\n              \" 在面板值变化时也会触发。\"\n            ]\n          ],\n          [\n            \"li\",\n            [\n              \"p\",\n              [\n                \"a\",\n                {\n                  \"title\": null,\n                  \"href\": \"/components/date-picker-cn/#components-date-picker-demo-date-render\"\n                },\n                \"自定义单元格样式\"\n              ],\n              \"的类名从 \",\n              [\n                \"code\",\n                \"ant-calendar-date\"\n              ],\n              \" 改为 \",\n              [\n                \"code\",\n                \"ant-picker-cell-inner\"\n              ],\n              \"。\"\n            ]\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"Tree、Select、TreeSelect、AutoComplete 重新写\"\n        ],\n        [\n          \"ul\",\n          [\n            \"li\",\n            [\n              \"p\",\n              \"使用虚拟滚动。\"\n            ]\n          ],\n          [\n            \"li\",\n            [\n              \"p\",\n              [\n                \"code\",\n                \"onBlur\"\n              ],\n              \" 时不再修改选中值，且返回 React 原生的 \",\n              [\n                \"code\",\n                \"event\"\n              ],\n              \" 对象。\"\n            ],\n            [\n              \"ul\",\n              [\n                \"li\",\n                [\n                  \"p\",\n                  \"如果你在使用兼容包的 Form 且配置了 \",\n                  [\n                    \"code\",\n                    \"validateTrigger\"\n                  ],\n                  \" 为 \",\n                  [\n                    \"code\",\n                    \"onBlur\"\n                  ],\n                  \"，请改至 \",\n                  [\n                    \"code\",\n                    \"onChange\"\n                  ],\n                  \" 以做兼容。\"\n                ]\n              ]\n            ]\n          ],\n          [\n            \"li\",\n            [\n              \"p\",\n              \"AutoComplete 不再支持 \",\n              [\n                \"code\",\n                \"optionLabelProp\"\n              ],\n              \"，请直接设置 Option \",\n              [\n                \"code\",\n                \"value\"\n              ],\n              \" 属性。\"\n            ]\n          ],\n          [\n            \"li\",\n            [\n              \"p\",\n              \"AutoComplete 选项与 Select 对齐，请使用 \",\n              [\n                \"code\",\n                \"options\"\n              ],\n              \" 代替 \",\n              [\n                \"code\",\n                \"dataSource\"\n              ],\n              \"。\"\n            ]\n          ],\n          [\n            \"li\",\n            [\n              \"p\",\n              \"Select 移除 \",\n              [\n                \"code\",\n                \"dropdownMenuStyle\"\n              ],\n              \" 属性。\"\n            ]\n          ],\n          [\n            \"li\",\n            [\n              \"p\",\n              \"如果你需要设置弹窗高度请使用 \",\n              [\n                \"code\",\n                \"listHeight\"\n              ],\n              \" 来代替 \",\n              [\n                \"code\",\n                \"dropdownStyle\"\n              ],\n              \" 的高度样式。\"\n            ]\n          ],\n          [\n            \"li\",\n            [\n              \"p\",\n              [\n                \"code\",\n                \"filterOption\"\n              ],\n              \" 第二个参数直接返回原数据，不在需要通过 \",\n              [\n                \"code\",\n                \"option.props.children\"\n              ],\n              \" 来进行匹配。\"\n            ]\n          ],\n          [\n            \"li\",\n            [\n              \"p\",\n              \"Tree、TreeSelect 同时指定 \",\n              [\n                \"code\",\n                \"title\"\n              ],\n              \" 和 \",\n              [\n                \"code\",\n                \"label\"\n              ],\n              \" 的时候，会选择显示 \",\n              [\n                \"code\",\n                \"label\"\n              ],\n              \"。为了 \",\n              [\n                \"code\",\n                \"labelInValue\"\n              ],\n              \" 行为一致进行了该调整。\",\n              [\n                \"a\",\n                {\n                  \"title\": null,\n                  \"href\": \"https://codesandbox.io/s/keen-curran-d3qnp\"\n                },\n                \"新行为\"\n              ],\n              \"（在第一个节点展示 'label'），\",\n              [\n                \"a\",\n                {\n                  \"title\": null,\n                  \"href\": \"https://codesandbox.io/s/muddy-darkness-57lb3\"\n                },\n                \"旧行为\"\n              ],\n              \"（在第一个节点展示 'title'）。\"\n            ]\n          ],\n          [\n            \"li\",\n            [\n              \"p\",\n              \"Tree 传入内容采用 \",\n              [\n                \"code\",\n                \"treeData\"\n              ],\n              \" 属性，来代替 \",\n              [\n                \"code\",\n                \"TreeNode\"\n              ],\n              \" 方式，TreeNode 依然可用，但是会在控制台抛出警告。\"\n            ]\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"Grid 组件使用 flex 布局。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"Button 的 \",\n          [\n            \"code\",\n            \"danger\"\n          ],\n          \" 现在作为一个属性而不是按钮类型。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"Input、Select 的 \",\n          [\n            \"code\",\n            \"value\"\n          ],\n          \" 为 \",\n          [\n            \"code\",\n            \"undefined\"\n          ],\n          \" 时改为非受控状态。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"Table 重写\"\n        ],\n        [\n          \"ul\",\n          [\n            \"li\",\n            [\n              \"p\",\n              \"在没有 \",\n              [\n                \"code\",\n                \"columns\"\n              ],\n              \" 时仍然会保留一列。\"\n            ]\n          ],\n          [\n            \"li\",\n            [\n              \"p\",\n              \"嵌套 \",\n              [\n                \"code\",\n                \"dataIndex\"\n              ],\n              \" 支持从 \",\n              [\n                \"code\",\n                \"'xxx.yyy'\"\n              ],\n              \" 改成 \",\n              [\n                \"code\",\n                \"['xxx', 'yyy']\"\n              ],\n              \"。\"\n            ]\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"Pagination 重写\"\n        ],\n        [\n          \"ul\",\n          [\n            \"li\",\n            [\n              \"p\",\n              \"自 \",\n              [\n                \"code\",\n                \"4.1.0\"\n              ],\n              \" 起大于 50 条数据默认会展示 \",\n              [\n                \"code\",\n                \"pageSize\"\n              ],\n              \" 切换器，这条规则同样会运用于 Table 上。\"\n            ]\n          ],\n          [\n            \"li\",\n            [\n              \"p\",\n              [\n                \"code\",\n                \"onChange\"\n              ],\n              \" 方法在 \",\n              [\n                \"code\",\n                \"pageSize\"\n              ],\n              \" 值改变时也会触发。\"\n            ]\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"Tabs 重写（\",\n          [\n            \"a\",\n            {\n              \"title\": null,\n              \"href\": \"https://github.com/ant-design/ant-design/pull/24552\"\n            },\n            \"4.3.0\"\n          ],\n          \"）\"\n        ],\n        [\n          \"ul\",\n          [\n            \"li\",\n            [\n              \"p\",\n              \"Dom 结构变化，如有覆盖样式需要仔细检查。\"\n            ]\n          ],\n          [\n            \"li\",\n            [\n              \"p\",\n              \"横向滚动交互变化，\",\n              [\n                \"code\",\n                \"onPrevClick\"\n              ],\n              \" 和 \",\n              [\n                \"code\",\n                \"onNextClick\"\n              ],\n              \" 不再工作。\"\n            ]\n          ]\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"less 变量变化，如 DatePicker/TimePicker/Calendar 相关变量已全部重构，又如 \",\n          [\n            \"a\",\n            {\n              \"title\": null,\n              \"href\": \"https://github.com/ant-design/ant-design/issues/28141\"\n            },\n            \"@btn-padding-base\"\n          ],\n          \" 等进行了重命名，具体变化请自行对比 \",\n          [\n            \"a\",\n            {\n              \"title\": null,\n              \"href\": \"https://github.com/ant-design/ant-design/blob/3.x-stable/components/style/themes/default.less\"\n            },\n            \"3.x 变量\"\n          ],\n          \" 和 \",\n          [\n            \"a\",\n            {\n              \"title\": null,\n              \"href\": \"https://github.com/ant-design/ant-design/blob/master/components/style/themes/default.less\"\n            },\n            \"4.x 变量\"\n          ],\n          \"。\"\n        ]\n      ]\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"diff\",\n        \"highlighted\": \"<span class=\\\"token deleted\\\">&lt;Table</span>\\n  columns={[\\n    {\\n      title: 'Age',\\n<span class=\\\"token deleted\\\">-     dataIndex: 'user.age',</span>\\n<span class=\\\"token inserted\\\">+     dataIndex: ['user', 'age'],</span>\\n    },\\n  ]}\\n/>\"\n      },\n      [\n        \"code\",\n        \"<Table\\n  columns={[\\n    {\\n      title: 'Age',\\n-     dataIndex: 'user.age',\\n+     dataIndex: ['user', 'age'],\\n    },\\n  ]}\\n/>\"\n      ]\n    ],\n    [\n      \"h2\",\n      \"开始升级\"\n    ],\n    [\n      \"p\",\n      \"你可以手动对照上面的列表逐条检查代码进行修改，另外，我们也提供了一个 codemod cli 工具 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://github.com/ant-design/codemod-v4\"\n        },\n        \"@ant-design/codemod-v4\"\n      ],\n      \" 以帮助你快速升级到 v4 版本。\"\n    ],\n    [\n      \"p\",\n      \"在运行 codemod cli 前，请先提交你的本地代码修改。\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"shell\",\n        \"highlighted\": \"# 通过 npx 直接运行\\nnpx <span class=\\\"token operator\\\">-</span>p <span class=\\\"token variable\\\">@ant</span><span class=\\\"token operator\\\">-</span>design<span class=\\\"token operator\\\">/</span>codemod<span class=\\\"token operator\\\">-</span>v4 antd4<span class=\\\"token operator\\\">-</span>codemod src\\n\\n# 或者全局安装\\n# 使用 npm\\nnpm i <span class=\\\"token operator\\\">-</span>g <span class=\\\"token variable\\\">@ant</span><span class=\\\"token operator\\\">-</span>design<span class=\\\"token operator\\\">/</span>codemod<span class=\\\"token operator\\\">-</span>v4\\n# 或者使用 yarn\\nyarn <span class=\\\"token keyword\\\">global</span> add <span class=\\\"token variable\\\">@ant</span><span class=\\\"token operator\\\">-</span>design<span class=\\\"token operator\\\">/</span>codemod<span class=\\\"token operator\\\">-</span>v4\\n\\n# 运行\\nantd4<span class=\\\"token operator\\\">-</span>codemod src\"\n      },\n      [\n        \"code\",\n        \"# 通过 npx 直接运行\\nnpx -p @ant-design/codemod-v4 antd4-codemod src\\n\\n# 或者全局安装\\n# 使用 npm\\nnpm i -g @ant-design/codemod-v4\\n# 或者使用 yarn\\nyarn global add @ant-design/codemod-v4\\n\\n# 运行\\nantd4-codemod src\"\n      ]\n    ],\n    [\n      \"p\",\n      [\n        \"img\",\n        {\n          \"src\": \"https://gw.alipayobjects.com/mdn/rms_08e378/afts/img/A*QdcbQoLC-cQAAAAAAAAAAABkARQnAQ\",\n          \"alt\": \"codemod running\",\n          \"width\": \"720\"\n        }\n      ]\n    ],\n    [\n      \"p\",\n      \"对于无法自动修改的部分，codemod 会在命令行进行提示，建议按提示手动修改。修改后可以反复运行上述命令进行检查。\"\n    ],\n    [\n      \"p\",\n      [\n        \"img\",\n        {\n          \"src\": \"https://gw.alipayobjects.com/mdn/rms_08e378/afts/img/A*KQwWSrPirlUAAAAAAAAAAABkARQnAQ\",\n          \"alt\": \"contains an invalid icon\",\n          \"width\": \"720\"\n        }\n      ]\n    ],\n    [\n      \"blockquote\",\n      [\n        \"p\",\n        \"注意 codemod 不能涵盖所有场景，建议还是要按不兼容的变化逐条排查。\"\n      ]\n    ],\n    [\n      \"h3\",\n      \"迁移工具修改详情\"\n    ],\n    [\n      \"p\",\n      [\n        \"code\",\n        \"@ant-design/codemod-v4\"\n      ],\n      \" 会帮你迁移到 antd v4, 废弃的组件则通过 \",\n      [\n        \"code\",\n        \"@ant-design/compatible\"\n      ],\n      \" 保持运行, 一般来说你无需手动迁移。下方内容详细介绍了整体的迁移和变化，你也可以参照变动手动修改。\"\n    ],\n    [\n      \"h4\",\n      \"将已废弃的 \",\n      [\n        \"code\",\n        \"Form\"\n      ],\n      \" 和 \",\n      [\n        \"code\",\n        \"Mention\"\n      ],\n      \" 组件通过 \",\n      [\n        \"code\",\n        \"@ant-design/compatible\"\n      ],\n      \" 包引入\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"diff\",\n        \"highlighted\": \"<span class=\\\"token deleted\\\">- import { Form, Input, Button, Mention } from 'antd';</span>\\n<span class=\\\"token inserted\\\">+ import { Form, Mention } from '@ant-design/compatible';</span>\\n<span class=\\\"token inserted\\\">+ import '@ant-design/compatible/assets/index.css';</span>\\n<span class=\\\"token inserted\\\">+ import { Input, Button } from 'antd';</span>\\n\\n  ReactDOM.render(\\n    &lt;>\\n      &lt;Form>\\n        {getFieldDecorator('username')(&lt;Input />)}\\n        &lt;Button>Submit&lt;/Button>\\n      &lt;/Form>\\n      &lt;Mention\\n        style={{ width: '100%' }}\\n        onChange={onChange}\\n        defaultValue={toContentState('@afc163')}\\n        defaultSuggestions={['afc163', 'benjycui']}\\n        onSelect={onSelect}\\n      />\\n    &lt;/>\\n  );\"\n      },\n      [\n        \"code\",\n        \"- import { Form, Input, Button, Mention } from 'antd';\\n+ import { Form, Mention } from '@ant-design/compatible';\\n+ import '@ant-design/compatible/assets/index.css';\\n+ import { Input, Button } from 'antd';\\n\\n  ReactDOM.render(\\n    <>\\n      <Form>\\n        {getFieldDecorator('username')(<Input />)}\\n        <Button>Submit</Button>\\n      </Form>\\n      <Mention\\n        style={{ width: '100%' }}\\n        onChange={onChange}\\n        defaultValue={toContentState('@afc163')}\\n        defaultSuggestions={['afc163', 'benjycui']}\\n        onSelect={onSelect}\\n      />\\n    </>\\n  );\"\n      ]\n    ],\n    [\n      \"blockquote\",\n      [\n        \"p\",\n        [\n          \"strong\",\n          \"注意：\"\n        ],\n        \"从 \",\n        [\n          \"code\",\n          \"@ant-design/compatible\"\n        ],\n        \" 引入的老版本 Form 组件，样式类名会从 \",\n        [\n          \"code\",\n          \".ant-form\"\n        ],\n        \" 变成 \",\n        [\n          \"code\",\n          \".ant-legacy-form\"\n        ],\n        \"，如果你对其进行了样式覆盖，也需要相应修改。\"\n      ]\n    ],\n    [\n      \"h4\",\n      \"用新的 \",\n      [\n        \"code\",\n        \"@ant-design/icons\"\n      ],\n      \" 替换字符串类型的 \",\n      [\n        \"code\",\n        \"icon\"\n      ],\n      \" 属性值\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"diff\",\n        \"highlighted\": \"  import { Avatar, Button, Result } from 'antd';\\n<span class=\\\"token inserted\\\">+ import { QuestionOutlined, UserOutlined } from '@ant-design/icons';</span>\\n\\n  ReactDOM.render(\\n    &lt;div>\\n<span class=\\\"token deleted\\\">-     &lt;Button type=\\\"primary\\\" shape=\\\"circle\\\" icon=\\\"search\\\" /></span>\\n<span class=\\\"token inserted\\\">+     &lt;Button type=\\\"primary\\\" shape=\\\"circle\\\" icon={SearchOutlined} /></span>\\n<span class=\\\"token deleted\\\">-     &lt;Avatar shape=\\\"square\\\" icon=\\\"user\\\" /></span>\\n<span class=\\\"token inserted\\\">+     &lt;Avatar shape=\\\"square\\\" icon={UserOutlined} /></span>\\n      &lt;Result\\n<span class=\\\"token deleted\\\">-       icon=\\\"question\\\"</span>\\n<span class=\\\"token inserted\\\">+       icon={&lt;QuestionOutlined />}</span>\\n        title=\\\"Great, we have done all the operations!\\\"\\n        extra={&lt;Button type=\\\"primary\\\">Next&lt;/Button>}\\n      />\\n    &lt;/div>,\\n    mountNode,\\n  );\"\n      },\n      [\n        \"code\",\n        \"  import { Avatar, Button, Result } from 'antd';\\n+ import { QuestionOutlined, UserOutlined } from '@ant-design/icons';\\n\\n  ReactDOM.render(\\n    <div>\\n-     <Button type=\\\"primary\\\" shape=\\\"circle\\\" icon=\\\"search\\\" />\\n+     <Button type=\\\"primary\\\" shape=\\\"circle\\\" icon={SearchOutlined} />\\n-     <Avatar shape=\\\"square\\\" icon=\\\"user\\\" />\\n+     <Avatar shape=\\\"square\\\" icon={UserOutlined} />\\n      <Result\\n-       icon=\\\"question\\\"\\n+       icon={<QuestionOutlined />}\\n        title=\\\"Great, we have done all the operations!\\\"\\n        extra={<Button type=\\\"primary\\\">Next</Button>}\\n      />\\n    </div>,\\n    mountNode,\\n  );\"\n      ]\n    ],\n    [\n      \"h4\",\n      \"将 v3 Icon 组件转换成 \",\n      [\n        \"code\",\n        \"@ant-design/icons\"\n      ],\n      \" 中引入\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"diff\",\n        \"highlighted\": \"<span class=\\\"token deleted\\\">- import { Icon, Input } from 'antd';</span>\\n<span class=\\\"token inserted\\\">+ import { Input } from 'antd';</span>\\n<span class=\\\"token inserted\\\">+ import Icon, { CodeFilled, SmileOutlined, SmileTwoTone } from '@ant-design/icons';</span>\\n\\n  const HeartSvg = () => (\\n    &lt;svg width=\\\"1em\\\" height=\\\"1em\\\" fill=\\\"currentColor\\\" viewBox=\\\"0 0 1024 1024\\\">\\n      &lt;path d=\\\"M923 plapla...\\\" />\\n    &lt;/svg>\\n  );\\n\\n  const HeartIcon = props => &lt;Icon component={HeartSvg} {...props} />;\\n\\n  ReactDOM.render(\\n    &lt;div>\\n<span class=\\\"token deleted\\\">-     &lt;Icon type=\\\"code\\\" theme=\\\"filled\\\" /></span>\\n<span class=\\\"token inserted\\\">+     &lt;CodeFilled /></span>\\n<span class=\\\"token deleted\\\">-     &lt;Icon type=\\\"smile\\\" theme=\\\"twoTone\\\" twoToneColor=\\\"#eb2f96\\\" /></span>\\n<span class=\\\"token inserted\\\">+     &lt;SmileTwoTone twoToneColor=\\\"#eb2f96\\\" /></span>\\n<span class=\\\"token deleted\\\">-     &lt;Icon type=\\\"code\\\" theme={props.fill ? 'filled' : 'outlined'} /></span>\\n<span class=\\\"token inserted\\\">+     &lt;LegacyIcon type=\\\"code\\\" theme={props.fill ? 'filled' : 'outlined'} /></span>\\n      &lt;HeartIcon />\\n      &lt;Icon viewBox=\\\"0 0 24 24\\\">\\n        &lt;title>Cool Home&lt;/title>\\n        &lt;path d=\\\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\\\" />\\n      &lt;/Icon>\\n      &lt;Input suffix={&lt;SmileOutlined />} />\\n    &lt;/div>,\\n    mountNode,\\n  );\"\n      },\n      [\n        \"code\",\n        \"- import { Icon, Input } from 'antd';\\n+ import { Input } from 'antd';\\n+ import Icon, { CodeFilled, SmileOutlined, SmileTwoTone } from '@ant-design/icons';\\n\\n  const HeartSvg = () => (\\n    <svg width=\\\"1em\\\" height=\\\"1em\\\" fill=\\\"currentColor\\\" viewBox=\\\"0 0 1024 1024\\\">\\n      <path d=\\\"M923 plapla...\\\" />\\n    </svg>\\n  );\\n\\n  const HeartIcon = props => <Icon component={HeartSvg} {...props} />;\\n\\n  ReactDOM.render(\\n    <div>\\n-     <Icon type=\\\"code\\\" theme=\\\"filled\\\" />\\n+     <CodeFilled />\\n-     <Icon type=\\\"smile\\\" theme=\\\"twoTone\\\" twoToneColor=\\\"#eb2f96\\\" />\\n+     <SmileTwoTone twoToneColor=\\\"#eb2f96\\\" />\\n-     <Icon type=\\\"code\\\" theme={props.fill ? 'filled' : 'outlined'} />\\n+     <LegacyIcon type=\\\"code\\\" theme={props.fill ? 'filled' : 'outlined'} />\\n      <HeartIcon />\\n      <Icon viewBox=\\\"0 0 24 24\\\">\\n        <title>Cool Home</title>\\n        <path d=\\\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\\\" />\\n      </Icon>\\n      <Input suffix={<SmileOutlined />} />\\n    </div>,\\n    mountNode,\\n  );\"\n      ]\n    ],\n    [\n      \"h4\",\n      \"将 v3 LocaleProvider 组件转换成 v4 ConfigProvider 组件\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"diff\",\n        \"highlighted\": \"<span class=\\\"token deleted\\\">- import { LocaleProvider } from 'antd';</span>\\n<span class=\\\"token inserted\\\">+ import { ConfigProvider } from 'antd';</span>\\n\\n  ReactDOM.render(\\n<span class=\\\"token deleted\\\">-   &lt;LocaleProvider {...yourConfig}></span>\\n<span class=\\\"token inserted\\\">+   &lt;ConfigProvider {...yourConfig}></span>\\n      &lt;Main />\\n<span class=\\\"token deleted\\\">-   &lt;/LocaleProvider></span>\\n<span class=\\\"token inserted\\\">+   &lt;/ConfigProvider></span>\\n    mountNode,\\n  );\"\n      },\n      [\n        \"code\",\n        \"- import { LocaleProvider } from 'antd';\\n+ import { ConfigProvider } from 'antd';\\n\\n  ReactDOM.render(\\n-   <LocaleProvider {...yourConfig}>\\n+   <ConfigProvider {...yourConfig}>\\n      <Main />\\n-   </LocaleProvider>\\n+   </ConfigProvider>\\n    mountNode,\\n  );\"\n      ]\n    ],\n    [\n      \"h4\",\n      \"将 \",\n      [\n        \"code\",\n        \"Modal.method()\"\n      ],\n      \" 中字符串 icon 属性的调用转换成从 \",\n      [\n        \"code\",\n        \"@ant-design/icons\"\n      ],\n      \" 中引入\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"diff\",\n        \"highlighted\": \"  import { Modal } from 'antd';\\n<span class=\\\"token inserted\\\">+ import { AntDesignOutlined } from '@ant-design/icons';</span>\\n\\n  Modal.confirm({\\n<span class=\\\"token deleted\\\">-  icon: 'ant-design',</span>\\n<span class=\\\"token inserted\\\">+  icon: &lt;AntDesignOutlined />,</span>\\n   title: 'Do you Want to delete these items?',\\n   content: 'Some descriptions',\\n   onOk() {\\n     console.log('OK');\\n   },\\n   onCancel() {\\n     console.log('Cancel');\\n   },\\n });\"\n      },\n      [\n        \"code\",\n        \"  import { Modal } from 'antd';\\n+ import { AntDesignOutlined } from '@ant-design/icons';\\n\\n  Modal.confirm({\\n-  icon: 'ant-design',\\n+  icon: <AntDesignOutlined />,\\n   title: 'Do you Want to delete these items?',\\n   content: 'Some descriptions',\\n   onOk() {\\n     console.log('OK');\\n   },\\n   onCancel() {\\n     console.log('Cancel');\\n   },\\n });\"\n      ]\n    ],\n    [\n      \"h2\",\n      \"遇到问题\"\n    ],\n    [\n      \"p\",\n      \"v4 做了非常多的细节改进和重构，我们尽可能收集了已知的所有不兼容变化和相关影响，但是有可能还是有一些场景我们没有考虑到。如果你在升级过程中遇到了问题，请到 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"http://new-issue.ant.design/\"\n        },\n        \"GitHub issues\"\n      ],\n      \" 和 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"https://github.com/ant-design/codemod-v4/issues\"\n        },\n        \"codemod Issues\"\n      ],\n      \" 进行反馈。我们会尽快响应和相应改进这篇文档。\"\n    ]\n  ],\n  \"meta\": {\n    \"order\": 8,\n    \"title\": \"从 v3 到 v4\",\n    \"filename\": \"docs/react/migration-v4.zh-CN.md\"\n  },\n  \"toc\": [\n    \"ul\",\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#升级准备\",\n          \"title\": \"升级准备\"\n        },\n        \"升级准备\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#4.0-有哪些不兼容的变化\",\n          \"title\": \"4.0 有哪些不兼容的变化\"\n        },\n        \"4.0 有哪些不兼容的变化\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#开始升级\",\n          \"title\": \"开始升级\"\n        },\n        \"开始升级\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#遇到问题\",\n          \"title\": \"遇到问题\"\n        },\n        \"遇到问题\"\n      ]\n    ]\n  ]\n};\n\n//# sourceURL=webpack:///./docs/react/migration-v4.zh-CN.md?./node_modules/bisheng/lib/loaders/source-loader.js");

/***/ })

}]);