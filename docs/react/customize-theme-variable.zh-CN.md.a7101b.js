(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["docs/react/customize-theme-variable.zh-CN.md"],{

/***/ "./node_modules/bisheng/lib/loaders/source-loader.js!./docs/react/customize-theme-variable.zh-CN.md":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/bisheng/lib/loaders/source-loader.js!./docs/react/customize-theme-variable.zh-CN.md ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = {\n  \"content\": [\n    \"article\",\n    [\n      \"p\",\n      \"除了 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"/docs/react/customize-theme\"\n        },\n        \"less 定制主题\"\n      ],\n      \" 外，我们还提供了 CSS Variable 版本以支持动态切换主题能力。你可以在 \",\n      [\n        \"a\",\n        {\n          \"title\": null,\n          \"href\": \"/components/config-provider/#components-config-provider-demo-theme\"\n        },\n        \"ConfigProvider\"\n      ],\n      \" 进行体验。\"\n    ],\n    [\n      \"h2\",\n      \"注意事项\"\n    ],\n    [\n      \"ul\",\n      [\n        \"li\",\n        [\n          \"p\",\n          \"该功能通过动态修改 CSS Variable 实现，因而在 IE 中页面将无法正常展示。请先确认你的用户环境是否需要支持 IE。\"\n        ]\n      ],\n      [\n        \"li\",\n        [\n          \"p\",\n          \"该功能在 \",\n          [\n            \"code\",\n            \"antd@4.17.0-alpha.0\"\n          ],\n          \" 版本起支持。\"\n        ]\n      ]\n    ],\n    [\n      \"h2\",\n      \"如何使用\"\n    ],\n    [\n      \"h3\",\n      \"引入 antd.variable.min.css\"\n    ],\n    [\n      \"p\",\n      \"替换当前项目引入样式文件为 CSS Variable 版本：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"diff\",\n        \"highlighted\": \"<span class=\\\"token deleted\\\">-- import 'antd/dist/antd.min.css';</span>\\n<span class=\\\"token inserted\\\">++ import 'antd/dist/antd.variable.min.css';</span>\"\n      },\n      [\n        \"code\",\n        \"-- import 'antd/dist/antd.min.css';\\n++ import 'antd/dist/antd.variable.min.css';\"\n      ]\n    ],\n    [\n      \"p\",\n      \"注：如果你使用了 \",\n      [\n        \"code\",\n        \"babel-plugin-import\"\n      ],\n      \"，需要将其去除。\"\n    ],\n    [\n      \"h3\",\n      \"静态方法配置\"\n    ],\n    [\n      \"p\",\n      \"调用 ConfigProvider 配置方法设置主题色：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"ts\",\n        \"highlighted\": \"<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> ConfigProvider <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'antd'</span><span class=\\\"token punctuation\\\">;</span>\\n\\nConfigProvider<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">config</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  theme<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    primaryColor<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'#25b864'</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"import { ConfigProvider } from 'antd';\\n\\nConfigProvider.config({\\n  theme: {\\n    primaryColor: '#25b864',\\n  },\\n});\"\n      ]\n    ],\n    [\n      \"h2\",\n      \"冲突解决\"\n    ],\n    [\n      \"p\",\n      \"默认情况下，CSS Variable 会以 \",\n      [\n        \"code\",\n        \"--ant\"\n      ],\n      \" 作为前缀。当你的项目中引用多份 css 文件时，可以通过修改前缀的方式避免冲突。\"\n    ],\n    [\n      \"h3\",\n      \"代码调整\"\n    ],\n    [\n      \"p\",\n      \"通过 ConfigProvider 在顶层修改 \",\n      [\n        \"code\",\n        \"prefixCls\"\n      ],\n      \"：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"tsx\",\n        \"highlighted\": \"import { ConfigProvider } from <span class=\\\"token string\\\">'antd'</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\\n\\nexport <span class=\\\"token keyword\\\">default</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token operator\\\">&lt;</span>ConfigProvider prefixCls<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"custom\\\"</span><span class=\\\"token operator\\\">></span>\\n    <span class=\\\"token operator\\\">&lt;</span>MyApp <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>ConfigProvider<span class=\\\"token operator\\\">></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token comment\\\" spellcheck=\\\"true\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"import { ConfigProvider } from 'antd';\\n\\nexport default () => (\\n  <ConfigProvider prefixCls=\\\"custom\\\">\\n    <MyApp />\\n  </ConfigProvider>\\n);\"\n      ]\n    ],\n    [\n      \"p\",\n      \"通过静态方法设置主题色以及对应 \",\n      [\n        \"code\",\n        \"prefixCls\"\n      ],\n      \"：\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"ts\",\n        \"highlighted\": \"ConfigProvider<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">config</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  prefixCls<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'custom'</span><span class=\\\"token punctuation\\\">,</span>\\n  theme<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    primaryColor<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'#25b864'</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\"\n      },\n      [\n        \"code\",\n        \"ConfigProvider.config({\\n  prefixCls: 'custom',\\n  theme: {\\n    primaryColor: '#25b864',\\n  },\\n});\"\n      ]\n    ],\n    [\n      \"h3\",\n      \"编译 less\"\n    ],\n    [\n      \"p\",\n      \"由于前缀变更，你需要重新生成一份对应的 css 文件。\"\n    ],\n    [\n      \"pre\",\n      {\n        \"lang\": \"bash\",\n        \"highlighted\": \"lessc --modify-var<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"ant-prefix=custom\\\"</span> antd/dist/antd.variable.less modified.css\"\n      },\n      [\n        \"code\",\n        \"lessc --modify-var=\\\"ant-prefix=custom\\\" antd/dist/antd.variable.less modified.css\"\n      ]\n    ],\n    [\n      \"h3\",\n      \"相关变更\"\n    ],\n    [\n      \"p\",\n      \"为了实现 CSS Variable 并保持原始用法兼容性，我们于 \",\n      [\n        \"code\",\n        \"dist/antd.xxx.less\"\n      ],\n      \" 文件中添加了 \",\n      [\n        \"code\",\n        \"@root-entry-name: xxx;\"\n      ],\n      \" 入口注入以支持 less 动态加载对应的 less 文件。一般情况下，你不需要关注该变化。但是，如果你的项目中直接引用了 \",\n      [\n        \"code\",\n        \"lib|es\"\n      ],\n      \" 目录下的 less 文件。你需要在 less 入口处配置 \",\n      [\n        \"code\",\n        \"@root-entry-name: default;\"\n      ],\n      \" （或者 \",\n      [\n        \"code\",\n        \"@root-entry-name: variable;\"\n      ],\n      \"）以使 less 可以找到正确的入口。\"\n    ],\n    [\n      \"p\",\n      \"此外，我们将 \",\n      [\n        \"code\",\n        \"lib|es/style/minxins/index.less\"\n      ],\n      \" 中的 \",\n      [\n        \"code\",\n        \"@import 'motion'\"\n      ],\n      \" 和 \",\n      [\n        \"code\",\n        \"@import 'reset'\"\n      ],\n      \" 迁移至了 \",\n      [\n        \"code\",\n        \"lib|es/style/themes/xxx.less\"\n      ],\n      \" 中，因为这两个文件依赖了主题相关变量。如果你使用了相关内部方法，请自行调整。当然，我们还是建议直接使用 \",\n      [\n        \"code\",\n        \"dist\"\n      ],\n      \" 目录下的 \",\n      [\n        \"code\",\n        \"antd.less\"\n      ],\n      \" 文件而非调用内部文件，因为它们经常会受重构影响。\"\n    ]\n  ],\n  \"meta\": {\n    \"order\": 7.1,\n    \"title\": \"动态主题（实验性）\",\n    \"filename\": \"docs/react/customize-theme-variable.zh-CN.md\"\n  },\n  \"toc\": [\n    \"ul\",\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#注意事项\",\n          \"title\": \"注意事项\"\n        },\n        \"注意事项\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#如何使用\",\n          \"title\": \"如何使用\"\n        },\n        \"如何使用\"\n      ]\n    ],\n    [\n      \"li\",\n      [\n        \"a\",\n        {\n          \"className\": \"bisheng-toc-h2\",\n          \"href\": \"#冲突解决\",\n          \"title\": \"冲突解决\"\n        },\n        \"冲突解决\"\n      ]\n    ]\n  ]\n};\n\n//# sourceURL=webpack:///./docs/react/customize-theme-variable.zh-CN.md?./node_modules/bisheng/lib/loaders/source-loader.js");

/***/ })

}]);